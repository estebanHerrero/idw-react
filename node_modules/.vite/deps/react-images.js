import {
  require_prop_types
} from "./chunk-PXUV35Y3.js";
import {
  require_react_dom
} from "./chunk-3GS3N7PG.js";
import {
  require_react
} from "./chunk-LL6ON2IQ.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-CEQRFMJQ.js";

// node_modules/glam/lib/sheet.js
var require_sheet = __commonJS({
  "node_modules/glam/lib/sheet.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    function _toConsumableArray(arr) {
      if (Array.isArray(arr)) {
        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
          arr2[i] = arr[i];
        }
        return arr2;
      } else {
        return Array.from(arr);
      }
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function last(arr) {
      return arr[arr.length - 1];
    }
    var isBrowser2 = typeof window !== "undefined";
    var oldIE = function() {
      if (isBrowser2) {
        var div = document.createElement("div");
        div.innerHTML = "<!--[if lt IE 10]><i></i><![endif]-->";
        return div.getElementsByTagName("i").length === 1;
      }
      return false;
    }();
    var StyleSheet = function() {
      function StyleSheet2() {
        var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, document3 = _ref.document, _ref$speedy = _ref.speedy, speedy = _ref$speedy === void 0 ? false : _ref$speedy, _ref$maxLength = _ref.maxLength, maxLength = _ref$maxLength === void 0 ? oldIE ? 4e3 : 65e3 : _ref$maxLength;
        _classCallCheck(this, StyleSheet2);
        this.document = document3;
        this.isSpeedy = speedy;
        this.tags = [];
        this.maxLength = maxLength;
        this.ctr = 0;
        this.inject();
      }
      _createClass(StyleSheet2, [{
        key: "makeStyleTag",
        value: function makeStyleTag2() {
          var tag = this.document.createElement("style");
          tag.type = "text/css";
          tag.setAttribute("data-glamor", "");
          tag.appendChild(this.document.createTextNode(""));
          (this.document.head || this.document.getElementsByTagName("head")[0]).appendChild(tag);
          return tag;
        }
      }, {
        key: "sheetForTag",
        value: function sheetForTag(tag) {
          if (tag.sheet) {
            return tag.sheet;
          }
          for (var i = 0; i < this.document.styleSheets.length; i++) {
            if (this.document.styleSheets[i].ownerNode === tag) {
              return this.document.styleSheets[i];
            }
          }
        }
      }, {
        key: "getSheet",
        value: function getSheet() {
          return this.sheetForTag(last(this.tags));
        }
      }, {
        key: "inject",
        value: function inject() {
          if (this.injected) {
            throw new Error("already injected");
          }
          this.tags[0] = this.makeStyleTag();
          this.injected = true;
        }
      }, {
        key: "_insert",
        value: function _insert(rule) {
          try {
            var sheet = this.getSheet();
            sheet && sheet.insertRule(rule, rule.indexOf("@import") !== -1 ? 0 : sheet.cssRules.length);
          } catch (e) {
            if (true) {
              console.warn("whoops, illegal rule inserted", rule);
            }
          }
        }
      }, {
        key: "insert",
        value: function insert(rule) {
          var sheet = this.getSheet();
          if (this.isSpeedy && sheet && sheet.insertRule) {
            this._insert(rule);
          } else {
            if (rule.indexOf("@import") !== -1) {
              var tag = last(this.tags);
              tag.insertBefore(this.document.createTextNode(rule), tag.firstChild);
            } else {
              last(this.tags).appendChild(this.document.createTextNode(rule));
            }
          }
          this.ctr++;
          if (this.ctr % this.maxLength === 0) {
            this.tags.push(this.makeStyleTag());
          }
        }
      }, {
        key: "rules",
        value: function rules() {
          var _this = this;
          var arr = [];
          this.tags.forEach(function(tag) {
            return arr.splice.apply(arr, [arr.length, 0].concat(_toConsumableArray(Array.from(_this.sheetForTag(tag).cssRules))));
          });
          return arr;
        }
      }]);
      return StyleSheet2;
    }();
    exports.default = StyleSheet;
  }
});

// node_modules/fbjs/lib/camelize.js
var require_camelize = __commonJS({
  "node_modules/fbjs/lib/camelize.js"(exports, module) {
    "use strict";
    var _hyphenPattern = /-(.)/g;
    function camelize(string2) {
      return string2.replace(_hyphenPattern, function(_, character) {
        return character.toUpperCase();
      });
    }
    module.exports = camelize;
  }
});

// node_modules/fbjs/lib/camelizeStyleName.js
var require_camelizeStyleName = __commonJS({
  "node_modules/fbjs/lib/camelizeStyleName.js"(exports, module) {
    "use strict";
    var camelize = require_camelize();
    var msPattern2 = /^-ms-/;
    function camelizeStyleName(string2) {
      return camelize(string2.replace(msPattern2, "ms-"));
    }
    module.exports = camelizeStyleName;
  }
});

// node_modules/glam/lib/CSSPropertyOperations/CSSProperty.js
var require_CSSProperty = __commonJS({
  "node_modules/glam/lib/CSSPropertyOperations/CSSProperty.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var isUnitlessNumber = {
      animationIterationCount: true,
      borderImageOutset: true,
      borderImageSlice: true,
      borderImageWidth: true,
      boxFlex: true,
      boxFlexGroup: true,
      boxOrdinalGroup: true,
      columnCount: true,
      flex: true,
      flexGrow: true,
      flexPositive: true,
      flexShrink: true,
      flexNegative: true,
      flexOrder: true,
      gridRow: true,
      gridRowStart: true,
      gridRowEnd: true,
      gridColumn: true,
      gridColumnStart: true,
      gridColumnEnd: true,
      fontWeight: true,
      lineClamp: true,
      lineHeight: true,
      opacity: true,
      order: true,
      orphans: true,
      tabSize: true,
      widows: true,
      zIndex: true,
      zoom: true,
      // SVG-related properties
      fillOpacity: true,
      floodOpacity: true,
      stopOpacity: true,
      strokeDasharray: true,
      strokeDashoffset: true,
      strokeMiterlimit: true,
      strokeOpacity: true,
      strokeWidth: true
      /**
       * @param {string} prefix vendor-specific prefix, eg: Webkit
       * @param {string} key style name, eg: transitionDuration
       * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
       * WebkitTransitionDuration
       */
    };
    function prefixKey(prefix, key2) {
      return prefix + key2.charAt(0).toUpperCase() + key2.substring(1);
    }
    var prefixes = ["Webkit", "ms", "Moz", "O"];
    Object.keys(isUnitlessNumber).forEach(function(prop) {
      prefixes.forEach(function(prefix) {
        isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
      });
    });
    var shorthandPropertyExpansions = {
      background: {
        backgroundAttachment: true,
        backgroundColor: true,
        backgroundImage: true,
        backgroundPositionX: true,
        backgroundPositionY: true,
        backgroundRepeat: true
      },
      backgroundPosition: {
        backgroundPositionX: true,
        backgroundPositionY: true
      },
      border: {
        borderWidth: true,
        borderStyle: true,
        borderColor: true
      },
      borderBottom: {
        borderBottomWidth: true,
        borderBottomStyle: true,
        borderBottomColor: true
      },
      borderLeft: {
        borderLeftWidth: true,
        borderLeftStyle: true,
        borderLeftColor: true
      },
      borderRight: {
        borderRightWidth: true,
        borderRightStyle: true,
        borderRightColor: true
      },
      borderTop: {
        borderTopWidth: true,
        borderTopStyle: true,
        borderTopColor: true
      },
      font: {
        fontStyle: true,
        fontVariant: true,
        fontWeight: true,
        fontSize: true,
        lineHeight: true,
        fontFamily: true
      },
      outline: {
        outlineWidth: true,
        outlineStyle: true,
        outlineColor: true
      }
    };
    var CSSProperty = {
      isUnitlessNumber,
      shorthandPropertyExpansions
    };
    exports.default = CSSProperty;
  }
});

// node_modules/fbjs/lib/emptyFunction.js
var require_emptyFunction = __commonJS({
  "node_modules/fbjs/lib/emptyFunction.js"(exports, module) {
    "use strict";
    function makeEmptyFunction(arg) {
      return function() {
        return arg;
      };
    }
    var emptyFunction = function emptyFunction2() {
    };
    emptyFunction.thatReturns = makeEmptyFunction;
    emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
    emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
    emptyFunction.thatReturnsNull = makeEmptyFunction(null);
    emptyFunction.thatReturnsThis = function() {
      return this;
    };
    emptyFunction.thatReturnsArgument = function(arg) {
      return arg;
    };
    module.exports = emptyFunction;
  }
});

// node_modules/fbjs/lib/warning.js
var require_warning = __commonJS({
  "node_modules/fbjs/lib/warning.js"(exports, module) {
    "use strict";
    var emptyFunction = require_emptyFunction();
    var warning = emptyFunction;
    if (true) {
      printWarning = function printWarning2(format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        var argIndex = 0;
        var message = "Warning: " + format.replace(/%s/g, function() {
          return args[argIndex++];
        });
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
      warning = function warning2(condition, format) {
        if (format === void 0) {
          throw new Error("`warning(condition, format, ...args)` requires a warning message argument");
        }
        if (format.indexOf("Failed Composite propType: ") === 0) {
          return;
        }
        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }
          printWarning.apply(void 0, [format].concat(args));
        }
      };
    }
    var printWarning;
    module.exports = warning;
  }
});

// node_modules/glam/lib/CSSPropertyOperations/dangerousStyleValue.js
var require_dangerousStyleValue = __commonJS({
  "node_modules/glam/lib/CSSPropertyOperations/dangerousStyleValue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _CSSProperty = require_CSSProperty();
    var _CSSProperty2 = _interopRequireDefault(_CSSProperty);
    var _warning = require_warning();
    var _warning2 = _interopRequireDefault(_warning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var isUnitlessNumber = _CSSProperty2.default.isUnitlessNumber;
    var styleWarnings = {};
    function dangerousStyleValue(name, value, component) {
      var isEmpty = value == null || typeof value === "boolean" || value === "";
      if (isEmpty) {
        return "";
      }
      var isNonNumeric = isNaN(value);
      if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
        return "" + value;
      }
      if (typeof value === "string") {
        if (true) {
          if (component && value !== "0") {
            var owner = component._currentElement._owner;
            var ownerName = owner ? owner.getName() : null;
            if (ownerName && !styleWarnings[ownerName]) {
              styleWarnings[ownerName] = {};
            }
            var warned = false;
            if (ownerName) {
              var warnings = styleWarnings[ownerName];
              warned = warnings[name];
              if (!warned) {
                warnings[name] = true;
              }
            }
            if (!warned) {
              true ? (0, _warning2.default)(false, "a `%s` tag (owner: `%s`) was passed a numeric string value for CSS property `%s` (value: `%s`) which will be treated as a unitless number in a future version of React.", component._currentElement.type, ownerName || "unknown", name, value) : void 0;
            }
          }
        }
        value = value.trim();
      }
      return value + "px";
    }
    exports.default = dangerousStyleValue;
  }
});

// node_modules/fbjs/lib/hyphenate.js
var require_hyphenate = __commonJS({
  "node_modules/fbjs/lib/hyphenate.js"(exports, module) {
    "use strict";
    var _uppercasePattern = /([A-Z])/g;
    function hyphenate(string2) {
      return string2.replace(_uppercasePattern, "-$1").toLowerCase();
    }
    module.exports = hyphenate;
  }
});

// node_modules/fbjs/lib/hyphenateStyleName.js
var require_hyphenateStyleName = __commonJS({
  "node_modules/fbjs/lib/hyphenateStyleName.js"(exports, module) {
    "use strict";
    var hyphenate = require_hyphenate();
    var msPattern2 = /^ms-/;
    function hyphenateStyleName2(string2) {
      return hyphenate(string2).replace(msPattern2, "-ms-");
    }
    module.exports = hyphenateStyleName2;
  }
});

// node_modules/fbjs/lib/memoizeStringOnly.js
var require_memoizeStringOnly = __commonJS({
  "node_modules/fbjs/lib/memoizeStringOnly.js"(exports, module) {
    "use strict";
    function memoizeStringOnly(callback) {
      var cache2 = {};
      return function(string2) {
        if (!cache2.hasOwnProperty(string2)) {
          cache2[string2] = callback.call(this, string2);
        }
        return cache2[string2];
      };
    }
    module.exports = memoizeStringOnly;
  }
});

// node_modules/glam/lib/CSSPropertyOperations/index.js
var require_CSSPropertyOperations = __commonJS({
  "node_modules/glam/lib/CSSPropertyOperations/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.processStyleName = void 0;
    exports.createMarkupForStyles = createMarkupForStyles;
    var _camelizeStyleName = require_camelizeStyleName();
    var _camelizeStyleName2 = _interopRequireDefault(_camelizeStyleName);
    var _dangerousStyleValue = require_dangerousStyleValue();
    var _dangerousStyleValue2 = _interopRequireDefault(_dangerousStyleValue);
    var _hyphenateStyleName = require_hyphenateStyleName();
    var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);
    var _memoizeStringOnly = require_memoizeStringOnly();
    var _memoizeStringOnly2 = _interopRequireDefault(_memoizeStringOnly);
    var _warning = require_warning();
    var _warning2 = _interopRequireDefault(_warning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var processStyleName = exports.processStyleName = (0, _memoizeStringOnly2.default)(_hyphenateStyleName2.default);
    if (true) {
      badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
      badStyleValueWithSemicolonPattern = /;\s*$/;
      warnedStyleNames = {};
      warnedStyleValues = {};
      warnedForNaNValue = false;
      warnHyphenatedStyleName = function warnHyphenatedStyleName2(name, owner) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }
        warnedStyleNames[name] = true;
        true ? (0, _warning2.default)(false, "Unsupported style property %s. Did you mean %s?%s", name, (0, _camelizeStyleName2.default)(name), checkRenderMessage(owner)) : void 0;
      };
      warnBadVendoredStyleName = function warnBadVendoredStyleName2(name, owner) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }
        warnedStyleNames[name] = true;
        true ? (0, _warning2.default)(false, "Unsupported vendor-prefixed style property %s. Did you mean %s?%s", name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
      };
      warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon2(name, value, owner) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
          return;
        }
        warnedStyleValues[value] = true;
        true ? (0, _warning2.default)(false, `Style property values shouldn't contain a semicolon.%s Try "%s: %s" instead.`, checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, "")) : void 0;
      };
      warnStyleValueIsNaN = function warnStyleValueIsNaN2(name, value, owner) {
        if (warnedForNaNValue) {
          return;
        }
        warnedForNaNValue = true;
        true ? (0, _warning2.default)(false, "`NaN` is an invalid value for the `%s` css style property.%s", name, checkRenderMessage(owner)) : void 0;
      };
      checkRenderMessage = function checkRenderMessage2(owner) {
        if (owner) {
          var name = owner.getName();
          if (name) {
            return " Check the render method of `" + name + "`.";
          }
        }
        return "";
      };
      warnValidStyle = function warnValidStyle2(name, value, component) {
        var owner = void 0;
        if (component) {
          owner = component._currentElement._owner;
        }
        if (name.indexOf("-") > -1) {
          warnHyphenatedStyleName(name, owner);
        } else if (badVendoredStyleNamePattern.test(name)) {
          warnBadVendoredStyleName(name, owner);
        } else if (badStyleValueWithSemicolonPattern.test(value)) {
          warnStyleValueWithSemicolon(name, value, owner);
        }
        if (typeof value === "number" && isNaN(value)) {
          warnStyleValueIsNaN(name, value, owner);
        }
      };
    }
    var badVendoredStyleNamePattern;
    var badStyleValueWithSemicolonPattern;
    var warnedStyleNames;
    var warnedStyleValues;
    var warnedForNaNValue;
    var warnHyphenatedStyleName;
    var warnBadVendoredStyleName;
    var warnStyleValueWithSemicolon;
    var warnStyleValueIsNaN;
    var checkRenderMessage;
    var warnValidStyle;
    function createMarkupForStyles(styles2, component) {
      var serialized = "";
      for (var styleName in styles2) {
        var isCustomProp = styleName.indexOf("--") === 0;
        if (!styles2.hasOwnProperty(styleName)) {
          continue;
        }
        if (styleName === "label") {
          continue;
        }
        var styleValue = styles2[styleName];
        if (!isCustomProp) {
          warnValidStyle(styleName, styleValue, component);
        }
        if (styleValue != null) {
          if (isCustomProp) {
            serialized += styleName + ":" + styleValue + ";";
          } else {
            serialized += processStyleName(styleName) + ":";
            serialized += (0, _dangerousStyleValue2.default)(styleName, styleValue, component) + ";";
          }
        }
      }
      return serialized || null;
    }
  }
});

// node_modules/inline-style-prefixer/static/staticData.js
var require_staticData = __commonJS({
  "node_modules/inline-style-prefixer/static/staticData.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var w = ["Webkit"];
    var m = ["Moz"];
    var ms2 = ["ms"];
    var wm = ["Webkit", "Moz"];
    var wms = ["Webkit", "ms"];
    var wmms = ["Webkit", "Moz", "ms"];
    exports.default = {
      plugins: [],
      prefixMap: { "appearance": wm, "userSelect": wmms, "textEmphasisPosition": w, "textEmphasis": w, "textEmphasisStyle": w, "textEmphasisColor": w, "boxDecorationBreak": w, "clipPath": w, "maskImage": w, "maskMode": w, "maskRepeat": w, "maskPosition": w, "maskClip": w, "maskOrigin": w, "maskSize": w, "maskComposite": w, "mask": w, "maskBorderSource": w, "maskBorderMode": w, "maskBorderSlice": w, "maskBorderWidth": w, "maskBorderOutset": w, "maskBorderRepeat": w, "maskBorder": w, "maskType": w, "textDecorationStyle": w, "textDecorationSkip": w, "textDecorationLine": w, "textDecorationColor": w, "filter": w, "fontFeatureSettings": w, "breakAfter": wmms, "breakBefore": wmms, "breakInside": wmms, "columnCount": wm, "columnFill": wm, "columnGap": wm, "columnRule": wm, "columnRuleColor": wm, "columnRuleStyle": wm, "columnRuleWidth": wm, "columns": wm, "columnSpan": wm, "columnWidth": wm, "writingMode": wms, "flex": w, "flexBasis": w, "flexDirection": w, "flexGrow": w, "flexFlow": w, "flexShrink": w, "flexWrap": w, "alignContent": w, "alignItems": w, "alignSelf": w, "justifyContent": w, "order": w, "transform": w, "transformOrigin": w, "transformOriginX": w, "transformOriginY": w, "backfaceVisibility": w, "perspective": w, "perspectiveOrigin": w, "transformStyle": w, "transformOriginZ": w, "animation": w, "animationDelay": w, "animationDirection": w, "animationFillMode": w, "animationDuration": w, "animationIterationCount": w, "animationName": w, "animationPlayState": w, "animationTimingFunction": w, "backdropFilter": w, "fontKerning": w, "scrollSnapType": wms, "scrollSnapPointsX": wms, "scrollSnapPointsY": wms, "scrollSnapDestination": wms, "scrollSnapCoordinate": wms, "shapeImageThreshold": w, "shapeImageMargin": w, "shapeImageOutside": w, "hyphens": wmms, "flowInto": wms, "flowFrom": wms, "regionFragment": wms, "textAlignLast": m, "tabSize": m, "wrapFlow": ms2, "wrapThrough": ms2, "wrapMargin": ms2, "gridTemplateColumns": ms2, "gridTemplateRows": ms2, "gridTemplateAreas": ms2, "gridTemplate": ms2, "gridAutoColumns": ms2, "gridAutoRows": ms2, "gridAutoFlow": ms2, "grid": ms2, "gridRowStart": ms2, "gridColumnStart": ms2, "gridRowEnd": ms2, "gridRow": ms2, "gridColumn": ms2, "gridColumnEnd": ms2, "gridColumnGap": ms2, "gridRowGap": ms2, "gridArea": ms2, "gridGap": ms2, "textSizeAdjust": wms, "borderImage": w, "borderImageOutset": w, "borderImageRepeat": w, "borderImageSlice": w, "borderImageSource": w, "borderImageWidth": w, "transitionDelay": w, "transitionDuration": w, "transitionProperty": w, "transitionTimingFunction": w }
    };
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/utils/capitalizeString.js
var require_capitalizeString = __commonJS({
  "node_modules/inline-style-prefixer/utils/capitalizeString.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = capitalizeString;
    function capitalizeString(str) {
      return str.charAt(0).toUpperCase() + str.slice(1);
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/utils/prefixProperty.js
var require_prefixProperty = __commonJS({
  "node_modules/inline-style-prefixer/utils/prefixProperty.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = prefixProperty;
    var _capitalizeString = require_capitalizeString();
    var _capitalizeString2 = _interopRequireDefault(_capitalizeString);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function prefixProperty(prefixProperties, property, style) {
      if (prefixProperties.hasOwnProperty(property)) {
        var requiredPrefixes = prefixProperties[property];
        for (var i = 0, len = requiredPrefixes.length; i < len; ++i) {
          style[requiredPrefixes[i] + (0, _capitalizeString2.default)(property)] = style[property];
        }
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/utils/prefixValue.js
var require_prefixValue = __commonJS({
  "node_modules/inline-style-prefixer/utils/prefixValue.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = prefixValue;
    function prefixValue(plugins, property, value, style, metaData) {
      for (var i = 0, len = plugins.length; i < len; ++i) {
        var processedValue = plugins[i](property, value, style, metaData);
        if (processedValue) {
          return processedValue;
        }
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/static/plugins/cursor.js
var require_cursor = __commonJS({
  "node_modules/inline-style-prefixer/static/plugins/cursor.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = cursor;
    var prefixes = ["-webkit-", "-moz-", ""];
    var values2 = {
      "zoom-in": true,
      "zoom-out": true,
      grab: true,
      grabbing: true
    };
    function cursor(property, value) {
      if (property === "cursor" && values2.hasOwnProperty(value)) {
        return prefixes.map(function(prefix) {
          return prefix + value;
        });
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/css-in-js-utils/lib/isPrefixedValue.js
var require_isPrefixedValue = __commonJS({
  "node_modules/css-in-js-utils/lib/isPrefixedValue.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isPrefixedValue;
    var regex = /-webkit-|-moz-|-ms-/;
    function isPrefixedValue(value) {
      return typeof value === "string" && regex.test(value);
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/static/plugins/crossFade.js
var require_crossFade = __commonJS({
  "node_modules/inline-style-prefixer/static/plugins/crossFade.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = crossFade;
    var _isPrefixedValue = require_isPrefixedValue();
    var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var prefixes = ["-webkit-", ""];
    function crossFade(property, value) {
      if (typeof value === "string" && !(0, _isPrefixedValue2.default)(value) && value.indexOf("cross-fade(") > -1) {
        return prefixes.map(function(prefix) {
          return value.replace(/cross-fade\(/g, prefix + "cross-fade(");
        });
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/static/plugins/filter.js
var require_filter = __commonJS({
  "node_modules/inline-style-prefixer/static/plugins/filter.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = filter;
    var _isPrefixedValue = require_isPrefixedValue();
    var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var prefixes = ["-webkit-", ""];
    function filter(property, value) {
      if (typeof value === "string" && !(0, _isPrefixedValue2.default)(value) && value.indexOf("filter(") > -1) {
        return prefixes.map(function(prefix) {
          return value.replace(/filter\(/g, prefix + "filter(");
        });
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/static/plugins/flex.js
var require_flex = __commonJS({
  "node_modules/inline-style-prefixer/static/plugins/flex.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = flex;
    var values2 = {
      flex: ["-webkit-box", "-moz-box", "-ms-flexbox", "-webkit-flex", "flex"],
      "inline-flex": ["-webkit-inline-box", "-moz-inline-box", "-ms-inline-flexbox", "-webkit-inline-flex", "inline-flex"]
    };
    function flex(property, value) {
      if (property === "display" && values2.hasOwnProperty(value)) {
        return values2[value];
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/static/plugins/flexboxOld.js
var require_flexboxOld = __commonJS({
  "node_modules/inline-style-prefixer/static/plugins/flexboxOld.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = flexboxOld;
    var alternativeValues = {
      "space-around": "justify",
      "space-between": "justify",
      "flex-start": "start",
      "flex-end": "end",
      "wrap-reverse": "multiple",
      wrap: "multiple"
    };
    var alternativeProps = {
      alignItems: "WebkitBoxAlign",
      justifyContent: "WebkitBoxPack",
      flexWrap: "WebkitBoxLines"
    };
    function flexboxOld(property, value, style) {
      if (property === "flexDirection" && typeof value === "string") {
        if (value.indexOf("column") > -1) {
          style.WebkitBoxOrient = "vertical";
        } else {
          style.WebkitBoxOrient = "horizontal";
        }
        if (value.indexOf("reverse") > -1) {
          style.WebkitBoxDirection = "reverse";
        } else {
          style.WebkitBoxDirection = "normal";
        }
      }
      if (alternativeProps.hasOwnProperty(property)) {
        style[alternativeProps[property]] = alternativeValues[value] || value;
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/static/plugins/gradient.js
var require_gradient = __commonJS({
  "node_modules/inline-style-prefixer/static/plugins/gradient.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = gradient;
    var _isPrefixedValue = require_isPrefixedValue();
    var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var prefixes = ["-webkit-", "-moz-", ""];
    var values2 = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;
    function gradient(property, value) {
      if (typeof value === "string" && !(0, _isPrefixedValue2.default)(value) && values2.test(value)) {
        return prefixes.map(function(prefix) {
          return prefix + value;
        });
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/static/plugins/imageSet.js
var require_imageSet = __commonJS({
  "node_modules/inline-style-prefixer/static/plugins/imageSet.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = imageSet;
    var _isPrefixedValue = require_isPrefixedValue();
    var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var prefixes = ["-webkit-", ""];
    function imageSet(property, value) {
      if (typeof value === "string" && !(0, _isPrefixedValue2.default)(value) && value.indexOf("image-set(") > -1) {
        return prefixes.map(function(prefix) {
          return value.replace(/image-set\(/g, prefix + "image-set(");
        });
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/static/plugins/position.js
var require_position = __commonJS({
  "node_modules/inline-style-prefixer/static/plugins/position.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = position;
    function position(property, value) {
      if (property === "position" && value === "sticky") {
        return ["-webkit-sticky", "sticky"];
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/static/plugins/sizing.js
var require_sizing = __commonJS({
  "node_modules/inline-style-prefixer/static/plugins/sizing.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = sizing;
    var prefixes = ["-webkit-", "-moz-", ""];
    var properties = {
      maxHeight: true,
      maxWidth: true,
      width: true,
      height: true,
      columnWidth: true,
      minWidth: true,
      minHeight: true
    };
    var values2 = {
      "min-content": true,
      "max-content": true,
      "fill-available": true,
      "fit-content": true,
      "contain-floats": true
    };
    function sizing(property, value) {
      if (properties.hasOwnProperty(property) && values2.hasOwnProperty(value)) {
        return prefixes.map(function(prefix) {
          return prefix + value;
        });
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/hyphenate-style-name/index.js
var hyphenate_style_name_exports = {};
__export(hyphenate_style_name_exports, {
  default: () => hyphenate_style_name_default
});
function toHyphenLower(match) {
  return "-" + match.toLowerCase();
}
function hyphenateStyleName(name) {
  if (cache.hasOwnProperty(name)) {
    return cache[name];
  }
  var hName = name.replace(uppercasePattern, toHyphenLower);
  return cache[name] = msPattern.test(hName) ? "-" + hName : hName;
}
var uppercasePattern, msPattern, cache, hyphenate_style_name_default;
var init_hyphenate_style_name = __esm({
  "node_modules/hyphenate-style-name/index.js"() {
    uppercasePattern = /[A-Z]/g;
    msPattern = /^ms-/;
    cache = {};
    hyphenate_style_name_default = hyphenateStyleName;
  }
});

// node_modules/css-in-js-utils/lib/hyphenateProperty.js
var require_hyphenateProperty = __commonJS({
  "node_modules/css-in-js-utils/lib/hyphenateProperty.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = hyphenateProperty;
    var _hyphenateStyleName = (init_hyphenate_style_name(), __toCommonJS(hyphenate_style_name_exports));
    var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function hyphenateProperty(property) {
      return (0, _hyphenateStyleName2.default)(property);
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/static/plugins/transition.js
var require_transition = __commonJS({
  "node_modules/inline-style-prefixer/static/plugins/transition.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = transition;
    var _hyphenateProperty = require_hyphenateProperty();
    var _hyphenateProperty2 = _interopRequireDefault(_hyphenateProperty);
    var _isPrefixedValue = require_isPrefixedValue();
    var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);
    var _capitalizeString = require_capitalizeString();
    var _capitalizeString2 = _interopRequireDefault(_capitalizeString);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var properties = {
      transition: true,
      transitionProperty: true,
      WebkitTransition: true,
      WebkitTransitionProperty: true,
      MozTransition: true,
      MozTransitionProperty: true
    };
    var prefixMapping = {
      Webkit: "-webkit-",
      Moz: "-moz-",
      ms: "-ms-"
    };
    function prefixValue(value, propertyPrefixMap) {
      if ((0, _isPrefixedValue2.default)(value)) {
        return value;
      }
      var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);
      for (var i = 0, len = multipleValues.length; i < len; ++i) {
        var singleValue = multipleValues[i];
        var values2 = [singleValue];
        for (var property in propertyPrefixMap) {
          var dashCaseProperty = (0, _hyphenateProperty2.default)(property);
          if (singleValue.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== "order") {
            var prefixes = propertyPrefixMap[property];
            for (var j = 0, pLen = prefixes.length; j < pLen; ++j) {
              values2.unshift(singleValue.replace(dashCaseProperty, prefixMapping[prefixes[j]] + dashCaseProperty));
            }
          }
        }
        multipleValues[i] = values2.join(",");
      }
      return multipleValues.join(",");
    }
    function transition(property, value, style, propertyPrefixMap) {
      if (typeof value === "string" && properties.hasOwnProperty(property)) {
        var outputValue = prefixValue(value, propertyPrefixMap);
        var webkitOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function(val) {
          return !/-moz-|-ms-/.test(val);
        }).join(",");
        if (property.indexOf("Webkit") > -1) {
          return webkitOutput;
        }
        var mozOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function(val) {
          return !/-webkit-|-ms-/.test(val);
        }).join(",");
        if (property.indexOf("Moz") > -1) {
          return mozOutput;
        }
        style["Webkit" + (0, _capitalizeString2.default)(property)] = webkitOutput;
        style["Moz" + (0, _capitalizeString2.default)(property)] = mozOutput;
        return outputValue;
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/glam/lib/prefix.js
var require_prefix = __commonJS({
  "node_modules/glam/lib/prefix.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = prefixer;
    var _staticData = require_staticData();
    var _staticData2 = _interopRequireDefault(_staticData);
    var _prefixProperty = require_prefixProperty();
    var _prefixProperty2 = _interopRequireDefault(_prefixProperty);
    var _prefixValue = require_prefixValue();
    var _prefixValue2 = _interopRequireDefault(_prefixValue);
    var _cursor = require_cursor();
    var _cursor2 = _interopRequireDefault(_cursor);
    var _crossFade = require_crossFade();
    var _crossFade2 = _interopRequireDefault(_crossFade);
    var _filter = require_filter();
    var _filter2 = _interopRequireDefault(_filter);
    var _flex = require_flex();
    var _flex2 = _interopRequireDefault(_flex);
    var _flexboxOld = require_flexboxOld();
    var _flexboxOld2 = _interopRequireDefault(_flexboxOld);
    var _gradient = require_gradient();
    var _gradient2 = _interopRequireDefault(_gradient);
    var _imageSet = require_imageSet();
    var _imageSet2 = _interopRequireDefault(_imageSet);
    var _position = require_position();
    var _position2 = _interopRequireDefault(_position);
    var _sizing = require_sizing();
    var _sizing2 = _interopRequireDefault(_sizing);
    var _transition = require_transition();
    var _transition2 = _interopRequireDefault(_transition);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var plugins = [_crossFade2.default, _cursor2.default, _filter2.default, _flexboxOld2.default, _gradient2.default, _imageSet2.default, _position2.default, _sizing2.default, _transition2.default, _flex2.default];
    var prefixMap = _staticData2.default.prefixMap;
    function prefixer(style) {
      for (var property in style) {
        var value = style[property];
        var processedValue = (0, _prefixValue2.default)(plugins, property, value, style, prefixMap);
        if (processedValue) {
          style[property] = processedValue;
        }
        (0, _prefixProperty2.default)(prefixMap, property, style);
      }
      return style;
    }
  }
});

// node_modules/glam/lib/plugins.js
var require_plugins = __commonJS({
  "node_modules/glam/lib/plugins.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends3 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    exports.fallbacks = fallbacks;
    exports.contentWrap = contentWrap;
    exports.prefixes = prefixes;
    var _CSSPropertyOperations = require_CSSPropertyOperations();
    var _prefix = require_prefix();
    var _prefix2 = _interopRequireDefault(_prefix);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function fallbacks(node2) {
      var hasArray = Object.keys(node2.style).map(function(x) {
        return Array.isArray(node2.style[x]);
      }).indexOf(true) >= 0;
      if (hasArray) {
        var style = node2.style;
        var flattened = Object.keys(style).reduce(function(o, key2) {
          o[key2] = Array.isArray(style[key2]) ? style[key2].join("; " + (0, _CSSPropertyOperations.processStyleName)(key2) + ": ") : style[key2];
          return o;
        }, {});
        return _extends3({}, node2, { style: flattened });
      }
      return node2;
    }
    var contentValues = ["normal", "none", "counter", "open-quote", "close-quote", "no-open-quote", "no-close-quote", "initial", "inherit"];
    function contentWrap(node2) {
      if (node2.style.content) {
        var cont = node2.style.content;
        if (contentValues.indexOf(cont) >= 0) {
          return node2;
        }
        if (/^(attr|calc|counters?|url)\(/.test(cont)) {
          return node2;
        }
        if (cont.charAt(0) === cont.charAt(cont.length - 1) && (cont.charAt(0) === '"' || cont.charAt(0) === "'")) {
          return node2;
        }
        return _extends3({}, node2, { style: _extends3({}, node2.style, { content: '"' + cont + '"' }) });
      }
      return node2;
    }
    function prefixes(node2) {
      return _extends3({}, node2, { style: (0, _prefix2.default)(_extends3({}, node2.style)) });
    }
  }
});

// node_modules/glam/lib/generate.js
var require_generate = __commonJS({
  "node_modules/glam/lib/generate.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.simulations = simulations;
    exports.default = generate;
    var _CSSPropertyOperations = require_CSSPropertyOperations();
    var _plugins = require_plugins();
    var canSimulate = true;
    function simulations() {
      var bool2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
      canSimulate = !!bool2;
    }
    function simple(str) {
      var replace = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
      return str.toLowerCase().replace(/[^a-z0-9]/g, replace);
    }
    var selectorTokenizer = /[(),]|"(?:\\.|[^"\n])*"|'(?:\\.|[^'\n])*'|\/\*[\s\S]*?\*\//g;
    function splitSelector(selector2) {
      if (selector2.indexOf(",") === -1) {
        return [selector2];
      }
      var indices = [], res = [], inParen = 0, o;
      while (o = selectorTokenizer.exec(selector2)) {
        switch (o[0]) {
          case "(":
            inParen++;
            break;
          case ")":
            inParen--;
            break;
          case ",":
            if (inParen)
              break;
            indices.push(o.index);
        }
      }
      for (o = indices.length; o--; ) {
        res.unshift(selector2.slice(indices[o] + 1));
        selector2 = selector2.slice(0, indices[o]);
      }
      res.unshift(selector2);
      return res;
    }
    function selector(id) {
      var path = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
      if (!id && path) {
        return path.replace(/\&/g, "");
      }
      if (id && !path)
        return "." + id;
      var x = splitSelector(path).map(function(x2) {
        return x2.indexOf("&") >= 0 ? x2.replace(/\&/gm, "." + id) : "." + id + x2;
      }).join(",");
      if (canSimulate && /^\&\:/.exec(path) && !/\s/.exec(path)) {
        x += ",." + id + "[data-simulate-" + simple(path) + "]";
      }
      return x;
    }
    function toCSS(node2) {
      var result = (0, _plugins.prefixes)((0, _plugins.fallbacks)((0, _plugins.contentWrap)(node2)));
      return result.selector + "{" + (0, _CSSPropertyOperations.createMarkupForStyles)(result.style) + "}";
    }
    function toCSSArray(id, parsed) {
      var css = [];
      var plain = parsed.plain, selects = parsed.selects, medias = parsed.medias, supports = parsed.supports;
      if (plain) {
        css.push(toCSS({ style: plain, selector: selector(id) }));
      }
      if (selects) {
        Object.keys(selects).forEach(function(key2) {
          return css.push(toCSS({ style: selects[key2], selector: selector(id, key2) }));
        });
      }
      if (medias) {
        Object.keys(medias).forEach(function(key2) {
          return css.push(key2 + "{" + toCSSArray(id, medias[key2]).join("") + "}");
        });
      }
      if (supports) {
        Object.keys(supports).forEach(function(key2) {
          return css.push(key2 + "{" + toCSSArray(id, supports[key2]).join("") + "}");
        });
      }
      return css;
    }
    function generate(_ref) {
      var className2 = _ref.className, parsed = _ref.parsed;
      return toCSSArray(className2, parsed);
    }
  }
});

// node_modules/glam/lib/Glam.js
var require_Glam = __commonJS({
  "node_modules/glam/lib/Glam.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _sheet = require_sheet();
    var _sheet2 = _interopRequireDefault(_sheet);
    var _generate = require_generate();
    var _generate2 = _interopRequireDefault(_generate);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    var isBrowser2 = typeof window !== "undefined";
    var cache2 = /* @__PURE__ */ new WeakMap();
    var Glam = function() {
      function Glam2() {
        var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        _classCallCheck(this, Glam2);
        this.props = props;
        if (isBrowser2) {
          var doc = this.props.document;
          var cached = cache2.get(doc);
          if (cached) {
            return cached;
          }
          cache2.set(doc, this);
          this.sheet = new _sheet2.default({ document: doc });
        }
        this.inserted = {};
        this.tagged = {};
      }
      _createClass(Glam2, [{
        key: "hydrate",
        value: function hydrate(ids) {
          var _this = this;
          ids.forEach(function(id) {
            return _this.inserted[id] = true;
          });
        }
      }, {
        key: "tag",
        value: function tag(id) {
          this.tagged[id] = true;
        }
      }, {
        key: "isTagged",
        value: function isTagged(id) {
          return this.tagged[id];
        }
      }, {
        key: "insert",
        value: function insert(ast) {
          var _this2 = this;
          if (!this.inserted[ast.className]) {
            var _rules = (0, _generate2.default)(ast);
            if (isBrowser2) {
              _rules.forEach(function(rule) {
                return _this2.sheet.insert(rule);
              });
            }
            this.inserted[ast.className] = true;
          }
        }
      }]);
      return Glam2;
    }();
    exports.default = Glam;
  }
});

// node_modules/glam/lib/flatten.js
var require_flatten = __commonJS({
  "node_modules/glam/lib/flatten.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = flatten;
    function flatten(inArr) {
      var arr = [];
      for (var i = 0; i < inArr.length; i++) {
        if (Array.isArray(inArr[i]))
          arr = arr.concat(flatten(inArr[i]));
        else
          arr = arr.concat(inArr[i]);
      }
      return arr;
    }
  }
});

// node_modules/glam/lib/hash.js
var require_hash = __commonJS({
  "node_modules/glam/lib/hash.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = hashify;
    function hashify(obj) {
      var str = JSON.stringify(obj);
      var toRet = doHash(str, str.length).toString(36);
      return toRet;
    }
    function doHash(str, seed) {
      var m = 1540483477;
      var r = 24;
      var h = seed ^ str.length;
      var length = str.length;
      var currentIndex = 0;
      while (length >= 4) {
        var k = UInt32(str, currentIndex);
        k = Umul32(k, m);
        k ^= k >>> r;
        k = Umul32(k, m);
        h = Umul32(h, m);
        h ^= k;
        currentIndex += 4;
        length -= 4;
      }
      switch (length) {
        case 3:
          h ^= UInt16(str, currentIndex);
          h ^= str.charCodeAt(currentIndex + 2) << 16;
          h = Umul32(h, m);
          break;
        case 2:
          h ^= UInt16(str, currentIndex);
          h = Umul32(h, m);
          break;
        case 1:
          h ^= str.charCodeAt(currentIndex);
          h = Umul32(h, m);
          break;
      }
      h ^= h >>> 13;
      h = Umul32(h, m);
      h ^= h >>> 15;
      return h >>> 0;
    }
    function UInt32(str, pos) {
      return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8) + (str.charCodeAt(pos++) << 16) + (str.charCodeAt(pos) << 24);
    }
    function UInt16(str, pos) {
      return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8);
    }
    function Umul32(n, m) {
      n = n | 0;
      m = m | 0;
      var nlo = n & 65535;
      var nhi = n >>> 16;
      var res = nlo * m + ((nhi * m & 65535) << 16) | 0;
      return res;
    }
  }
});

// node_modules/glam/lib/parse.js
var require_parse = __commonJS({
  "node_modules/glam/lib/parse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.cssLabels = cssLabels;
    exports.default = parse2;
    var _flatten = require_flatten();
    var _flatten2 = _interopRequireDefault(_flatten);
    var _hash = require_hash();
    var _hash2 = _interopRequireDefault(_hash);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var hasLabels = true;
    function cssLabels(bool2) {
      hasLabels = !!bool2;
    }
    var prefixedPseudoSelectors = {
      "::placeholder": ["::-webkit-input-placeholder", "::-moz-placeholder", "::-ms-input-placeholder"],
      ":fullscreen": [":-webkit-full-screen", ":-moz-full-screen", ":-ms-fullscreen"]
    };
    function isSelector(key2) {
      var possibles = [":", ".", "[", ">", " "], found = false, ch = key2.charAt(0);
      for (var i = 0; i < possibles.length; i++) {
        if (ch === possibles[i]) {
          found = true;
          break;
        }
      }
      return found || key2.indexOf("&") >= 0;
    }
    var selectorTokenizer = /[(),]|"(?:\\.|[^"\n])*"|'(?:\\.|[^'\n])*'|\/\*[\s\S]*?\*\//g;
    function splitSelector(selector) {
      if (selector.indexOf(",") === -1) {
        return [selector];
      }
      var indices = [], res = [], inParen = 0, o;
      while (o = selectorTokenizer.exec(selector)) {
        switch (o[0]) {
          case "(":
            inParen++;
            break;
          case ")":
            inParen--;
            break;
          case ",":
            if (inParen)
              break;
            indices.push(o.index);
        }
      }
      for (o = indices.length; o--; ) {
        res.unshift(selector.slice(indices[o] + 1));
        selector = selector.slice(0, indices[o]);
      }
      res.unshift(selector);
      return res;
    }
    function joinSelectors(a, b) {
      var as = splitSelector(a).map(function(a2) {
        return !(a2.indexOf("&") >= 0) ? "&" + a2 : a2;
      });
      var bs = splitSelector(b).map(function(b2) {
        return !(b2.indexOf("&") >= 0) ? "&" + b2 : b2;
      });
      return bs.reduce(function(arr, b2) {
        return arr.concat(as.map(function(a2) {
          return b2.replace(/\&/g, a2);
        }));
      }, []).join(",");
    }
    function joinMediaQueries(a, b) {
      return a ? "@media " + a.substring(6) + " and " + b.substring(6) : b;
    }
    function isMediaQuery(key2) {
      return key2.indexOf("@media") === 0;
    }
    function isSupports(key2) {
      return key2.indexOf("@supports") === 0;
    }
    function joinSupports(a, b) {
      return a ? "@supports " + a.substring(9) + " and " + b.substring(9) : b;
    }
    function construct(dest, _ref) {
      var _ref$selector = _ref.selector, selector = _ref$selector === void 0 ? "" : _ref$selector, _ref$mq = _ref.mq, mq = _ref$mq === void 0 ? "" : _ref$mq, _ref$supp = _ref.supp, supp = _ref$supp === void 0 ? "" : _ref$supp, _ref$inputs = _ref.inputs, inputs = _ref$inputs === void 0 ? {} : _ref$inputs;
      var inputArray = !Array.isArray(inputs) ? [inputs] : (0, _flatten2.default)(inputs);
      inputArray.filter(function(x) {
        return !!x;
      }).forEach(function(input) {
        var src = input;
        Object.keys(src || {}).forEach(function(key2) {
          if (isSelector(key2)) {
            if (prefixedPseudoSelectors[key2]) {
              prefixedPseudoSelectors[key2].forEach(function(p) {
                return construct(dest, {
                  selector: joinSelectors(selector, p),
                  mq,
                  supp,
                  inputs: src[key2]
                });
              });
            }
            construct(dest, {
              selector: joinSelectors(selector, key2),
              mq,
              supp,
              inputs: src[key2]
            });
          } else if (isMediaQuery(key2)) {
            construct(dest, {
              selector,
              mq: joinMediaQueries(mq, key2),
              supp,
              inputs: src[key2]
            });
          } else if (isSupports(key2)) {
            construct(dest, {
              selector,
              mq,
              supp: joinSupports(supp, key2),
              inputs: src[key2]
            });
          } else {
            var _dest = dest;
            if (supp) {
              _dest[supp] = _dest[supp] || {};
              _dest = _dest[supp];
            }
            if (mq) {
              _dest[mq] = _dest[mq] || {};
              _dest = _dest[mq];
            }
            if (selector) {
              _dest[selector] = _dest[selector] || {};
              _dest = _dest[selector];
            }
            if (key2 === "label") {
              if (hasLabels) {
                dest.label = dest.label.concat(src.label);
              }
            } else {
              _dest[key2] = src[key2];
            }
          }
        });
      });
      return dest;
    }
    function groupByType(style) {
      var plain = void 0, selects = void 0, medias = void 0, supports = void 0;
      Object.keys(style).forEach(function(key2) {
        if (key2.indexOf("&") >= 0) {
          selects = selects || {};
          selects[key2] = style[key2];
        } else if (key2.indexOf("@media") === 0) {
          medias = medias || {};
          medias[key2] = groupByType(style[key2]);
        } else if (key2.indexOf("@supports") === 0) {
          supports = supports || {};
          supports[key2] = groupByType(style[key2]);
        } else if (key2 === "label") {
          if (style.label.length > 0) {
            plain = plain || {};
            plain.label = hasLabels ? style.label.join(".") : "";
          }
        } else {
          plain = plain || {};
          plain[key2] = style[key2];
        }
      });
      return { plain, selects, medias, supports };
    }
    function parse2(css) {
      var parsed = groupByType(construct({ label: [] }, { inputs: css }));
      var className2 = "css-" + (0, _hash2.default)(parsed);
      return { className: className2, parsed };
    }
  }
});

// node_modules/glam/lib/index.js
var require_lib = __commonJS({
  "node_modules/glam/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends3 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    exports.default = glam2;
    exports.hydrate = hydrate;
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _reactDom = require_react_dom();
    var _Glam = require_Glam();
    var _Glam2 = _interopRequireDefault(_Glam);
    var _parse = require_parse();
    var _parse2 = _interopRequireDefault(_parse);
    var _generate = require_generate();
    var _generate2 = _interopRequireDefault(_generate);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var isBrowser2 = typeof window !== "undefined";
    var isHydrating = false;
    var nullClass = (0, _parse2.default)({}).className;
    var Styled = function(_React$Component) {
      _inherits(Styled2, _React$Component);
      function Styled2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Styled2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Styled2.__proto__ || Object.getPrototypeOf(Styled2)).call.apply(_ref, [this].concat(args))), _this), _this.glam = _this.context.glam || new _Glam2.default(isBrowser2 ? { document } : void 0), _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Styled2, [{
        key: "getChildContext",
        value: function getChildContext() {
          return {
            glam: this.glam
          };
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.flush) {
            this.flush();
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var css = this.props.css;
          var ast = (0, _parse2.default)(css);
          var cls = ast.className === nullClass ? "" : ast.className;
          var element = this.props.render(cls);
          if (!isBrowser2 || isBrowser2 && isHydrating) {
            if (this.glam.isTagged(ast.className)) {
              return element;
            }
            this.glam.tag(ast.className);
            this.flush = function() {
              return _this2.glam.insert(ast);
            };
            var generated = (0, _generate2.default)(ast).join("");
            return generated ? _react.Children.toArray([_react2.default.createElement("style", { dangerouslySetInnerHTML: { __html: generated } }), element]) : element;
          }
          this.glam.insert(ast);
          return element;
        }
      }]);
      return Styled2;
    }(_react2.default.Component);
    Styled.displayName = "css";
    Styled.contextTypes = {
      glam: _propTypes2.default.object
    };
    Styled.childContextTypes = {
      glam: _propTypes2.default.object
    };
    function glam2(Type, props) {
      for (var _len2 = arguments.length, children2 = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        children2[_key2 - 2] = arguments[_key2];
      }
      var _ref2 = props || {}, css = _ref2.css, className2 = _ref2.className, rest = _objectWithoutProperties(_ref2, ["css", "className"]);
      if (css) {
        return _react2.default.createElement(Styled, {
          css,
          render: function render(cls) {
            var applyClass = className2 ? cls ? className2 + " " + cls : className2 : cls;
            return _react.createElement.apply(void 0, [Type, applyClass ? _extends3({}, rest, { className: applyClass }) : rest].concat(children2));
          }
        });
      } else {
        return _react.createElement.apply(void 0, [Type, props].concat(children2));
      }
    }
    function hydrate(element, dom, callback) {
      isHydrating = true;
      (0, _reactDom.hydrate)(element, dom, function() {
        isHydrating = false;
        callback && callback();
      });
    }
  }
});

// node_modules/mitt/dist/mitt.es.js
var mitt_es_exports = {};
__export(mitt_es_exports, {
  default: () => mitt_es_default
});
function mitt(all) {
  all = all || /* @__PURE__ */ Object.create(null);
  return {
    /**
     * Register an event handler for the given type.
     *
     * @param  {String} type	Type of event to listen for, or `"*"` for all events
     * @param  {Function} handler Function to call in response to given event
     * @memberOf mitt
     */
    on: function on(type, handler) {
      (all[type] || (all[type] = [])).push(handler);
    },
    /**
     * Remove an event handler for the given type.
     *
     * @param  {String} type	Type of event to unregister `handler` from, or `"*"`
     * @param  {Function} handler Handler function to remove
     * @memberOf mitt
     */
    off: function off(type, handler) {
      if (all[type]) {
        all[type].splice(all[type].indexOf(handler) >>> 0, 1);
      }
    },
    /**
     * Invoke all handlers for the given type.
     * If present, `"*"` handlers are invoked after type-matched handlers.
     *
     * @param {String} type  The event type to invoke
     * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler
     * @memberOf mitt
     */
    emit: function emit(type, evt) {
      (all[type] || []).slice().map(function(handler) {
        handler(evt);
      });
      (all["*"] || []).slice().map(function(handler) {
        handler(type, evt);
      });
    }
  };
}
var mitt_es_default;
var init_mitt_es = __esm({
  "node_modules/mitt/dist/mitt.es.js"() {
    mitt_es_default = mitt;
  }
});

// node_modules/tabbable/index.js
var require_tabbable = __commonJS({
  "node_modules/tabbable/index.js"(exports, module) {
    module.exports = function(el, options) {
      options = options || {};
      var elementDocument = el.ownerDocument || el;
      var basicTabbables = [];
      var orderedTabbables = [];
      var isUnavailable = createIsUnavailable(elementDocument);
      var candidateSelectors = [
        "input",
        "select",
        "a[href]",
        "textarea",
        "button",
        "[tabindex]"
      ];
      var candidates = el.querySelectorAll(candidateSelectors.join(","));
      if (options.includeContainer) {
        var matches = Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
        if (candidateSelectors.some(function(candidateSelector) {
          return matches.call(el, candidateSelector);
        })) {
          candidates = Array.prototype.slice.apply(candidates);
          candidates.unshift(el);
        }
      }
      var candidate, candidateIndex;
      for (var i = 0, l = candidates.length; i < l; i++) {
        candidate = candidates[i];
        candidateIndex = parseInt(candidate.getAttribute("tabindex"), 10) || candidate.tabIndex;
        if (candidateIndex < 0 || candidate.tagName === "INPUT" && candidate.type === "hidden" || candidate.disabled || isUnavailable(candidate, elementDocument)) {
          continue;
        }
        if (candidateIndex === 0) {
          basicTabbables.push(candidate);
        } else {
          orderedTabbables.push({
            index: i,
            tabIndex: candidateIndex,
            node: candidate
          });
        }
      }
      var tabbableNodes = orderedTabbables.sort(function(a, b) {
        return a.tabIndex === b.tabIndex ? a.index - b.index : a.tabIndex - b.tabIndex;
      }).map(function(a) {
        return a.node;
      });
      Array.prototype.push.apply(tabbableNodes, basicTabbables);
      return tabbableNodes;
    };
    function createIsUnavailable(elementDocument) {
      var isOffCache = [];
      function isOff(node2, nodeComputedStyle) {
        if (node2 === elementDocument.documentElement)
          return false;
        for (var i = 0, length = isOffCache.length; i < length; i++) {
          if (isOffCache[i][0] === node2)
            return isOffCache[i][1];
        }
        nodeComputedStyle = nodeComputedStyle || elementDocument.defaultView.getComputedStyle(node2);
        var result = false;
        if (nodeComputedStyle.display === "none") {
          result = true;
        } else if (node2.parentNode) {
          result = isOff(node2.parentNode);
        }
        isOffCache.push([node2, result]);
        return result;
      }
      return function isUnavailable(node2) {
        if (node2 === elementDocument.documentElement)
          return false;
        var computedStyle = elementDocument.defaultView.getComputedStyle(node2);
        if (isOff(node2, computedStyle))
          return true;
        return computedStyle.visibility === "hidden";
      };
    }
  }
});

// node_modules/animation-bus/lib/piecewise.js
var require_piecewise = __commonJS({
  "node_modules/animation-bus/lib/piecewise.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = piecewise;
    function piecewise(xs, ys) {
      return function(x) {
        if (x <= xs[0]) {
          return ys[0];
        } else if (x >= xs[xs.length - 1]) {
          return ys[xs.length - 1];
        }
        var lo = 0;
        var hi = xs.length - 1;
        while (hi - lo > 1) {
          var mid = lo + hi >> 1;
          if (x < xs[mid]) {
            hi = mid;
          } else {
            lo = mid;
          }
        }
        return ys[lo] + (ys[hi] - ys[lo]) / (xs[hi] - xs[lo]) * (x - xs[lo]);
      };
    }
    module.exports = exports["default"];
  }
});

// node_modules/animation-bus/lib/polylinear-scale.js
var require_polylinear_scale = __commonJS({
  "node_modules/animation-bus/lib/polylinear-scale.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
      return typeof obj;
    } : function(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
    var _slicedToArray = /* @__PURE__ */ function() {
      function sliceIterator(arr, i) {
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = void 0;
        try {
          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);
            if (i && _arr.length === i)
              break;
          }
        } catch (err) {
          _d = true;
          _e = err;
        } finally {
          try {
            if (!_n && _i["return"])
              _i["return"]();
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
      return function(arr, i) {
        if (Array.isArray(arr)) {
          return arr;
        } else if (Symbol.iterator in Object(arr)) {
          return sliceIterator(arr, i);
        } else {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
      };
    }();
    exports.default = polylinearScale;
    var _piecewise = require_piecewise();
    var _piecewise2 = _interopRequireDefault(_piecewise);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function polylinearScale(stops) {
      var xs = [];
      var ys_r = [];
      var ys_g = [];
      var ys_b = [];
      stops.forEach(function(_ref) {
        var _ref2 = _slicedToArray(_ref, 2), domain = _ref2[0], range = _ref2[1];
        xs.push(domain);
        if (isNaN(range)) {
          ys_r.push(parseInt(range.substr(1, 2), 16));
          ys_g.push(parseInt(range.substr(3, 2), 16));
          ys_b.push(parseInt(range.substr(5, 2), 16));
        } else {
          ys_r.push(range);
        }
      });
      var pw_r = (0, _piecewise2.default)(xs, ys_r);
      if (ys_g.length && ys_b.length) {
        var _ret = function() {
          var pw_g = (0, _piecewise2.default)(xs, ys_g);
          var pw_b = (0, _piecewise2.default)(xs, ys_b);
          return {
            v: function v(x) {
              return "rgb(" + Math.round(pw_r(x)) + ", " + Math.round(pw_g(x)) + ", " + Math.round(pw_b(x)) + ")";
            }
          };
        }();
        if ((typeof _ret === "undefined" ? "undefined" : _typeof2(_ret)) === "object")
          return _ret.v;
      } else {
        return function(x) {
          return pw_r(x);
        };
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/animation-bus/lib/animation-bus.js
var require_animation_bus = __commonJS({
  "node_modules/animation-bus/lib/animation-bus.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _polylinearScale = require_polylinear_scale();
    var _polylinearScale2 = _interopRequireDefault(_polylinearScale);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    var transformUnits = {
      perspective: "px",
      rotate: "deg",
      rotateX: "deg",
      rotateY: "deg",
      rotateZ: "deg",
      scale: "",
      scaleX: "",
      scaleY: "",
      scaleZ: "",
      skew: "deg",
      skewX: "deg",
      skewY: "deg",
      translateX: "px",
      translateY: "px",
      translateZ: "px"
    };
    var transformKeys = Object.keys(transformUnits);
    var AnimationBus = function() {
      function AnimationBus2(_ref) {
        var animations = _ref.animations, element = _ref.element, origin = _ref.origin;
        _classCallCheck(this, AnimationBus2);
        this.animations = animations;
        this.element = element;
        this.origin = origin;
      }
      _createClass(AnimationBus2, [{
        key: "getStyles",
        value: function getStyles2() {
          var element = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.element;
          var origin = this.origin(element);
          var transformValues = [];
          var styles2 = {};
          this.animations.forEach(function(animation) {
            var prop = animation.prop;
            var unit = animation.unit || transformUnits[prop] || "";
            var value = (0, _polylinearScale2.default)(animation.stops)(origin);
            if (transformKeys.indexOf(prop) > -1) {
              transformValues.push(prop + "(" + value + unit + ")");
            } else {
              styles2[prop] = "" + value + unit;
            }
          });
          if (transformValues.length) {
            styles2.transform = transformValues.join(" ");
          }
          return styles2;
        }
      }, {
        key: "applyStyles",
        value: function applyStyles() {
          var element = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.element;
          var styles2 = this.getStyles(element);
          Object.keys(styles2).forEach(function(key2) {
            return element.style[key2] = styles2[key2];
          });
        }
      }]);
      return AnimationBus2;
    }();
    exports.default = AnimationBus;
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
var ResizeObserver_es_exports = {};
__export(ResizeObserver_es_exports, {
  default: () => ResizeObserver_es_default
});
function toFloat(value) {
  return parseFloat(value) || 0;
}
function getBordersSize(styles2) {
  var positions = [], len = arguments.length - 1;
  while (len-- > 0)
    positions[len] = arguments[len + 1];
  return positions.reduce(function(size, position) {
    var value = styles2["border-" + position + "-width"];
    return size + toFloat(value);
  }, 0);
}
function getPaddings(styles2) {
  var positions = ["top", "right", "bottom", "left"];
  var paddings = {};
  for (var i = 0, list = positions; i < list.length; i += 1) {
    var position = list[i];
    var value = styles2["padding-" + position];
    paddings[position] = toFloat(value);
  }
  return paddings;
}
function getSVGContentRect(target) {
  var bbox = target.getBBox();
  return createRectInit(0, 0, bbox.width, bbox.height);
}
function getHTMLElementContentRect(target) {
  var clientWidth = target.clientWidth;
  var clientHeight = target.clientHeight;
  if (!clientWidth && !clientHeight) {
    return emptyRect;
  }
  var styles2 = getWindowOf(target).getComputedStyle(target);
  var paddings = getPaddings(styles2);
  var horizPad = paddings.left + paddings.right;
  var vertPad = paddings.top + paddings.bottom;
  var width = toFloat(styles2.width), height = toFloat(styles2.height);
  if (styles2.boxSizing === "border-box") {
    if (Math.round(width + horizPad) !== clientWidth) {
      width -= getBordersSize(styles2, "left", "right") + horizPad;
    }
    if (Math.round(height + vertPad) !== clientHeight) {
      height -= getBordersSize(styles2, "top", "bottom") + vertPad;
    }
  }
  if (!isDocumentElement(target)) {
    var vertScrollbar = Math.round(width + horizPad) - clientWidth;
    var horizScrollbar = Math.round(height + vertPad) - clientHeight;
    if (Math.abs(vertScrollbar) !== 1) {
      width -= vertScrollbar;
    }
    if (Math.abs(horizScrollbar) !== 1) {
      height -= horizScrollbar;
    }
  }
  return createRectInit(paddings.left, paddings.top, width, height);
}
function isDocumentElement(target) {
  return target === getWindowOf(target).document.documentElement;
}
function getContentRect(target) {
  if (!isBrowser) {
    return emptyRect;
  }
  if (isSVGGraphicsElement(target)) {
    return getSVGContentRect(target);
  }
  return getHTMLElementContentRect(target);
}
function createReadOnlyRect(ref) {
  var x = ref.x;
  var y = ref.y;
  var width = ref.width;
  var height = ref.height;
  var Constr = typeof DOMRectReadOnly !== "undefined" ? DOMRectReadOnly : Object;
  var rect = Object.create(Constr.prototype);
  defineConfigurable(rect, {
    x,
    y,
    width,
    height,
    top: y,
    right: x + width,
    bottom: height + y,
    left: x
  });
  return rect;
}
function createRectInit(x, y, width, height) {
  return { x, y, width, height };
}
var MapShim, isBrowser, global$1, requestAnimationFrame$1, trailingTimeout, throttle, REFRESH_DELAY, transitionKeys, mutationObserverSupported, ResizeObserverController, defineConfigurable, getWindowOf, emptyRect, isSVGGraphicsElement, ResizeObservation, ResizeObserverEntry, ResizeObserverSPI, observers, ResizeObserver, index, ResizeObserver_es_default;
var init_ResizeObserver_es = __esm({
  "node_modules/react-images/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"() {
    MapShim = function() {
      if (typeof Map !== "undefined") {
        return Map;
      }
      function getIndex(arr, key2) {
        var result = -1;
        arr.some(function(entry, index2) {
          if (entry[0] === key2) {
            result = index2;
            return true;
          }
          return false;
        });
        return result;
      }
      return function() {
        function anonymous() {
          this.__entries__ = [];
        }
        var prototypeAccessors = { size: { configurable: true } };
        prototypeAccessors.size.get = function() {
          return this.__entries__.length;
        };
        anonymous.prototype.get = function(key2) {
          var index2 = getIndex(this.__entries__, key2);
          var entry = this.__entries__[index2];
          return entry && entry[1];
        };
        anonymous.prototype.set = function(key2, value) {
          var index2 = getIndex(this.__entries__, key2);
          if (~index2) {
            this.__entries__[index2][1] = value;
          } else {
            this.__entries__.push([key2, value]);
          }
        };
        anonymous.prototype.delete = function(key2) {
          var entries = this.__entries__;
          var index2 = getIndex(entries, key2);
          if (~index2) {
            entries.splice(index2, 1);
          }
        };
        anonymous.prototype.has = function(key2) {
          return !!~getIndex(this.__entries__, key2);
        };
        anonymous.prototype.clear = function() {
          this.__entries__.splice(0);
        };
        anonymous.prototype.forEach = function(callback, ctx) {
          var this$1 = this;
          if (ctx === void 0)
            ctx = null;
          for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {
            var entry = list[i];
            callback.call(ctx, entry[1], entry[0]);
          }
        };
        Object.defineProperties(anonymous.prototype, prototypeAccessors);
        return anonymous;
      }();
    }();
    isBrowser = typeof window !== "undefined" && typeof document !== "undefined" && window.document === document;
    global$1 = function() {
      if (typeof global !== "undefined" && global.Math === Math) {
        return global;
      }
      if (typeof self !== "undefined" && self.Math === Math) {
        return self;
      }
      if (typeof window !== "undefined" && window.Math === Math) {
        return window;
      }
      return Function("return this")();
    }();
    requestAnimationFrame$1 = function() {
      if (typeof requestAnimationFrame === "function") {
        return requestAnimationFrame.bind(global$1);
      }
      return function(callback) {
        return setTimeout(function() {
          return callback(Date.now());
        }, 1e3 / 60);
      };
    }();
    trailingTimeout = 2;
    throttle = function(callback, delay) {
      var leadingCall = false, trailingCall = false, lastCallTime = 0;
      function resolvePending() {
        if (leadingCall) {
          leadingCall = false;
          callback();
        }
        if (trailingCall) {
          proxy();
        }
      }
      function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
      }
      function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
          if (timeStamp - lastCallTime < trailingTimeout) {
            return;
          }
          trailingCall = true;
        } else {
          leadingCall = true;
          trailingCall = false;
          setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
      }
      return proxy;
    };
    REFRESH_DELAY = 20;
    transitionKeys = ["top", "right", "bottom", "left", "width", "height", "size", "weight"];
    mutationObserverSupported = typeof MutationObserver !== "undefined";
    ResizeObserverController = function() {
      this.connected_ = false;
      this.mutationEventsAdded_ = false;
      this.mutationsObserver_ = null;
      this.observers_ = [];
      this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
      this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
    };
    ResizeObserverController.prototype.addObserver = function(observer) {
      if (!~this.observers_.indexOf(observer)) {
        this.observers_.push(observer);
      }
      if (!this.connected_) {
        this.connect_();
      }
    };
    ResizeObserverController.prototype.removeObserver = function(observer) {
      var observers2 = this.observers_;
      var index2 = observers2.indexOf(observer);
      if (~index2) {
        observers2.splice(index2, 1);
      }
      if (!observers2.length && this.connected_) {
        this.disconnect_();
      }
    };
    ResizeObserverController.prototype.refresh = function() {
      var changesDetected = this.updateObservers_();
      if (changesDetected) {
        this.refresh();
      }
    };
    ResizeObserverController.prototype.updateObservers_ = function() {
      var activeObservers = this.observers_.filter(function(observer) {
        return observer.gatherActive(), observer.hasActive();
      });
      activeObservers.forEach(function(observer) {
        return observer.broadcastActive();
      });
      return activeObservers.length > 0;
    };
    ResizeObserverController.prototype.connect_ = function() {
      if (!isBrowser || this.connected_) {
        return;
      }
      document.addEventListener("transitionend", this.onTransitionEnd_);
      window.addEventListener("resize", this.refresh);
      if (mutationObserverSupported) {
        this.mutationsObserver_ = new MutationObserver(this.refresh);
        this.mutationsObserver_.observe(document, {
          attributes: true,
          childList: true,
          characterData: true,
          subtree: true
        });
      } else {
        document.addEventListener("DOMSubtreeModified", this.refresh);
        this.mutationEventsAdded_ = true;
      }
      this.connected_ = true;
    };
    ResizeObserverController.prototype.disconnect_ = function() {
      if (!isBrowser || !this.connected_) {
        return;
      }
      document.removeEventListener("transitionend", this.onTransitionEnd_);
      window.removeEventListener("resize", this.refresh);
      if (this.mutationsObserver_) {
        this.mutationsObserver_.disconnect();
      }
      if (this.mutationEventsAdded_) {
        document.removeEventListener("DOMSubtreeModified", this.refresh);
      }
      this.mutationsObserver_ = null;
      this.mutationEventsAdded_ = false;
      this.connected_ = false;
    };
    ResizeObserverController.prototype.onTransitionEnd_ = function(ref) {
      var propertyName = ref.propertyName;
      if (propertyName === void 0)
        propertyName = "";
      var isReflowProperty = transitionKeys.some(function(key2) {
        return !!~propertyName.indexOf(key2);
      });
      if (isReflowProperty) {
        this.refresh();
      }
    };
    ResizeObserverController.getInstance = function() {
      if (!this.instance_) {
        this.instance_ = new ResizeObserverController();
      }
      return this.instance_;
    };
    ResizeObserverController.instance_ = null;
    defineConfigurable = function(target, props) {
      for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {
        var key2 = list[i];
        Object.defineProperty(target, key2, {
          value: props[key2],
          enumerable: false,
          writable: false,
          configurable: true
        });
      }
      return target;
    };
    getWindowOf = function(target) {
      var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
      return ownerGlobal || global$1;
    };
    emptyRect = createRectInit(0, 0, 0, 0);
    isSVGGraphicsElement = function() {
      if (typeof SVGGraphicsElement !== "undefined") {
        return function(target) {
          return target instanceof getWindowOf(target).SVGGraphicsElement;
        };
      }
      return function(target) {
        return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === "function";
      };
    }();
    ResizeObservation = function(target) {
      this.broadcastWidth = 0;
      this.broadcastHeight = 0;
      this.contentRect_ = createRectInit(0, 0, 0, 0);
      this.target = target;
    };
    ResizeObservation.prototype.isActive = function() {
      var rect = getContentRect(this.target);
      this.contentRect_ = rect;
      return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
    };
    ResizeObservation.prototype.broadcastRect = function() {
      var rect = this.contentRect_;
      this.broadcastWidth = rect.width;
      this.broadcastHeight = rect.height;
      return rect;
    };
    ResizeObserverEntry = function(target, rectInit) {
      var contentRect = createReadOnlyRect(rectInit);
      defineConfigurable(this, { target, contentRect });
    };
    ResizeObserverSPI = function(callback, controller, callbackCtx) {
      this.activeObservations_ = [];
      this.observations_ = new MapShim();
      if (typeof callback !== "function") {
        throw new TypeError("The callback provided as parameter 1 is not a function.");
      }
      this.callback_ = callback;
      this.controller_ = controller;
      this.callbackCtx_ = callbackCtx;
    };
    ResizeObserverSPI.prototype.observe = function(target) {
      if (!arguments.length) {
        throw new TypeError("1 argument required, but only 0 present.");
      }
      if (typeof Element === "undefined" || !(Element instanceof Object)) {
        return;
      }
      if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
      }
      var observations = this.observations_;
      if (observations.has(target)) {
        return;
      }
      observations.set(target, new ResizeObservation(target));
      this.controller_.addObserver(this);
      this.controller_.refresh();
    };
    ResizeObserverSPI.prototype.unobserve = function(target) {
      if (!arguments.length) {
        throw new TypeError("1 argument required, but only 0 present.");
      }
      if (typeof Element === "undefined" || !(Element instanceof Object)) {
        return;
      }
      if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
      }
      var observations = this.observations_;
      if (!observations.has(target)) {
        return;
      }
      observations.delete(target);
      if (!observations.size) {
        this.controller_.removeObserver(this);
      }
    };
    ResizeObserverSPI.prototype.disconnect = function() {
      this.clearActive();
      this.observations_.clear();
      this.controller_.removeObserver(this);
    };
    ResizeObserverSPI.prototype.gatherActive = function() {
      var this$1 = this;
      this.clearActive();
      this.observations_.forEach(function(observation) {
        if (observation.isActive()) {
          this$1.activeObservations_.push(observation);
        }
      });
    };
    ResizeObserverSPI.prototype.broadcastActive = function() {
      if (!this.hasActive()) {
        return;
      }
      var ctx = this.callbackCtx_;
      var entries = this.activeObservations_.map(function(observation) {
        return new ResizeObserverEntry(observation.target, observation.broadcastRect());
      });
      this.callback_.call(ctx, entries, ctx);
      this.clearActive();
    };
    ResizeObserverSPI.prototype.clearActive = function() {
      this.activeObservations_.splice(0);
    };
    ResizeObserverSPI.prototype.hasActive = function() {
      return this.activeObservations_.length > 0;
    };
    observers = typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : new MapShim();
    ResizeObserver = function(callback) {
      if (!(this instanceof ResizeObserver)) {
        throw new TypeError("Cannot call a class as a function.");
      }
      if (!arguments.length) {
        throw new TypeError("1 argument required, but only 0 present.");
      }
      var controller = ResizeObserverController.getInstance();
      var observer = new ResizeObserverSPI(callback, controller, this);
      observers.set(this, observer);
    };
    ["observe", "unobserve", "disconnect"].forEach(function(method) {
      ResizeObserver.prototype[method] = function() {
        return (ref = observers.get(this))[method].apply(ref, arguments);
        var ref;
      };
    });
    index = function() {
      if (typeof global$1.ResizeObserver !== "undefined") {
        return global$1.ResizeObserver;
      }
      return ResizeObserver;
    }();
    ResizeObserver_es_default = index;
  }
});

// node_modules/react-images/node_modules/react-view-pager/lib/PagerElement.js
var require_PagerElement = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/lib/PagerElement.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    var PagerElement = function() {
      function PagerElement2(_ref) {
        var node2 = _ref.node, pager = _ref.pager, width = _ref.width, height = _ref.height;
        _classCallCheck(this, PagerElement2);
        this.node = node2;
        this.pager = pager;
        this.x = this.y = 0;
        this.setSize(width, height);
      }
      _createClass(PagerElement2, [{
        key: "setSize",
        value: function setSize(width, height) {
          this.width = width || this.node.offsetWidth;
          this.height = height || this.node.offsetHeight;
        }
      }, {
        key: "setPosition",
        value: function setPosition(position) {
          this[this.pager.options.axis] = position;
        }
      }, {
        key: "getSize",
        value: function getSize(dimension) {
          if (dimension === "width" || dimension === "height") {
            return this[dimension];
          } else {
            var axis = this.pager.options.axis;
            return this[axis === "x" ? "width" : "height"];
          }
        }
      }, {
        key: "getPosition",
        value: function getPosition() {
          return this[this.pager.options.axis];
        }
      }]);
      return PagerElement2;
    }();
    exports.default = PagerElement;
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/lib/utils.js
var require_utils = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/lib/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.modulo = modulo;
    exports.clamp = clamp;
    exports.sum = sum;
    exports.max = max;
    exports.range = range;
    function _toConsumableArray(arr) {
      if (Array.isArray(arr)) {
        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
          arr2[i] = arr[i];
        }
        return arr2;
      } else {
        return Array.from(arr);
      }
    }
    function modulo(val, max2) {
      return (val % max2 + max2) % max2;
    }
    function clamp(val, min, max2) {
      return Math.min(Math.max(min, val), max2);
    }
    function sum(arr) {
      return arr.reduce(function(a, b) {
        return a + b;
      }, 0);
    }
    function max(arr) {
      return Math.max.apply(null, arr);
    }
    function range(start, end, max2) {
      return [].concat(_toConsumableArray(Array(1 + end - start))).map(function(val) {
        return max2 ? modulo(start + val, max2) : start + val;
      });
    }
  }
});

// node_modules/get-prefix/lib/index.js
var require_lib2 = __commonJS({
  "node_modules/get-prefix/lib/index.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = getPrefix;
    function getPrefix(prop) {
      if (typeof document === "undefined")
        return prop;
      var styles2 = document.createElement("p").style;
      var vendors = ["ms", "O", "Moz", "Webkit"];
      if (styles2[prop] === "")
        return prop;
      prop = prop.charAt(0).toUpperCase() + prop.slice(1);
      for (var i = vendors.length; i--; ) {
        if (styles2[vendors[i] + prop] === "") {
          return vendors[i] + prop;
        }
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/lib/Pager.js
var require_Pager = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/lib/Pager.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends3 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _mitt = (init_mitt_es(), __toCommonJS(mitt_es_exports));
    var _mitt2 = _interopRequireDefault(_mitt);
    var _tabbable = require_tabbable();
    var _tabbable2 = _interopRequireDefault(_tabbable);
    var _animationBus = require_animation_bus();
    var _animationBus2 = _interopRequireDefault(_animationBus);
    var _resizeObserverPolyfill = (init_ResizeObserver_es(), __toCommonJS(ResizeObserver_es_exports));
    var _resizeObserverPolyfill2 = _interopRequireDefault(_resizeObserverPolyfill);
    var _PagerElement3 = require_PagerElement();
    var _PagerElement4 = _interopRequireDefault(_PagerElement3);
    var _utils = require_utils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _defineProperty2(obj, key2, value) {
      if (key2 in obj) {
        Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key2] = value;
      }
      return obj;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var TRANSFORM = require_lib2()("transform");
    var isWindowDefined = typeof window !== "undefined";
    var Track2 = function(_PagerElement) {
      _inherits(Track3, _PagerElement);
      function Track3() {
        _classCallCheck(this, Track3);
        return _possibleConstructorReturn(this, (Track3.__proto__ || Object.getPrototypeOf(Track3)).apply(this, arguments));
      }
      _createClass(Track3, [{
        key: "getStyles",
        value: function getStyles2(trackPosition) {
          var _pager$getPositionVal = this.pager.getPositionValue(trackPosition), x = _pager$getPositionVal.x, y = _pager$getPositionVal.y;
          var trackSize = this.pager.getTrackSize();
          var style = _defineProperty2({}, TRANSFORM, "translate3d(" + x + "px, " + y + "px, 0)");
          if (trackSize) {
            var _pager$options = this.pager.options, axis = _pager$options.axis, viewsToShow = _pager$options.viewsToShow;
            var dimension = axis === "x" ? "width" : "height";
            style[dimension] = viewsToShow === "auto" ? trackSize : this.pager.views.length / viewsToShow * 100 + "%";
          }
          return style;
        }
      }]);
      return Track3;
    }(_PagerElement4.default);
    var View3 = function(_PagerElement2) {
      _inherits(View4, _PagerElement2);
      function View4(_ref) {
        var index2 = _ref.index, restOptions = _objectWithoutProperties(_ref, ["index"]);
        _classCallCheck(this, View4);
        var _this2 = _possibleConstructorReturn(this, (View4.__proto__ || Object.getPrototypeOf(View4)).call(this, restOptions));
        _this2.index = index2;
        _this2.inBounds = true;
        _this2.tabbableChildren = [];
        _this2.setCurrent(false);
        _this2.setVisible(false);
        _this2.setTarget();
        _this2.setOrigin();
        setTimeout(function() {
          _this2.tabbableChildren = (0, _tabbable2.default)(_this2.node);
          _this2.setTabbableChildren();
        });
        return _this2;
      }
      _createClass(View4, [{
        key: "setCurrent",
        value: function setCurrent(isCurrent) {
          this.isCurrent = isCurrent;
        }
      }, {
        key: "setVisible",
        value: function setVisible(isVisible) {
          this.isVisible = isVisible;
          this.setTabbableChildren();
        }
      }, {
        key: "setTabbableChildren",
        value: function setTabbableChildren() {
          for (var i = 0; i < this.tabbableChildren.length; i++) {
            this.tabbableChildren[i].tabIndex = this.isCurrent ? 0 : -1;
          }
        }
      }, {
        key: "setTarget",
        value: function setTarget() {
          var _pager$options2 = this.pager.options, align = _pager$options2.align, viewsToShow = _pager$options2.viewsToShow;
          var target = this.pager.getStartCoords(this.index);
          if (align) {
            target += this.pager.getAlignOffset(this);
          }
          this.target = target;
        }
      }, {
        key: "setOrigin",
        value: function setOrigin() {
          var trackPosition = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.pager.trackPosition;
          this.origin = this.target - trackPosition;
        }
      }, {
        key: "getStyles",
        value: function getStyles2() {
          var _pager$options3 = this.pager.options, axis = _pager$options3.axis, viewsToShow = _pager$options3.viewsToShow, infinite = _pager$options3.infinite;
          var style = {};
          if (axis === "x") {
            style.display = "inline-block";
            style.verticalAlign = "top";
          }
          if (viewsToShow !== "auto") {
            style[axis === "x" ? "width" : "height"] = 100 / this.pager.views.length + "%";
          }
          if (infinite && !this.inBounds) {
            style.position = "relative";
            style[axis === "y" ? "top" : "left"] = this.getPosition();
          }
          return _extends3({}, style, this.pager.animationBus.getStyles(this));
        }
      }]);
      return View4;
    }(_PagerElement4.default);
    var defaultOptions2 = {
      viewsToShow: 1,
      viewsToMove: 1,
      align: 0,
      contain: false,
      axis: "x",
      autoSize: false,
      animations: [],
      infinite: false,
      instant: false,
      swipe: true,
      swipeThreshold: 0.5,
      flickTimeout: 300,
      accessibility: true
    };
    var Pager = function() {
      function Pager2() {
        var _this3 = this;
        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        _classCallCheck(this, Pager2);
        this.hydrate = function() {
          _this3.frame.setSize();
          _this3.track.setSize();
          _this3.views.forEach(function(view) {
            view.setSize();
            view.setTarget();
          });
          _this3.setPositionValue();
          _this3.setViewStyles();
          _this3.emit("hydrated");
        };
        var emitter = (0, _mitt2.default)();
        this.on = emitter.on;
        this.emit = emitter.emit;
        this.off = emitter.off;
        this.views = [];
        this.currentIndex = 0;
        this.currentView = null;
        this.currentTween = 0;
        this.trackPosition = 0;
        this.isSwiping = false;
        this.options = _extends3({}, defaultOptions2, options);
        this.animationBus = new _animationBus2.default({
          animations: this.options.animations,
          origin: function origin(view) {
            return view.origin;
          }
        });
        if (isWindowDefined) {
          this.resizeObserver = new _resizeObserverPolyfill2.default(function() {
            _this3.hydrate();
          });
        }
      }
      _createClass(Pager2, [{
        key: "setOptions",
        value: function setOptions(options) {
          var lastOptions = this.options;
          this.options = _extends3({}, this.options, options);
          this.animationBus.animations = this.options.animations;
          if (lastOptions.viewsToShow !== this.options.viewsToShow) {
            this.emit("viewChange", this.getCurrentIndicies());
          }
        }
      }, {
        key: "addFrame",
        value: function addFrame(node2) {
          this.frame = new _PagerElement4.default({
            node: node2,
            pager: this
          });
        }
      }, {
        key: "addTrack",
        value: function addTrack(node2) {
          this.track = new Track2({
            node: node2,
            pager: this
          });
        }
      }, {
        key: "addView",
        value: function addView(node2) {
          var index2 = this.views.length;
          var view = new View3({
            node: node2,
            index: index2,
            pager: this
          });
          this.views.push(view);
          if (!this.currentView) {
            this.setCurrentView({
              index: index2,
              suppressEvent: true
            });
          }
          if (isWindowDefined) {
            this.resizeObserver.observe(node2);
          }
          this.emit("viewAdded");
          return view;
        }
      }, {
        key: "removeView",
        value: function removeView(view) {
          this.views = this.views.filter(function(_view) {
            return view !== _view;
          });
          if (isWindowDefined) {
            this.resizeObserver.disconnect(view.node);
          }
          this.emit("viewRemoved");
        }
      }, {
        key: "prev",
        value: function prev() {
          this.setCurrentView({ direction: -1 });
        }
      }, {
        key: "next",
        value: function next() {
          this.setCurrentView({ direction: 1 });
        }
      }, {
        key: "setCurrentView",
        value: function setCurrentView(_ref2) {
          var _ref2$direction = _ref2.direction, direction = _ref2$direction === void 0 ? 0 : _ref2$direction, _ref2$index = _ref2.index, index2 = _ref2$index === void 0 ? this.currentIndex : _ref2$index, _ref2$suppressEvent = _ref2.suppressEvent, suppressEvent = _ref2$suppressEvent === void 0 ? false : _ref2$suppressEvent;
          var _options = this.options, viewsToMove = _options.viewsToMove, infinite = _options.infinite;
          var newIndex = index2 + direction * viewsToMove;
          var previousIndex = this.currentIndex;
          var currentIndex = infinite ? newIndex : (0, _utils.clamp)(newIndex, 0, this.views.length - 1);
          var previousView = this.getView(previousIndex);
          var currentView = this.getView(currentIndex);
          this.currentIndex = currentIndex;
          this.currentView = currentView;
          previousView.setCurrent(false);
          currentView.setCurrent(true);
          var rangeStart = currentIndex;
          var rangeEnd = currentIndex + viewsToMove - 1;
          var viewRange = (0, _utils.range)(rangeStart, rangeEnd, this.views.length);
          this.views.forEach(function(view, index3) {
            view.setVisible(index3 === currentIndex);
          });
          this.setPositionValue();
          if (!suppressEvent) {
            this.emit("viewChange", this.getCurrentIndicies());
          }
        }
      }, {
        key: "setPositionValue",
        value: function setPositionValue() {
          var trackPosition = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.currentView ? this.currentView.target : 0;
          if (!this.isSwiping) {
            var _options2 = this.options, viewsToShow = _options2.viewsToShow, autoSize = _options2.autoSize, infinite = _options2.infinite, contain = _options2.contain;
            var trackSize = this.getTrackSize();
            if (infinite) {
              trackPosition -= (Math.floor(this.currentIndex / this.views.length) || 0) * trackSize;
            }
            if (contain) {
              var trackEndOffset = viewsToShow === "auto" && autoSize || viewsToShow <= 1 ? 0 : this.getFrameSize({ autoSize: false });
              trackPosition = (0, _utils.clamp)(trackPosition, trackEndOffset - trackSize, 0);
            }
          }
          this.trackPosition = trackPosition;
        }
      }, {
        key: "setViewStyles",
        value: function setViewStyles() {
          var trackPosition = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          var _options3 = this.options, infinite = _options3.infinite, align = _options3.align;
          var frameSize = this.getFrameSize();
          var trackSize = this.getTrackSize();
          var wrappedtrackPosition = (0, _utils.modulo)(trackPosition, -trackSize);
          this.views.reduce(function(lastPosition, view, index2) {
            var viewSize = view.getSize();
            var nextPosition = lastPosition + viewSize;
            var position = lastPosition;
            if (nextPosition + viewSize * align < Math.abs(wrappedtrackPosition)) {
              if (infinite) {
                position += trackSize - lastPosition;
              }
              view.inBounds = false;
            } else {
              view.inBounds = true;
            }
            view.setPosition(position);
            view.setOrigin(trackPosition);
            return nextPosition;
          }, 0);
        }
      }, {
        key: "getNumericViewsToShow",
        value: function getNumericViewsToShow() {
          return isNaN(this.options.viewsToShow) ? 1 : this.options.viewsToShow;
        }
      }, {
        key: "getMaxDimensions",
        value: function getMaxDimensions(indices) {
          var _this4 = this;
          var axis = this.options.axis;
          var widths = [];
          var heights = [];
          indices.forEach(function(index2) {
            var view = isNaN(index2) ? index2 : _this4.getView(index2);
            widths.push(view.getSize("width"));
            heights.push(view.getSize("height"));
          });
          return {
            width: axis === "x" ? (0, _utils.sum)(widths) : (0, _utils.max)(widths),
            height: axis === "y" ? (0, _utils.sum)(heights) : (0, _utils.max)(heights)
          };
        }
      }, {
        key: "getCurrentIndicies",
        value: function getCurrentIndicies() {
          var _options4 = this.options, infinite = _options4.infinite, contain = _options4.contain;
          var currentViews = [];
          var viewsToShow = isNaN(this.options.viewsToShow) ? 1 : this.options.viewsToShow;
          var minIndex = this.currentIndex;
          var maxIndex = this.currentIndex + (viewsToShow - 1);
          if (contain) {
            minIndex = (0, _utils.clamp)(minIndex, 0, this.views.length - viewsToShow);
            maxIndex = (0, _utils.clamp)(maxIndex, 0, this.views.length - 1);
            for (var i = minIndex; i <= maxIndex; i++) {
              currentViews.push(i);
            }
          } else {
            for (var _i = minIndex; _i <= maxIndex; _i++) {
              currentViews.push(infinite ? (0, _utils.modulo)(_i, this.views.length) : (0, _utils.clamp)(_i, 0, this.views.length - 1));
            }
          }
          return currentViews;
        }
      }, {
        key: "getFrameSize",
        value: function getFrameSize() {
          var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref3$autoSize = _ref3.autoSize, autoSize = _ref3$autoSize === void 0 ? this.options.autoSize : _ref3$autoSize, _ref3$fullSize = _ref3.fullSize, fullSize = _ref3$fullSize === void 0 ? false : _ref3$fullSize;
          var dimensions = {
            width: 0,
            height: 0
          };
          if (this.views.length) {
            if (autoSize) {
              var currentViews = this.getCurrentIndicies();
              dimensions = this.getMaxDimensions(currentViews);
            } else if (this.frame) {
              dimensions = {
                width: this.frame.getSize("width"),
                height: this.frame.getSize("height")
              };
            }
          }
          if (fullSize) {
            return dimensions;
          } else {
            return dimensions[this.options.axis === "x" ? "width" : "height"];
          }
        }
      }, {
        key: "getTrackSize",
        value: function getTrackSize() {
          var includeLastSlide = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
          var lastIndex = includeLastSlide ? this.views.length : this.views.length - 1;
          var size = 0;
          this.views.slice(0, lastIndex).forEach(function(view) {
            size += view.getSize();
          });
          return size;
        }
      }, {
        key: "getView",
        value: function getView(index2) {
          return this.views[(0, _utils.modulo)(index2, this.views.length)];
        }
        // where the view should start
      }, {
        key: "getStartCoords",
        value: function getStartCoords(index2) {
          var target = 0;
          this.views.slice(0, index2).forEach(function(view) {
            target -= view.getSize();
          });
          return target;
        }
        // how much to offset the view defined by the align option
      }, {
        key: "getAlignOffset",
        value: function getAlignOffset(view) {
          var frameSize = this.getFrameSize({ autoSize: false });
          var viewSize = view.getSize();
          return (frameSize - viewSize) * this.options.align;
        }
      }, {
        key: "getPositionValue",
        value: function getPositionValue() {
          var trackPosition = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.trackPosition;
          var _options5 = this.options, infinite = _options5.infinite, contain = _options5.contain;
          var position = {
            x: 0,
            y: 0
            // store the current animated value so we can reference it later
          };
          this.currentTween = trackPosition;
          if (infinite) {
            var trackSize = this.getTrackSize();
            trackPosition = (0, _utils.modulo)(trackPosition, -trackSize) || 0;
          }
          this.emit("scroll", {
            progress: trackPosition / this.getTrackSize(false),
            position: trackPosition
          });
          position[this.options.axis] = trackPosition;
          return position;
        }
      }, {
        key: "resetViewIndex",
        value: function resetViewIndex() {
          this.setCurrentView({
            index: (0, _utils.modulo)(this.currentIndex, this.views.length),
            suppressEvent: true
          });
        }
      }]);
      return Pager2;
    }();
    exports.default = Pager;
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/lib/ViewPager.js
var require_ViewPager = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/lib/ViewPager.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _Pager = require_Pager();
    var _Pager2 = _interopRequireDefault(_Pager);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var ViewPager2 = function(_Component) {
      _inherits(ViewPager3, _Component);
      function ViewPager3(props) {
        _classCallCheck(this, ViewPager3);
        var _this = _possibleConstructorReturn(this, (ViewPager3.__proto__ || Object.getPrototypeOf(ViewPager3)).call(this, props));
        var pager = new _Pager2.default();
        var forceUpdate = function forceUpdate2() {
          return _this.forceUpdate();
        };
        pager.on("viewChange", forceUpdate);
        pager.on("hydrated", forceUpdate);
        _this._pager = pager;
        return _this;
      }
      _createClass(ViewPager3, [{
        key: "getChildContext",
        value: function getChildContext() {
          return {
            pager: this._pager
          };
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this2 = this;
          requestAnimationFrame(function() {
            _this2._pager.hydrate();
          });
        }
      }, {
        key: "getInstance",
        value: function getInstance() {
          return this._pager;
        }
      }, {
        key: "render",
        value: function render() {
          var _props = this.props, tag = _props.tag, restProps = _objectWithoutProperties(_props, ["tag"]);
          return (0, _react.createElement)(tag, restProps);
        }
      }]);
      return ViewPager3;
    }(_react.Component);
    ViewPager2.childContextTypes = {
      pager: _propTypes2.default.instanceOf(_Pager2.default)
    };
    ViewPager2.propTypes = {
      tag: _propTypes2.default.string
    };
    ViewPager2.defaultProps = {
      tag: "div"
    };
    exports.default = ViewPager2;
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/mapToZero.js
var require_mapToZero = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/mapToZero.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = mapToZero;
    function mapToZero(obj) {
      var ret = {};
      for (var key2 in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key2)) {
          ret[key2] = 0;
        }
      }
      return ret;
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/stripStyle.js
var require_stripStyle = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/stripStyle.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = stripStyle;
    function stripStyle(style) {
      var ret = {};
      for (var key2 in style) {
        if (!Object.prototype.hasOwnProperty.call(style, key2)) {
          continue;
        }
        ret[key2] = typeof style[key2] === "number" ? style[key2] : style[key2].val;
      }
      return ret;
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/stepper.js
var require_stepper = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/stepper.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = stepper;
    var reusedTuple = [0, 0];
    function stepper(secondPerFrame, x, v, destX, k, b, precision) {
      var Fspring = -k * (x - destX);
      var Fdamper = -b * v;
      var a = Fspring + Fdamper;
      var newV = v + a * secondPerFrame;
      var newX = x + newV * secondPerFrame;
      if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {
        reusedTuple[0] = destX;
        reusedTuple[1] = 0;
        return reusedTuple;
      }
      reusedTuple[0] = newX;
      reusedTuple[1] = newV;
      return reusedTuple;
    }
    module.exports = exports["default"];
  }
});

// node_modules/performance-now/lib/performance-now.js
var require_performance_now = __commonJS({
  "node_modules/performance-now/lib/performance-now.js"(exports, module) {
    (function() {
      var getNanoSeconds, hrtime, loadTime;
      if (typeof performance !== "undefined" && performance !== null && performance.now) {
        module.exports = function() {
          return performance.now();
        };
      } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
        module.exports = function() {
          return (getNanoSeconds() - loadTime) / 1e6;
        };
        hrtime = process.hrtime;
        getNanoSeconds = function() {
          var hr;
          hr = hrtime();
          return hr[0] * 1e9 + hr[1];
        };
        loadTime = getNanoSeconds();
      } else if (Date.now) {
        module.exports = function() {
          return Date.now() - loadTime;
        };
        loadTime = Date.now();
      } else {
        module.exports = function() {
          return (/* @__PURE__ */ new Date()).getTime() - loadTime;
        };
        loadTime = (/* @__PURE__ */ new Date()).getTime();
      }
    }).call(exports);
  }
});

// node_modules/raf/node_modules/performance-now/lib/performance-now.js
var require_performance_now2 = __commonJS({
  "node_modules/raf/node_modules/performance-now/lib/performance-now.js"(exports, module) {
    (function() {
      var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;
      if (typeof performance !== "undefined" && performance !== null && performance.now) {
        module.exports = function() {
          return performance.now();
        };
      } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
        module.exports = function() {
          return (getNanoSeconds() - nodeLoadTime) / 1e6;
        };
        hrtime = process.hrtime;
        getNanoSeconds = function() {
          var hr;
          hr = hrtime();
          return hr[0] * 1e9 + hr[1];
        };
        moduleLoadTime = getNanoSeconds();
        upTime = process.uptime() * 1e9;
        nodeLoadTime = moduleLoadTime - upTime;
      } else if (Date.now) {
        module.exports = function() {
          return Date.now() - loadTime;
        };
        loadTime = Date.now();
      } else {
        module.exports = function() {
          return (/* @__PURE__ */ new Date()).getTime() - loadTime;
        };
        loadTime = (/* @__PURE__ */ new Date()).getTime();
      }
    }).call(exports);
  }
});

// node_modules/raf/index.js
var require_raf = __commonJS({
  "node_modules/raf/index.js"(exports, module) {
    var now = require_performance_now2();
    var root = typeof window === "undefined" ? global : window;
    var vendors = ["moz", "webkit"];
    var suffix = "AnimationFrame";
    var raf = root["request" + suffix];
    var caf = root["cancel" + suffix] || root["cancelRequest" + suffix];
    for (i = 0; !raf && i < vendors.length; i++) {
      raf = root[vendors[i] + "Request" + suffix];
      caf = root[vendors[i] + "Cancel" + suffix] || root[vendors[i] + "CancelRequest" + suffix];
    }
    var i;
    if (!raf || !caf) {
      last = 0, id = 0, queue = [], frameDuration = 1e3 / 60;
      raf = function(callback) {
        if (queue.length === 0) {
          var _now = now(), next = Math.max(0, frameDuration - (_now - last));
          last = next + _now;
          setTimeout(function() {
            var cp = queue.slice(0);
            queue.length = 0;
            for (var i2 = 0; i2 < cp.length; i2++) {
              if (!cp[i2].cancelled) {
                try {
                  cp[i2].callback(last);
                } catch (e) {
                  setTimeout(function() {
                    throw e;
                  }, 0);
                }
              }
            }
          }, Math.round(next));
        }
        queue.push({
          handle: ++id,
          callback,
          cancelled: false
        });
        return id;
      };
      caf = function(handle) {
        for (var i2 = 0; i2 < queue.length; i2++) {
          if (queue[i2].handle === handle) {
            queue[i2].cancelled = true;
          }
        }
      };
    }
    var last;
    var id;
    var queue;
    var frameDuration;
    module.exports = function(fn) {
      return raf.call(root, fn);
    };
    module.exports.cancel = function() {
      caf.apply(root, arguments);
    };
    module.exports.polyfill = function(object2) {
      if (!object2) {
        object2 = root;
      }
      object2.requestAnimationFrame = raf;
      object2.cancelAnimationFrame = caf;
    };
  }
});

// node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/shouldStopAnimation.js
var require_shouldStopAnimation = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/shouldStopAnimation.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = shouldStopAnimation;
    function shouldStopAnimation(currentStyle, style, currentVelocity) {
      for (var key2 in style) {
        if (!Object.prototype.hasOwnProperty.call(style, key2)) {
          continue;
        }
        if (currentVelocity[key2] !== 0) {
          return false;
        }
        var styleValue = typeof style[key2] === "number" ? style[key2] : style[key2].val;
        if (currentStyle[key2] !== styleValue) {
          return false;
        }
      }
      return true;
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/Motion.js
var require_Motion = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/Motion.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    var _extends3 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var _mapToZero = require_mapToZero();
    var _mapToZero2 = _interopRequireDefault(_mapToZero);
    var _stripStyle = require_stripStyle();
    var _stripStyle2 = _interopRequireDefault(_stripStyle);
    var _stepper3 = require_stepper();
    var _stepper4 = _interopRequireDefault(_stepper3);
    var _performanceNow = require_performance_now();
    var _performanceNow2 = _interopRequireDefault(_performanceNow);
    var _raf = require_raf();
    var _raf2 = _interopRequireDefault(_raf);
    var _shouldStopAnimation = require_shouldStopAnimation();
    var _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var msPerFrame = 1e3 / 60;
    var Motion = function(_React$Component) {
      _inherits(Motion2, _React$Component);
      _createClass(Motion2, null, [{
        key: "propTypes",
        value: {
          // TOOD: warn against putting a config in here
          defaultStyle: _propTypes2["default"].objectOf(_propTypes2["default"].number),
          style: _propTypes2["default"].objectOf(_propTypes2["default"].oneOfType([_propTypes2["default"].number, _propTypes2["default"].object])).isRequired,
          children: _propTypes2["default"].func.isRequired,
          onRest: _propTypes2["default"].func
        },
        enumerable: true
      }]);
      function Motion2(props) {
        var _this = this;
        _classCallCheck(this, Motion2);
        _React$Component.call(this, props);
        this.wasAnimating = false;
        this.animationID = null;
        this.prevTime = 0;
        this.accumulatedTime = 0;
        this.unreadPropStyle = null;
        this.clearUnreadPropStyle = function(destStyle) {
          var dirty = false;
          var _state = _this.state;
          var currentStyle = _state.currentStyle;
          var currentVelocity = _state.currentVelocity;
          var lastIdealStyle = _state.lastIdealStyle;
          var lastIdealVelocity = _state.lastIdealVelocity;
          for (var key2 in destStyle) {
            if (!Object.prototype.hasOwnProperty.call(destStyle, key2)) {
              continue;
            }
            var styleValue = destStyle[key2];
            if (typeof styleValue === "number") {
              if (!dirty) {
                dirty = true;
                currentStyle = _extends3({}, currentStyle);
                currentVelocity = _extends3({}, currentVelocity);
                lastIdealStyle = _extends3({}, lastIdealStyle);
                lastIdealVelocity = _extends3({}, lastIdealVelocity);
              }
              currentStyle[key2] = styleValue;
              currentVelocity[key2] = 0;
              lastIdealStyle[key2] = styleValue;
              lastIdealVelocity[key2] = 0;
            }
          }
          if (dirty) {
            _this.setState({ currentStyle, currentVelocity, lastIdealStyle, lastIdealVelocity });
          }
        };
        this.startAnimationIfNecessary = function() {
          _this.animationID = _raf2["default"](function(timestamp) {
            var propsStyle = _this.props.style;
            if (_shouldStopAnimation2["default"](_this.state.currentStyle, propsStyle, _this.state.currentVelocity)) {
              if (_this.wasAnimating && _this.props.onRest) {
                _this.props.onRest();
              }
              _this.animationID = null;
              _this.wasAnimating = false;
              _this.accumulatedTime = 0;
              return;
            }
            _this.wasAnimating = true;
            var currentTime = timestamp || _performanceNow2["default"]();
            var timeDelta = currentTime - _this.prevTime;
            _this.prevTime = currentTime;
            _this.accumulatedTime = _this.accumulatedTime + timeDelta;
            if (_this.accumulatedTime > msPerFrame * 10) {
              _this.accumulatedTime = 0;
            }
            if (_this.accumulatedTime === 0) {
              _this.animationID = null;
              _this.startAnimationIfNecessary();
              return;
            }
            var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
            var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
            var newLastIdealStyle = {};
            var newLastIdealVelocity = {};
            var newCurrentStyle = {};
            var newCurrentVelocity = {};
            for (var key2 in propsStyle) {
              if (!Object.prototype.hasOwnProperty.call(propsStyle, key2)) {
                continue;
              }
              var styleValue = propsStyle[key2];
              if (typeof styleValue === "number") {
                newCurrentStyle[key2] = styleValue;
                newCurrentVelocity[key2] = 0;
                newLastIdealStyle[key2] = styleValue;
                newLastIdealVelocity[key2] = 0;
              } else {
                var newLastIdealStyleValue = _this.state.lastIdealStyle[key2];
                var newLastIdealVelocityValue = _this.state.lastIdealVelocity[key2];
                for (var i = 0; i < framesToCatchUp; i++) {
                  var _stepper = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
                  newLastIdealStyleValue = _stepper[0];
                  newLastIdealVelocityValue = _stepper[1];
                }
                var _stepper2 = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
                var nextIdealX = _stepper2[0];
                var nextIdealV = _stepper2[1];
                newCurrentStyle[key2] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
                newCurrentVelocity[key2] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
                newLastIdealStyle[key2] = newLastIdealStyleValue;
                newLastIdealVelocity[key2] = newLastIdealVelocityValue;
              }
            }
            _this.animationID = null;
            _this.accumulatedTime -= framesToCatchUp * msPerFrame;
            _this.setState({
              currentStyle: newCurrentStyle,
              currentVelocity: newCurrentVelocity,
              lastIdealStyle: newLastIdealStyle,
              lastIdealVelocity: newLastIdealVelocity
            });
            _this.unreadPropStyle = null;
            _this.startAnimationIfNecessary();
          });
        };
        this.state = this.defaultState();
      }
      Motion2.prototype.defaultState = function defaultState() {
        var _props = this.props;
        var defaultStyle = _props.defaultStyle;
        var style = _props.style;
        var currentStyle = defaultStyle || _stripStyle2["default"](style);
        var currentVelocity = _mapToZero2["default"](currentStyle);
        return {
          currentStyle,
          currentVelocity,
          lastIdealStyle: currentStyle,
          lastIdealVelocity: currentVelocity
        };
      };
      Motion2.prototype.componentDidMount = function componentDidMount() {
        this.prevTime = _performanceNow2["default"]();
        this.startAnimationIfNecessary();
      };
      Motion2.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
        if (this.unreadPropStyle != null) {
          this.clearUnreadPropStyle(this.unreadPropStyle);
        }
        this.unreadPropStyle = props.style;
        if (this.animationID == null) {
          this.prevTime = _performanceNow2["default"]();
          this.startAnimationIfNecessary();
        }
      };
      Motion2.prototype.componentWillUnmount = function componentWillUnmount() {
        if (this.animationID != null) {
          _raf2["default"].cancel(this.animationID);
          this.animationID = null;
        }
      };
      Motion2.prototype.render = function render() {
        var renderedChildren = this.props.children(this.state.currentStyle);
        return renderedChildren && _react2["default"].Children.only(renderedChildren);
      };
      return Motion2;
    }(_react2["default"].Component);
    exports["default"] = Motion;
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/StaggeredMotion.js
var require_StaggeredMotion = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/StaggeredMotion.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    var _extends3 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var _mapToZero = require_mapToZero();
    var _mapToZero2 = _interopRequireDefault(_mapToZero);
    var _stripStyle = require_stripStyle();
    var _stripStyle2 = _interopRequireDefault(_stripStyle);
    var _stepper3 = require_stepper();
    var _stepper4 = _interopRequireDefault(_stepper3);
    var _performanceNow = require_performance_now();
    var _performanceNow2 = _interopRequireDefault(_performanceNow);
    var _raf = require_raf();
    var _raf2 = _interopRequireDefault(_raf);
    var _shouldStopAnimation = require_shouldStopAnimation();
    var _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var msPerFrame = 1e3 / 60;
    function shouldStopAnimationAll(currentStyles, styles2, currentVelocities) {
      for (var i = 0; i < currentStyles.length; i++) {
        if (!_shouldStopAnimation2["default"](currentStyles[i], styles2[i], currentVelocities[i])) {
          return false;
        }
      }
      return true;
    }
    var StaggeredMotion = function(_React$Component) {
      _inherits(StaggeredMotion2, _React$Component);
      _createClass(StaggeredMotion2, null, [{
        key: "propTypes",
        value: {
          // TOOD: warn against putting a config in here
          defaultStyles: _propTypes2["default"].arrayOf(_propTypes2["default"].objectOf(_propTypes2["default"].number)),
          styles: _propTypes2["default"].func.isRequired,
          children: _propTypes2["default"].func.isRequired
        },
        enumerable: true
      }]);
      function StaggeredMotion2(props) {
        var _this = this;
        _classCallCheck(this, StaggeredMotion2);
        _React$Component.call(this, props);
        this.animationID = null;
        this.prevTime = 0;
        this.accumulatedTime = 0;
        this.unreadPropStyles = null;
        this.clearUnreadPropStyle = function(unreadPropStyles) {
          var _state = _this.state;
          var currentStyles = _state.currentStyles;
          var currentVelocities = _state.currentVelocities;
          var lastIdealStyles = _state.lastIdealStyles;
          var lastIdealVelocities = _state.lastIdealVelocities;
          var someDirty = false;
          for (var i = 0; i < unreadPropStyles.length; i++) {
            var unreadPropStyle = unreadPropStyles[i];
            var dirty = false;
            for (var key2 in unreadPropStyle) {
              if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key2)) {
                continue;
              }
              var styleValue = unreadPropStyle[key2];
              if (typeof styleValue === "number") {
                if (!dirty) {
                  dirty = true;
                  someDirty = true;
                  currentStyles[i] = _extends3({}, currentStyles[i]);
                  currentVelocities[i] = _extends3({}, currentVelocities[i]);
                  lastIdealStyles[i] = _extends3({}, lastIdealStyles[i]);
                  lastIdealVelocities[i] = _extends3({}, lastIdealVelocities[i]);
                }
                currentStyles[i][key2] = styleValue;
                currentVelocities[i][key2] = 0;
                lastIdealStyles[i][key2] = styleValue;
                lastIdealVelocities[i][key2] = 0;
              }
            }
          }
          if (someDirty) {
            _this.setState({ currentStyles, currentVelocities, lastIdealStyles, lastIdealVelocities });
          }
        };
        this.startAnimationIfNecessary = function() {
          _this.animationID = _raf2["default"](function(timestamp) {
            var destStyles = _this.props.styles(_this.state.lastIdealStyles);
            if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities)) {
              _this.animationID = null;
              _this.accumulatedTime = 0;
              return;
            }
            var currentTime = timestamp || _performanceNow2["default"]();
            var timeDelta = currentTime - _this.prevTime;
            _this.prevTime = currentTime;
            _this.accumulatedTime = _this.accumulatedTime + timeDelta;
            if (_this.accumulatedTime > msPerFrame * 10) {
              _this.accumulatedTime = 0;
            }
            if (_this.accumulatedTime === 0) {
              _this.animationID = null;
              _this.startAnimationIfNecessary();
              return;
            }
            var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
            var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
            var newLastIdealStyles = [];
            var newLastIdealVelocities = [];
            var newCurrentStyles = [];
            var newCurrentVelocities = [];
            for (var i = 0; i < destStyles.length; i++) {
              var destStyle = destStyles[i];
              var newCurrentStyle = {};
              var newCurrentVelocity = {};
              var newLastIdealStyle = {};
              var newLastIdealVelocity = {};
              for (var key2 in destStyle) {
                if (!Object.prototype.hasOwnProperty.call(destStyle, key2)) {
                  continue;
                }
                var styleValue = destStyle[key2];
                if (typeof styleValue === "number") {
                  newCurrentStyle[key2] = styleValue;
                  newCurrentVelocity[key2] = 0;
                  newLastIdealStyle[key2] = styleValue;
                  newLastIdealVelocity[key2] = 0;
                } else {
                  var newLastIdealStyleValue = _this.state.lastIdealStyles[i][key2];
                  var newLastIdealVelocityValue = _this.state.lastIdealVelocities[i][key2];
                  for (var j = 0; j < framesToCatchUp; j++) {
                    var _stepper = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
                    newLastIdealStyleValue = _stepper[0];
                    newLastIdealVelocityValue = _stepper[1];
                  }
                  var _stepper2 = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
                  var nextIdealX = _stepper2[0];
                  var nextIdealV = _stepper2[1];
                  newCurrentStyle[key2] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
                  newCurrentVelocity[key2] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
                  newLastIdealStyle[key2] = newLastIdealStyleValue;
                  newLastIdealVelocity[key2] = newLastIdealVelocityValue;
                }
              }
              newCurrentStyles[i] = newCurrentStyle;
              newCurrentVelocities[i] = newCurrentVelocity;
              newLastIdealStyles[i] = newLastIdealStyle;
              newLastIdealVelocities[i] = newLastIdealVelocity;
            }
            _this.animationID = null;
            _this.accumulatedTime -= framesToCatchUp * msPerFrame;
            _this.setState({
              currentStyles: newCurrentStyles,
              currentVelocities: newCurrentVelocities,
              lastIdealStyles: newLastIdealStyles,
              lastIdealVelocities: newLastIdealVelocities
            });
            _this.unreadPropStyles = null;
            _this.startAnimationIfNecessary();
          });
        };
        this.state = this.defaultState();
      }
      StaggeredMotion2.prototype.defaultState = function defaultState() {
        var _props = this.props;
        var defaultStyles = _props.defaultStyles;
        var styles2 = _props.styles;
        var currentStyles = defaultStyles || styles2().map(_stripStyle2["default"]);
        var currentVelocities = currentStyles.map(function(currentStyle) {
          return _mapToZero2["default"](currentStyle);
        });
        return {
          currentStyles,
          currentVelocities,
          lastIdealStyles: currentStyles,
          lastIdealVelocities: currentVelocities
        };
      };
      StaggeredMotion2.prototype.componentDidMount = function componentDidMount() {
        this.prevTime = _performanceNow2["default"]();
        this.startAnimationIfNecessary();
      };
      StaggeredMotion2.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
        if (this.unreadPropStyles != null) {
          this.clearUnreadPropStyle(this.unreadPropStyles);
        }
        this.unreadPropStyles = props.styles(this.state.lastIdealStyles);
        if (this.animationID == null) {
          this.prevTime = _performanceNow2["default"]();
          this.startAnimationIfNecessary();
        }
      };
      StaggeredMotion2.prototype.componentWillUnmount = function componentWillUnmount() {
        if (this.animationID != null) {
          _raf2["default"].cancel(this.animationID);
          this.animationID = null;
        }
      };
      StaggeredMotion2.prototype.render = function render() {
        var renderedChildren = this.props.children(this.state.currentStyles);
        return renderedChildren && _react2["default"].Children.only(renderedChildren);
      };
      return StaggeredMotion2;
    }(_react2["default"].Component);
    exports["default"] = StaggeredMotion;
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/mergeDiff.js
var require_mergeDiff = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/mergeDiff.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = mergeDiff;
    function mergeDiff(prev, next, onRemove) {
      var prevKeyIndex = {};
      for (var i = 0; i < prev.length; i++) {
        prevKeyIndex[prev[i].key] = i;
      }
      var nextKeyIndex = {};
      for (var i = 0; i < next.length; i++) {
        nextKeyIndex[next[i].key] = i;
      }
      var ret = [];
      for (var i = 0; i < next.length; i++) {
        ret[i] = next[i];
      }
      for (var i = 0; i < prev.length; i++) {
        if (!Object.prototype.hasOwnProperty.call(nextKeyIndex, prev[i].key)) {
          var fill = onRemove(i, prev[i]);
          if (fill != null) {
            ret.push(fill);
          }
        }
      }
      return ret.sort(function(a, b) {
        var nextOrderA = nextKeyIndex[a.key];
        var nextOrderB = nextKeyIndex[b.key];
        var prevOrderA = prevKeyIndex[a.key];
        var prevOrderB = prevKeyIndex[b.key];
        if (nextOrderA != null && nextOrderB != null) {
          return nextKeyIndex[a.key] - nextKeyIndex[b.key];
        } else if (prevOrderA != null && prevOrderB != null) {
          return prevKeyIndex[a.key] - prevKeyIndex[b.key];
        } else if (nextOrderA != null) {
          for (var i2 = 0; i2 < next.length; i2++) {
            var pivot = next[i2].key;
            if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {
              continue;
            }
            if (nextOrderA < nextKeyIndex[pivot] && prevOrderB > prevKeyIndex[pivot]) {
              return -1;
            } else if (nextOrderA > nextKeyIndex[pivot] && prevOrderB < prevKeyIndex[pivot]) {
              return 1;
            }
          }
          return 1;
        }
        for (var i2 = 0; i2 < next.length; i2++) {
          var pivot = next[i2].key;
          if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {
            continue;
          }
          if (nextOrderB < nextKeyIndex[pivot] && prevOrderA > prevKeyIndex[pivot]) {
            return 1;
          } else if (nextOrderB > nextKeyIndex[pivot] && prevOrderA < prevKeyIndex[pivot]) {
            return -1;
          }
        }
        return -1;
      });
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/TransitionMotion.js
var require_TransitionMotion = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/TransitionMotion.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    var _extends3 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var _mapToZero = require_mapToZero();
    var _mapToZero2 = _interopRequireDefault(_mapToZero);
    var _stripStyle = require_stripStyle();
    var _stripStyle2 = _interopRequireDefault(_stripStyle);
    var _stepper3 = require_stepper();
    var _stepper4 = _interopRequireDefault(_stepper3);
    var _mergeDiff = require_mergeDiff();
    var _mergeDiff2 = _interopRequireDefault(_mergeDiff);
    var _performanceNow = require_performance_now();
    var _performanceNow2 = _interopRequireDefault(_performanceNow);
    var _raf = require_raf();
    var _raf2 = _interopRequireDefault(_raf);
    var _shouldStopAnimation = require_shouldStopAnimation();
    var _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var msPerFrame = 1e3 / 60;
    function rehydrateStyles(mergedPropsStyles, unreadPropStyles, plainStyles) {
      var cUnreadPropStyles = unreadPropStyles;
      if (cUnreadPropStyles == null) {
        return mergedPropsStyles.map(function(mergedPropsStyle, i) {
          return {
            key: mergedPropsStyle.key,
            data: mergedPropsStyle.data,
            style: plainStyles[i]
          };
        });
      }
      return mergedPropsStyles.map(function(mergedPropsStyle, i) {
        for (var j = 0; j < cUnreadPropStyles.length; j++) {
          if (cUnreadPropStyles[j].key === mergedPropsStyle.key) {
            return {
              key: cUnreadPropStyles[j].key,
              data: cUnreadPropStyles[j].data,
              style: plainStyles[i]
            };
          }
        }
        return { key: mergedPropsStyle.key, data: mergedPropsStyle.data, style: plainStyles[i] };
      });
    }
    function shouldStopAnimationAll(currentStyles, destStyles, currentVelocities, mergedPropsStyles) {
      if (mergedPropsStyles.length !== destStyles.length) {
        return false;
      }
      for (var i = 0; i < mergedPropsStyles.length; i++) {
        if (mergedPropsStyles[i].key !== destStyles[i].key) {
          return false;
        }
      }
      for (var i = 0; i < mergedPropsStyles.length; i++) {
        if (!_shouldStopAnimation2["default"](currentStyles[i], destStyles[i].style, currentVelocities[i])) {
          return false;
        }
      }
      return true;
    }
    function mergeAndSync(willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldLastIdealStyles, oldLastIdealVelocities) {
      var newMergedPropsStyles = _mergeDiff2["default"](oldMergedPropsStyles, destStyles, function(oldIndex, oldMergedPropsStyle) {
        var leavingStyle = willLeave(oldMergedPropsStyle);
        if (leavingStyle == null) {
          didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });
          return null;
        }
        if (_shouldStopAnimation2["default"](oldCurrentStyles[oldIndex], leavingStyle, oldCurrentVelocities[oldIndex])) {
          didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });
          return null;
        }
        return { key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data, style: leavingStyle };
      });
      var newCurrentStyles = [];
      var newCurrentVelocities = [];
      var newLastIdealStyles = [];
      var newLastIdealVelocities = [];
      for (var i = 0; i < newMergedPropsStyles.length; i++) {
        var newMergedPropsStyleCell = newMergedPropsStyles[i];
        var foundOldIndex = null;
        for (var j = 0; j < oldMergedPropsStyles.length; j++) {
          if (oldMergedPropsStyles[j].key === newMergedPropsStyleCell.key) {
            foundOldIndex = j;
            break;
          }
        }
        if (foundOldIndex == null) {
          var plainStyle = willEnter(newMergedPropsStyleCell);
          newCurrentStyles[i] = plainStyle;
          newLastIdealStyles[i] = plainStyle;
          var velocity = _mapToZero2["default"](newMergedPropsStyleCell.style);
          newCurrentVelocities[i] = velocity;
          newLastIdealVelocities[i] = velocity;
        } else {
          newCurrentStyles[i] = oldCurrentStyles[foundOldIndex];
          newLastIdealStyles[i] = oldLastIdealStyles[foundOldIndex];
          newCurrentVelocities[i] = oldCurrentVelocities[foundOldIndex];
          newLastIdealVelocities[i] = oldLastIdealVelocities[foundOldIndex];
        }
      }
      return [newMergedPropsStyles, newCurrentStyles, newCurrentVelocities, newLastIdealStyles, newLastIdealVelocities];
    }
    var TransitionMotion = function(_React$Component) {
      _inherits(TransitionMotion2, _React$Component);
      _createClass(TransitionMotion2, null, [{
        key: "propTypes",
        value: {
          defaultStyles: _propTypes2["default"].arrayOf(_propTypes2["default"].shape({
            key: _propTypes2["default"].string.isRequired,
            data: _propTypes2["default"].any,
            style: _propTypes2["default"].objectOf(_propTypes2["default"].number).isRequired
          })),
          styles: _propTypes2["default"].oneOfType([_propTypes2["default"].func, _propTypes2["default"].arrayOf(_propTypes2["default"].shape({
            key: _propTypes2["default"].string.isRequired,
            data: _propTypes2["default"].any,
            style: _propTypes2["default"].objectOf(_propTypes2["default"].oneOfType([_propTypes2["default"].number, _propTypes2["default"].object])).isRequired
          }))]).isRequired,
          children: _propTypes2["default"].func.isRequired,
          willEnter: _propTypes2["default"].func,
          willLeave: _propTypes2["default"].func,
          didLeave: _propTypes2["default"].func
        },
        enumerable: true
      }, {
        key: "defaultProps",
        value: {
          willEnter: function willEnter(styleThatEntered) {
            return _stripStyle2["default"](styleThatEntered.style);
          },
          // recall: returning null makes the current unmounting TransitionStyle
          // disappear immediately
          willLeave: function willLeave() {
            return null;
          },
          didLeave: function didLeave() {
          }
        },
        enumerable: true
      }]);
      function TransitionMotion2(props) {
        var _this = this;
        _classCallCheck(this, TransitionMotion2);
        _React$Component.call(this, props);
        this.unmounting = false;
        this.animationID = null;
        this.prevTime = 0;
        this.accumulatedTime = 0;
        this.unreadPropStyles = null;
        this.clearUnreadPropStyle = function(unreadPropStyles) {
          var _mergeAndSync = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, unreadPropStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);
          var mergedPropsStyles = _mergeAndSync[0];
          var currentStyles = _mergeAndSync[1];
          var currentVelocities = _mergeAndSync[2];
          var lastIdealStyles = _mergeAndSync[3];
          var lastIdealVelocities = _mergeAndSync[4];
          for (var i = 0; i < unreadPropStyles.length; i++) {
            var unreadPropStyle = unreadPropStyles[i].style;
            var dirty = false;
            for (var key2 in unreadPropStyle) {
              if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key2)) {
                continue;
              }
              var styleValue = unreadPropStyle[key2];
              if (typeof styleValue === "number") {
                if (!dirty) {
                  dirty = true;
                  currentStyles[i] = _extends3({}, currentStyles[i]);
                  currentVelocities[i] = _extends3({}, currentVelocities[i]);
                  lastIdealStyles[i] = _extends3({}, lastIdealStyles[i]);
                  lastIdealVelocities[i] = _extends3({}, lastIdealVelocities[i]);
                  mergedPropsStyles[i] = {
                    key: mergedPropsStyles[i].key,
                    data: mergedPropsStyles[i].data,
                    style: _extends3({}, mergedPropsStyles[i].style)
                  };
                }
                currentStyles[i][key2] = styleValue;
                currentVelocities[i][key2] = 0;
                lastIdealStyles[i][key2] = styleValue;
                lastIdealVelocities[i][key2] = 0;
                mergedPropsStyles[i].style[key2] = styleValue;
              }
            }
          }
          _this.setState({
            currentStyles,
            currentVelocities,
            mergedPropsStyles,
            lastIdealStyles,
            lastIdealVelocities
          });
        };
        this.startAnimationIfNecessary = function() {
          if (_this.unmounting) {
            return;
          }
          _this.animationID = _raf2["default"](function(timestamp) {
            if (_this.unmounting) {
              return;
            }
            var propStyles = _this.props.styles;
            var destStyles = typeof propStyles === "function" ? propStyles(rehydrateStyles(_this.state.mergedPropsStyles, _this.unreadPropStyles, _this.state.lastIdealStyles)) : propStyles;
            if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities, _this.state.mergedPropsStyles)) {
              _this.animationID = null;
              _this.accumulatedTime = 0;
              return;
            }
            var currentTime = timestamp || _performanceNow2["default"]();
            var timeDelta = currentTime - _this.prevTime;
            _this.prevTime = currentTime;
            _this.accumulatedTime = _this.accumulatedTime + timeDelta;
            if (_this.accumulatedTime > msPerFrame * 10) {
              _this.accumulatedTime = 0;
            }
            if (_this.accumulatedTime === 0) {
              _this.animationID = null;
              _this.startAnimationIfNecessary();
              return;
            }
            var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
            var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
            var _mergeAndSync2 = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, destStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);
            var newMergedPropsStyles = _mergeAndSync2[0];
            var newCurrentStyles = _mergeAndSync2[1];
            var newCurrentVelocities = _mergeAndSync2[2];
            var newLastIdealStyles = _mergeAndSync2[3];
            var newLastIdealVelocities = _mergeAndSync2[4];
            for (var i = 0; i < newMergedPropsStyles.length; i++) {
              var newMergedPropsStyle = newMergedPropsStyles[i].style;
              var newCurrentStyle = {};
              var newCurrentVelocity = {};
              var newLastIdealStyle = {};
              var newLastIdealVelocity = {};
              for (var key2 in newMergedPropsStyle) {
                if (!Object.prototype.hasOwnProperty.call(newMergedPropsStyle, key2)) {
                  continue;
                }
                var styleValue = newMergedPropsStyle[key2];
                if (typeof styleValue === "number") {
                  newCurrentStyle[key2] = styleValue;
                  newCurrentVelocity[key2] = 0;
                  newLastIdealStyle[key2] = styleValue;
                  newLastIdealVelocity[key2] = 0;
                } else {
                  var newLastIdealStyleValue = newLastIdealStyles[i][key2];
                  var newLastIdealVelocityValue = newLastIdealVelocities[i][key2];
                  for (var j = 0; j < framesToCatchUp; j++) {
                    var _stepper = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
                    newLastIdealStyleValue = _stepper[0];
                    newLastIdealVelocityValue = _stepper[1];
                  }
                  var _stepper2 = _stepper4["default"](msPerFrame / 1e3, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
                  var nextIdealX = _stepper2[0];
                  var nextIdealV = _stepper2[1];
                  newCurrentStyle[key2] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
                  newCurrentVelocity[key2] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
                  newLastIdealStyle[key2] = newLastIdealStyleValue;
                  newLastIdealVelocity[key2] = newLastIdealVelocityValue;
                }
              }
              newLastIdealStyles[i] = newLastIdealStyle;
              newLastIdealVelocities[i] = newLastIdealVelocity;
              newCurrentStyles[i] = newCurrentStyle;
              newCurrentVelocities[i] = newCurrentVelocity;
            }
            _this.animationID = null;
            _this.accumulatedTime -= framesToCatchUp * msPerFrame;
            _this.setState({
              currentStyles: newCurrentStyles,
              currentVelocities: newCurrentVelocities,
              lastIdealStyles: newLastIdealStyles,
              lastIdealVelocities: newLastIdealVelocities,
              mergedPropsStyles: newMergedPropsStyles
            });
            _this.unreadPropStyles = null;
            _this.startAnimationIfNecessary();
          });
        };
        this.state = this.defaultState();
      }
      TransitionMotion2.prototype.defaultState = function defaultState() {
        var _props = this.props;
        var defaultStyles = _props.defaultStyles;
        var styles2 = _props.styles;
        var willEnter = _props.willEnter;
        var willLeave = _props.willLeave;
        var didLeave = _props.didLeave;
        var destStyles = typeof styles2 === "function" ? styles2(defaultStyles) : styles2;
        var oldMergedPropsStyles = void 0;
        if (defaultStyles == null) {
          oldMergedPropsStyles = destStyles;
        } else {
          oldMergedPropsStyles = defaultStyles.map(function(defaultStyleCell) {
            for (var i = 0; i < destStyles.length; i++) {
              if (destStyles[i].key === defaultStyleCell.key) {
                return destStyles[i];
              }
            }
            return defaultStyleCell;
          });
        }
        var oldCurrentStyles = defaultStyles == null ? destStyles.map(function(s) {
          return _stripStyle2["default"](s.style);
        }) : defaultStyles.map(function(s) {
          return _stripStyle2["default"](s.style);
        });
        var oldCurrentVelocities = defaultStyles == null ? destStyles.map(function(s) {
          return _mapToZero2["default"](s.style);
        }) : defaultStyles.map(function(s) {
          return _mapToZero2["default"](s.style);
        });
        var _mergeAndSync3 = mergeAndSync(
          // Because this is an old-style createReactClass component, Flow doesn't
          // understand that the willEnter and willLeave props have default values
          // and will always be present.
          willEnter,
          willLeave,
          didLeave,
          oldMergedPropsStyles,
          destStyles,
          oldCurrentStyles,
          oldCurrentVelocities,
          oldCurrentStyles,
          // oldLastIdealStyles really
          oldCurrentVelocities
        );
        var mergedPropsStyles = _mergeAndSync3[0];
        var currentStyles = _mergeAndSync3[1];
        var currentVelocities = _mergeAndSync3[2];
        var lastIdealStyles = _mergeAndSync3[3];
        var lastIdealVelocities = _mergeAndSync3[4];
        return {
          currentStyles,
          currentVelocities,
          lastIdealStyles,
          lastIdealVelocities,
          mergedPropsStyles
        };
      };
      TransitionMotion2.prototype.componentDidMount = function componentDidMount() {
        this.prevTime = _performanceNow2["default"]();
        this.startAnimationIfNecessary();
      };
      TransitionMotion2.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
        if (this.unreadPropStyles) {
          this.clearUnreadPropStyle(this.unreadPropStyles);
        }
        var styles2 = props.styles;
        if (typeof styles2 === "function") {
          this.unreadPropStyles = styles2(rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.lastIdealStyles));
        } else {
          this.unreadPropStyles = styles2;
        }
        if (this.animationID == null) {
          this.prevTime = _performanceNow2["default"]();
          this.startAnimationIfNecessary();
        }
      };
      TransitionMotion2.prototype.componentWillUnmount = function componentWillUnmount() {
        this.unmounting = true;
        if (this.animationID != null) {
          _raf2["default"].cancel(this.animationID);
          this.animationID = null;
        }
      };
      TransitionMotion2.prototype.render = function render() {
        var hydratedStyles = rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.currentStyles);
        var renderedChildren = this.props.children(hydratedStyles);
        return renderedChildren && _react2["default"].Children.only(renderedChildren);
      };
      return TransitionMotion2;
    }(_react2["default"].Component);
    exports["default"] = TransitionMotion;
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/presets.js
var require_presets = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/presets.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = {
      noWobble: { stiffness: 170, damping: 26 },
      // the default, if nothing provided
      gentle: { stiffness: 120, damping: 14 },
      wobbly: { stiffness: 180, damping: 12 },
      stiff: { stiffness: 210, damping: 20 }
    };
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/spring.js
var require_spring = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/spring.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    var _extends3 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    exports["default"] = spring;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var _presets = require_presets();
    var _presets2 = _interopRequireDefault(_presets);
    var defaultConfig = _extends3({}, _presets2["default"].noWobble, {
      precision: 0.01
    });
    function spring(val, config) {
      return _extends3({}, defaultConfig, config, { val });
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/reorderKeys.js
var require_reorderKeys = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/reorderKeys.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = reorderKeys;
    var hasWarned = false;
    function reorderKeys() {
      if (true) {
        if (!hasWarned) {
          hasWarned = true;
          console.error("`reorderKeys` has been removed, since it is no longer needed for TransitionMotion's new styles array API.");
        }
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/react-motion.js
var require_react_motion = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/node_modules/react-motion/lib/react-motion.js"(exports) {
    "use strict";
    exports.__esModule = true;
    function _interopRequire(obj) {
      return obj && obj.__esModule ? obj["default"] : obj;
    }
    var _Motion = require_Motion();
    exports.Motion = _interopRequire(_Motion);
    var _StaggeredMotion = require_StaggeredMotion();
    exports.StaggeredMotion = _interopRequire(_StaggeredMotion);
    var _TransitionMotion = require_TransitionMotion();
    exports.TransitionMotion = _interopRequire(_TransitionMotion);
    var _spring = require_spring();
    exports.spring = _interopRequire(_spring);
    var _presets = require_presets();
    exports.presets = _interopRequire(_presets);
    var _stripStyle = require_stripStyle();
    exports.stripStyle = _interopRequire(_stripStyle);
    var _reorderKeys = require_reorderKeys();
    exports.reorderKeys = _interopRequire(_reorderKeys);
  }
});

// node_modules/react-images/node_modules/react-view-pager/lib/Swipe.js
var require_Swipe = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/lib/Swipe.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function getTouchEvent(e) {
      return e.touches && e.touches[0] || e;
    }
    var Swipe = function() {
      function Swipe2(pager) {
        var _this = this;
        _classCallCheck(this, Swipe2);
        this._onSwipeStart = function(e) {
          var _getTouchEvent = getTouchEvent(e), pageX = _getTouchEvent.pageX, pageY = _getTouchEvent.pageY;
          _this.pager.isSwiping = true;
          _this._swipeStart = {
            x: pageX,
            y: pageY
            // reset swipeDiff
          };
          _this._swipeDiff = {
            x: 0,
            y: 0
            // determine if a flick or not
          };
          _this._isFlick = true;
          setTimeout(function() {
            _this._isFlick = false;
          }, _this.pager.options.flickTimeout);
          _this.pager.emit("swipeStart");
        };
        this._onSwipeMove = function(e) {
          if (!_this.pager.isSwiping)
            return;
          var _pager$options = _this.pager.options, swipeThreshold = _pager$options.swipeThreshold, axis = _pager$options.axis;
          var _getTouchEvent2 = getTouchEvent(e), pageX = _getTouchEvent2.pageX, pageY = _getTouchEvent2.pageY;
          if (!_this._trackStart) {
            _this._trackStart = _this.pager.currentTween;
          }
          _this._swipeDiff = {
            x: _this._swipeStart.x - pageX,
            y: _this._swipeStart.y - pageY
          };
          if (_this._isSwipe(swipeThreshold)) {
            e.preventDefault();
            e.stopPropagation();
            var swipeDiff = _this._swipeDiff[axis];
            var trackPosition = _this._trackStart - swipeDiff;
            _this.pager.setPositionValue(trackPosition);
            _this.pager.emit("swipeMove");
          }
        };
        this._onSwipeEnd = function() {
          var _pager$options2 = _this.pager.options, swipeThreshold = _pager$options2.swipeThreshold, viewsToMove = _pager$options2.viewsToMove, axis = _pager$options2.axis, infinite = _pager$options2.infinite;
          var threshold = _this._isFlick ? swipeThreshold : _this.pager.currentView.getSize() * viewsToMove * swipeThreshold;
          _this.pager.isSwiping = false;
          _this._trackStart = false;
          if (_this._swipeDiff.x || _this._swipeDiff.y) {
            if (_this._isSwipe(threshold)) {
              if (_this._swipeDiff[axis] < 0) {
                _this.pager.prev();
              } else {
                _this.pager.next();
              }
            } else {
              _this.pager.setPositionValue();
            }
          }
          _this.pager.emit("swipeEnd");
        };
        this._onSwipePast = function() {
          if (_this.pager.isSwiping) {
            _this._onSwipeEnd();
          }
        };
        this.pager = pager;
        this._trackStart = false;
        this._swipeStart = this._swipeDiff = {
          x: 0,
          y: 0
        };
      }
      _createClass(Swipe2, [{
        key: "_isSwipe",
        value: function _isSwipe(threshold) {
          var _swipeDiff = this._swipeDiff, x = _swipeDiff.x, y = _swipeDiff.y;
          return this.pager.options.axis === "x" ? Math.abs(x) > Math.max(threshold, Math.abs(y)) : Math.abs(x) < Math.max(threshold, Math.abs(y));
        }
      }, {
        key: "getEvents",
        value: function getEvents() {
          var swipe = this.pager.options.swipe;
          var swipeEvents = {};
          if (swipe === true || swipe === "mouse") {
            swipeEvents.onMouseDown = this._onSwipeStart;
            swipeEvents.onMouseMove = this._onSwipeMove;
            swipeEvents.onMouseUp = this._onSwipeEnd;
            swipeEvents.onMouseLeave = this._onSwipePast;
          }
          if (swipe === true || swipe === "touch") {
            swipeEvents.onTouchStart = this._onSwipeStart;
            swipeEvents.onTouchMove = this._onSwipeMove;
            swipeEvents.onTouchEnd = this._onSwipeEnd;
          }
          return swipeEvents;
        }
      }]);
      return Swipe2;
    }();
    exports.default = Swipe;
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/lib/Keyboard.js
var require_Keyboard = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/lib/Keyboard.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _utils = require_utils();
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    var Keyboard = function() {
      function Keyboard2(pager) {
        var _this = this;
        _classCallCheck(this, Keyboard2);
        this._handleKeyDown = function(e) {
          switch (e.key) {
            case "ArrowUp":
            case "ArrowLeft":
              _this.pager.prev();
              return;
            case "ArrowDown":
            case "ArrowRight":
            case " ":
              _this.pager.next();
              return;
            case "Home":
              _this.pager.setCurrentView({ index: 0 });
              return;
            case "End":
              _this.pager.setCurrentView({ index: _this.pager.views.length - 1 });
              return;
          }
          var maxNumKey = (0, _utils.clamp)(_this.pager.views.length, 0, 9);
          for (var i = 1; i <= maxNumKey; i++) {
            if (+e.key === i) {
              _this.pager.setCurrentView({ index: i - 1 });
            }
          }
        };
        this.pager = pager;
      }
      _createClass(Keyboard2, [{
        key: "getEvents",
        value: function getEvents() {
          var keyboardEvents = {};
          if (this.pager.options.accessibility) {
            keyboardEvents.onKeyDown = this._handleKeyDown;
          }
          return keyboardEvents;
        }
      }]);
      return Keyboard2;
    }();
    exports.default = Keyboard;
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/lib/special-assign.js
var require_special_assign = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/lib/special-assign.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = specialAssign;
    function specialAssign(a, b, reserved) {
      for (var x in b) {
        if (!b.hasOwnProperty(x) || reserved[x])
          continue;
        a[x] = b[x];
      }
      return a;
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/lib/Frame.js
var require_Frame = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/lib/Frame.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends3 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _reactDom = require_react_dom();
    var _reactMotion = require_react_motion();
    var _Pager = require_Pager();
    var _Pager2 = _interopRequireDefault(_Pager);
    var _Swipe = require_Swipe();
    var _Swipe2 = _interopRequireDefault(_Swipe);
    var _Keyboard = require_Keyboard();
    var _Keyboard2 = _interopRequireDefault(_Keyboard);
    var _specialAssign = require_special_assign();
    var _specialAssign2 = _interopRequireDefault(_specialAssign);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var checkedProps = {
      tag: _propTypes2.default.any,
      autoSize: _propTypes2.default.oneOf([true, false, "width", "height"]),
      accessibility: _propTypes2.default.bool,
      springConfig: _propTypes2.default.objectOf(_propTypes2.default.number)
    };
    var Frame2 = function(_Component) {
      _inherits(Frame3, _Component);
      function Frame3(props) {
        _classCallCheck(this, Frame3);
        var _this = _possibleConstructorReturn(this, (Frame3.__proto__ || Object.getPrototypeOf(Frame3)).call(this, props));
        _this._setFrameSize = function() {
          var frameSize = _this.context.pager.getFrameSize({ fullSize: true });
          if (frameSize.width && frameSize.height) {
            _this.setState(frameSize, function() {
              if (_this.state.instant) {
                _this.setState({ instant: false });
              }
            });
          }
        };
        _this.state = {
          width: 0,
          height: 0,
          instant: true
        };
        _this._hydrate = false;
        return _this;
      }
      _createClass(Frame3, [{
        key: "componentWillMount",
        value: function componentWillMount() {
          var pager = this.context.pager;
          var _props = this.props, autoSize = _props.autoSize, accessibility = _props.accessibility;
          pager.setOptions({ autoSize, accessibility });
          this._swipe = new _Swipe2.default(pager);
          this._keyboard = new _Keyboard2.default(pager);
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          var pager = this.context.pager;
          pager.addFrame((0, _reactDom.findDOMNode)(this));
          this._setFrameSize();
          pager.on("viewChange", this._setFrameSize);
          pager.on("hydrated", this._setFrameSize);
        }
      }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(_ref) {
          var autoSize = _ref.autoSize, accessibility = _ref.accessibility;
          if (this.props.autoSize !== autoSize || this.props.accessibility !== accessibility) {
            this.context.pager.setOptions({ autoSize, accessibility });
            this._hydrate = true;
          }
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(nextProps) {
          if (this._hydrate) {
            this.context.pager.hydrate();
            this._hydrate = false;
          }
        }
      }, {
        key: "_getFrameStyle",
        value: function _getFrameStyle() {
          var springConfig = this.props.springConfig;
          var _state = this.state, width = _state.width, height = _state.height, instant = _state.instant;
          return {
            maxWidth: instant ? width : (0, _reactMotion.spring)(width, springConfig),
            height: instant ? height : (0, _reactMotion.spring)(height, springConfig)
          };
        }
      }, {
        key: "_renderFrame",
        value: function _renderFrame(style) {
          var pager = this.context.pager;
          var _props2 = this.props, tag = _props2.tag, accessibility = _props2.accessibility;
          var props = (0, _specialAssign2.default)(_extends3({}, this._swipe.getEvents(), this._keyboard.getEvents(), {
            tabIndex: accessibility ? 0 : null
          }), this.props, checkedProps);
          return (0, _react.createElement)(tag, _extends3({}, props, {
            style: _extends3({}, style, props.style)
          }));
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var autoSize = this.props.autoSize;
          var height = this.state.height;
          var style = {
            position: "relative",
            overflow: "hidden"
          };
          if (autoSize) {
            return _react2.default.createElement(
              _reactMotion.Motion,
              { style: this._getFrameStyle() },
              function(dimensions) {
                if ((autoSize === true || autoSize === "width") && dimensions.maxWidth) {
                  style.maxWidth = dimensions.maxWidth;
                }
                if ((autoSize === true || autoSize === "height") && dimensions.height) {
                  style.height = dimensions.height;
                }
                return _this2._renderFrame(style);
              }
            );
          } else {
            return this._renderFrame(style);
          }
        }
      }]);
      return Frame3;
    }(_react.Component);
    Frame2.contextTypes = {
      pager: _propTypes2.default.instanceOf(_Pager2.default)
    };
    Frame2.propTypes = checkedProps;
    Frame2.defaultProps = {
      tag: "div",
      autoSize: false,
      accessibility: true,
      springConfig: _reactMotion.presets.noWobble
    };
    exports.default = Frame2;
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/lib/get-index.js
var require_get_index = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/lib/get-index.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = getIndex;
    var _react = require_react();
    function getIndex(key2, children2) {
      var index2 = null;
      _react.Children.forEach(children2, function(child, _index) {
        if (child.key === key2 || _index === key2) {
          index2 = _index;
          return;
        }
      });
      return index2;
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/lib/Track.js
var require_Track = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/lib/Track.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
      return typeof obj;
    } : function(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
    var _extends3 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _reactDom = require_react_dom();
    var _reactMotion = require_react_motion();
    var _Pager = require_Pager();
    var _Pager2 = _interopRequireDefault(_Pager);
    var _getIndex = require_get_index();
    var _getIndex2 = _interopRequireDefault(_getIndex);
    var _specialAssign = require_special_assign();
    var _specialAssign2 = _interopRequireDefault(_specialAssign);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var noop2 = function noop3() {
      return null;
    };
    var checkedProps = {
      tag: _propTypes2.default.any,
      currentView: _propTypes2.default.any,
      viewsToShow: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.oneOf(["auto"])]),
      viewsToMove: _propTypes2.default.number,
      align: _propTypes2.default.number,
      contain: _propTypes2.default.bool,
      axis: _propTypes2.default.oneOf(["x", "y"]),
      animations: _propTypes2.default.array,
      infinite: _propTypes2.default.bool,
      instant: _propTypes2.default.bool,
      swipe: _propTypes2.default.oneOf([true, false, "mouse", "touch"]),
      swipeThreshold: _propTypes2.default.number,
      flickTimeout: _propTypes2.default.number,
      // rightToLeft: PropTypes.bool,
      // lazyLoad: PropTypes.bool,
      springConfig: _propTypes2.default.objectOf(_propTypes2.default.number),
      onSwipeStart: _propTypes2.default.func,
      onSwipeMove: _propTypes2.default.func,
      onSwipeEnd: _propTypes2.default.func,
      onScroll: _propTypes2.default.func,
      onViewChange: _propTypes2.default.func,
      onRest: _propTypes2.default.func
    };
    var isNotEqual = function isNotEqual2(current, next) {
      return current.viewsToShow !== next.viewsToShow || current.viewsToMove !== next.viewsToMove || current.align !== next.align || current.axis !== next.axis || current.animations !== next.animations || current.infinite !== next.infinite || current.swipe !== next.swipe || current.swipeThreshold !== next.swipeThreshold || current.flickTimeout !== next.flickTimeout;
    };
    var TrackScroller = function(_Component) {
      _inherits(TrackScroller2, _Component);
      function TrackScroller2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, TrackScroller2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TrackScroller2.__proto__ || Object.getPrototypeOf(TrackScroller2)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
          x: 0,
          y: 0
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(TrackScroller2, [{
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(_ref2) {
          var _this2 = this;
          var trackPosition = _ref2.trackPosition;
          var pager = this.context.pager;
          pager.setViewStyles(trackPosition);
          if (this.props.trackPosition !== trackPosition) {
            requestAnimationFrame(function() {
              return _this2.props.onScroll(trackPosition / pager.getTrackSize(false) * -1, trackPosition);
            });
          }
        }
      }, {
        key: "_renderViews",
        value: function _renderViews() {
          return _react.Children.map(this.props.children, function(child) {
            return child;
          });
        }
      }, {
        key: "render",
        value: function render() {
          var pager = this.context.pager;
          var _props = this.props, tag = _props.tag, trackPosition = _props.trackPosition, children2 = _props.children, restProps = _objectWithoutProperties(_props, ["tag", "trackPosition", "children"]);
          var style = _extends3({}, restProps.style);
          if (pager.track) {
            style = _extends3({}, style, pager.track.getStyles(trackPosition));
          }
          return (0, _react.createElement)(tag, _extends3({}, restProps, {
            style
          }), this._renderViews());
        }
      }]);
      return TrackScroller2;
    }(_react.Component);
    TrackScroller.propTypes = checkedProps;
    TrackScroller.contextTypes = {
      pager: _propTypes2.default.instanceOf(_Pager2.default)
    };
    var Track2 = function(_Component2) {
      _inherits(Track3, _Component2);
      function Track3() {
        var _ref3;
        var _temp2, _this3, _ret2;
        _classCallCheck(this, Track3);
        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }
        return _ret2 = (_temp2 = (_this3 = _possibleConstructorReturn(this, (_ref3 = Track3.__proto__ || Object.getPrototypeOf(Track3)).call.apply(_ref3, [this].concat(args))), _this3), _this3.state = {
          instant: false
        }, _this3._currentTween = 0, _this3._hydrate = false, _this3._handleOnRest = function() {
          if (_this3.props.infinite && !_this3.state.instant) {
            _this3.context.pager.resetViewIndex();
            _this3._setValueInstantly(true, true);
          }
          _this3.props.onRest();
        }, _temp2), _possibleConstructorReturn(_this3, _ret2);
      }
      _createClass(Track3, [{
        key: "componentWillMount",
        value: function componentWillMount() {
          this.context.pager.setOptions(this.props);
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this4 = this;
          var pager = this.context.pager;
          pager.addTrack((0, _reactDom.findDOMNode)(this));
          this.scrollTo((0, _getIndex2.default)(this.props.currentView, this.props.children));
          pager.on("hydrated", function() {
            return _this4._setValueInstantly(true, true);
          });
          pager.on("swipeMove", function() {
            return _this4._setValueInstantly(true);
          });
          pager.on("swipeEnd", function() {
            return _this4._setValueInstantly(false);
          });
          pager.on("swipeStart", this.props.onSwipeStart);
          pager.on("swipeMove", this.props.onSwipeMove);
          pager.on("swipeEnd", this.props.onSwipeEnd);
          pager.on("viewChange", this.props.onViewChange);
        }
      }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
          var currentView = nextProps.currentView, instant = nextProps.instant, children2 = nextProps.children;
          if (this.props.instant !== instant) {
            this._setValueInstantly(instant);
          }
          if ((typeof currentView === "undefined" ? "undefined" : _typeof2(currentView)) !== void 0 && this.props.currentView !== currentView) {
            this.scrollTo((0, _getIndex2.default)(currentView, children2));
          }
          if (isNotEqual(this.props, nextProps)) {
            this.context.pager.setOptions(nextProps);
            this._hydrate = true;
          }
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(nextProps) {
          if (this._hydrate) {
            this.context.pager.hydrate();
            this._hydrate = false;
          }
        }
      }, {
        key: "prev",
        value: function prev() {
          this.context.pager.prev();
        }
      }, {
        key: "next",
        value: function next() {
          this.context.pager.next();
        }
      }, {
        key: "scrollTo",
        value: function scrollTo(index2) {
          this.context.pager.setCurrentView({ index: index2 });
        }
      }, {
        key: "_setValueInstantly",
        value: function _setValueInstantly(instant, reset) {
          var _this5 = this;
          this.setState({ instant }, function() {
            if (reset) {
              _this5.setState({ instant: false });
            }
          });
        }
      }, {
        key: "_getTrackStyle",
        value: function _getTrackStyle() {
          var trackPosition = this.context.pager.trackPosition;
          if (!this.state.instant) {
            trackPosition = (0, _reactMotion.spring)(trackPosition, this.props.springConfig);
          }
          return { trackPosition };
        }
      }, {
        key: "render",
        value: function render() {
          var _props2 = this.props, tag = _props2.tag, onScroll = _props2.onScroll, restProps = _objectWithoutProperties(_props2, ["tag", "onScroll"]);
          return _react2.default.createElement(
            _reactMotion.Motion,
            {
              style: this._getTrackStyle(),
              onRest: this._handleOnRest
            },
            function(_ref4) {
              var trackPosition = _ref4.trackPosition;
              return (0, _react.createElement)(TrackScroller, (0, _specialAssign2.default)({ trackPosition, tag, onScroll }, restProps, checkedProps));
            }
          );
        }
      }]);
      return Track3;
    }(_react.Component);
    Track2.propTypes = checkedProps;
    Track2.defaultProps = {
      tag: "div",
      currentView: 0,
      viewsToShow: 1,
      viewsToMove: 1,
      align: 0,
      contain: false,
      axis: "x",
      infinite: false,
      instant: false,
      swipe: true,
      swipeThreshold: 0.5,
      flickTimeout: 300,
      springConfig: _reactMotion.presets.noWobble,
      onSwipeStart: noop2,
      onSwipeMove: noop2,
      onSwipeEnd: noop2,
      onScroll: noop2,
      onViewChange: noop2,
      onRest: noop2
    };
    Track2.contextTypes = {
      pager: _propTypes2.default.instanceOf(_Pager2.default)
    };
    exports.default = Track2;
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/lib/View.js
var require_View = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/lib/View.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends3 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _reactDom = require_react_dom();
    var _Pager = require_Pager();
    var _Pager2 = _interopRequireDefault(_Pager);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var View3 = function(_Component) {
      _inherits(View4, _Component);
      function View4() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, View4);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = View4.__proto__ || Object.getPrototypeOf(View4)).call.apply(_ref, [this].concat(args))), _this), _this._viewAdded = false, _this._viewInstance = null, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(View4, [{
        key: "getChildContext",
        value: function getChildContext() {
          return {
            view: this._viewInstance
          };
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          this._viewInstance = this.context.pager.addView((0, _reactDom.findDOMNode)(this));
          this._viewAdded = true;
          this.forceUpdate();
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.context.pager.removeView(this._viewInstance);
        }
      }, {
        key: "render",
        value: function render() {
          var pager = this.context.pager;
          var _pager$options = pager.options, viewsToShow = _pager$options.viewsToShow, axis = _pager$options.axis;
          var _props = this.props, tag = _props.tag, trackSize = _props.trackSize, restProps = _objectWithoutProperties(_props, ["tag", "trackSize"]);
          var style = _extends3({}, restProps.style);
          if (!this._viewAdded) {
            style.visibility = "hidden";
            style.pointerEvents = "none";
          }
          if (this._viewInstance) {
            style = _extends3({}, style, this._viewInstance.getStyles());
          }
          return (0, _react.createElement)(tag, _extends3({}, restProps, { style }));
        }
      }]);
      return View4;
    }(_react.Component);
    View3.contextTypes = {
      pager: _propTypes2.default.instanceOf(_Pager2.default)
    };
    View3.childContextTypes = {
      view: _propTypes2.default.any
    };
    View3.propTypes = {
      tag: _propTypes2.default.any
    };
    View3.defaultProps = {
      tag: "div"
    };
    exports.default = View3;
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/lib/AnimatedView.js
var require_AnimatedView = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/lib/AnimatedView.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends3 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _animationBus = require_animation_bus();
    var _animationBus2 = _interopRequireDefault(_animationBus);
    var _Pager = require_Pager();
    var _Pager2 = _interopRequireDefault(_Pager);
    var _specialAssign = require_special_assign();
    var _specialAssign2 = _interopRequireDefault(_specialAssign);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var checkedProps = {
      tag: _propTypes2.default.string,
      index: _propTypes2.default.number,
      animations: _propTypes2.default.array
    };
    var AnimatedView = function(_Component) {
      _inherits(AnimatedView2, _Component);
      function AnimatedView2() {
        _classCallCheck(this, AnimatedView2);
        return _possibleConstructorReturn(this, (AnimatedView2.__proto__ || Object.getPrototypeOf(AnimatedView2)).apply(this, arguments));
      }
      _createClass(AnimatedView2, [{
        key: "componentWillMount",
        value: function componentWillMount() {
          var animations = this.props.animations;
          if (animations.length) {
            this._animationBus = new _animationBus2.default({
              animations,
              origin: function origin(view) {
                return view.origin;
              }
            });
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _props = this.props, tag = _props.tag, index2 = _props.index, restProps = _objectWithoutProperties(_props, ["tag", "index"]);
          var style = _extends3({}, restProps.style);
          if (this._animationBus) {
            var view = this.context.view || this.context.pager.getView(index2);
            if (view) {
              style = _extends3({}, restProps.style, this._animationBus.getStyles(view));
            }
          }
          return (0, _react.createElement)(tag, (0, _specialAssign2.default)({ style }, this.props, checkedProps));
        }
      }]);
      return AnimatedView2;
    }(_react.Component);
    AnimatedView.contextTypes = {
      pager: _propTypes2.default.instanceOf(_Pager2.default),
      view: _propTypes2.default.any
    };
    AnimatedView.propTypes = checkedProps;
    AnimatedView.defaultProps = {
      tag: "div",
      animations: []
    };
    exports.default = AnimatedView;
    module.exports = exports["default"];
  }
});

// node_modules/react-images/node_modules/react-view-pager/lib/react-view-pager.js
var require_react_view_pager = __commonJS({
  "node_modules/react-images/node_modules/react-view-pager/lib/react-view-pager.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.utils = exports.AnimatedView = exports.View = exports.Track = exports.Frame = exports.ViewPager = void 0;
    var _ViewPager2 = require_ViewPager();
    var _ViewPager3 = _interopRequireDefault(_ViewPager2);
    var _Frame2 = require_Frame();
    var _Frame3 = _interopRequireDefault(_Frame2);
    var _Track2 = require_Track();
    var _Track3 = _interopRequireDefault(_Track2);
    var _View2 = require_View();
    var _View3 = _interopRequireDefault(_View2);
    var _AnimatedView2 = require_AnimatedView();
    var _AnimatedView3 = _interopRequireDefault(_AnimatedView2);
    var _utils2 = require_utils();
    var _utils3 = _interopRequireDefault(_utils2);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.ViewPager = _ViewPager3.default;
    exports.Frame = _Frame3.default;
    exports.Track = _Track3.default;
    exports.View = _View3.default;
    exports.AnimatedView = _AnimatedView3.default;
    exports.utils = _utils3.default;
  }
});

// node_modules/react-property/lib/possibleStandardNamesOptimized.js
var require_possibleStandardNamesOptimized = __commonJS({
  "node_modules/react-property/lib/possibleStandardNamesOptimized.js"(exports) {
    var SAME = 0;
    exports.SAME = SAME;
    var CAMELCASE = 1;
    exports.CAMELCASE = CAMELCASE;
    exports.possibleStandardNames = {
      accept: 0,
      acceptCharset: 1,
      "accept-charset": "acceptCharset",
      accessKey: 1,
      action: 0,
      allowFullScreen: 1,
      alt: 0,
      as: 0,
      async: 0,
      autoCapitalize: 1,
      autoComplete: 1,
      autoCorrect: 1,
      autoFocus: 1,
      autoPlay: 1,
      autoSave: 1,
      capture: 0,
      cellPadding: 1,
      cellSpacing: 1,
      challenge: 0,
      charSet: 1,
      checked: 0,
      children: 0,
      cite: 0,
      class: "className",
      classID: 1,
      className: 1,
      cols: 0,
      colSpan: 1,
      content: 0,
      contentEditable: 1,
      contextMenu: 1,
      controls: 0,
      controlsList: 1,
      coords: 0,
      crossOrigin: 1,
      dangerouslySetInnerHTML: 1,
      data: 0,
      dateTime: 1,
      default: 0,
      defaultChecked: 1,
      defaultValue: 1,
      defer: 0,
      dir: 0,
      disabled: 0,
      disablePictureInPicture: 1,
      disableRemotePlayback: 1,
      download: 0,
      draggable: 0,
      encType: 1,
      enterKeyHint: 1,
      for: "htmlFor",
      form: 0,
      formMethod: 1,
      formAction: 1,
      formEncType: 1,
      formNoValidate: 1,
      formTarget: 1,
      frameBorder: 1,
      headers: 0,
      height: 0,
      hidden: 0,
      high: 0,
      href: 0,
      hrefLang: 1,
      htmlFor: 1,
      httpEquiv: 1,
      "http-equiv": "httpEquiv",
      icon: 0,
      id: 0,
      innerHTML: 1,
      inputMode: 1,
      integrity: 0,
      is: 0,
      itemID: 1,
      itemProp: 1,
      itemRef: 1,
      itemScope: 1,
      itemType: 1,
      keyParams: 1,
      keyType: 1,
      kind: 0,
      label: 0,
      lang: 0,
      list: 0,
      loop: 0,
      low: 0,
      manifest: 0,
      marginWidth: 1,
      marginHeight: 1,
      max: 0,
      maxLength: 1,
      media: 0,
      mediaGroup: 1,
      method: 0,
      min: 0,
      minLength: 1,
      multiple: 0,
      muted: 0,
      name: 0,
      noModule: 1,
      nonce: 0,
      noValidate: 1,
      open: 0,
      optimum: 0,
      pattern: 0,
      placeholder: 0,
      playsInline: 1,
      poster: 0,
      preload: 0,
      profile: 0,
      radioGroup: 1,
      readOnly: 1,
      referrerPolicy: 1,
      rel: 0,
      required: 0,
      reversed: 0,
      role: 0,
      rows: 0,
      rowSpan: 1,
      sandbox: 0,
      scope: 0,
      scoped: 0,
      scrolling: 0,
      seamless: 0,
      selected: 0,
      shape: 0,
      size: 0,
      sizes: 0,
      span: 0,
      spellCheck: 1,
      src: 0,
      srcDoc: 1,
      srcLang: 1,
      srcSet: 1,
      start: 0,
      step: 0,
      style: 0,
      summary: 0,
      tabIndex: 1,
      target: 0,
      title: 0,
      type: 0,
      useMap: 1,
      value: 0,
      width: 0,
      wmode: 0,
      wrap: 0,
      about: 0,
      accentHeight: 1,
      "accent-height": "accentHeight",
      accumulate: 0,
      additive: 0,
      alignmentBaseline: 1,
      "alignment-baseline": "alignmentBaseline",
      allowReorder: 1,
      alphabetic: 0,
      amplitude: 0,
      arabicForm: 1,
      "arabic-form": "arabicForm",
      ascent: 0,
      attributeName: 1,
      attributeType: 1,
      autoReverse: 1,
      azimuth: 0,
      baseFrequency: 1,
      baselineShift: 1,
      "baseline-shift": "baselineShift",
      baseProfile: 1,
      bbox: 0,
      begin: 0,
      bias: 0,
      by: 0,
      calcMode: 1,
      capHeight: 1,
      "cap-height": "capHeight",
      clip: 0,
      clipPath: 1,
      "clip-path": "clipPath",
      clipPathUnits: 1,
      clipRule: 1,
      "clip-rule": "clipRule",
      color: 0,
      colorInterpolation: 1,
      "color-interpolation": "colorInterpolation",
      colorInterpolationFilters: 1,
      "color-interpolation-filters": "colorInterpolationFilters",
      colorProfile: 1,
      "color-profile": "colorProfile",
      colorRendering: 1,
      "color-rendering": "colorRendering",
      contentScriptType: 1,
      contentStyleType: 1,
      cursor: 0,
      cx: 0,
      cy: 0,
      d: 0,
      datatype: 0,
      decelerate: 0,
      descent: 0,
      diffuseConstant: 1,
      direction: 0,
      display: 0,
      divisor: 0,
      dominantBaseline: 1,
      "dominant-baseline": "dominantBaseline",
      dur: 0,
      dx: 0,
      dy: 0,
      edgeMode: 1,
      elevation: 0,
      enableBackground: 1,
      "enable-background": "enableBackground",
      end: 0,
      exponent: 0,
      externalResourcesRequired: 1,
      fill: 0,
      fillOpacity: 1,
      "fill-opacity": "fillOpacity",
      fillRule: 1,
      "fill-rule": "fillRule",
      filter: 0,
      filterRes: 1,
      filterUnits: 1,
      floodOpacity: 1,
      "flood-opacity": "floodOpacity",
      floodColor: 1,
      "flood-color": "floodColor",
      focusable: 0,
      fontFamily: 1,
      "font-family": "fontFamily",
      fontSize: 1,
      "font-size": "fontSize",
      fontSizeAdjust: 1,
      "font-size-adjust": "fontSizeAdjust",
      fontStretch: 1,
      "font-stretch": "fontStretch",
      fontStyle: 1,
      "font-style": "fontStyle",
      fontVariant: 1,
      "font-variant": "fontVariant",
      fontWeight: 1,
      "font-weight": "fontWeight",
      format: 0,
      from: 0,
      fx: 0,
      fy: 0,
      g1: 0,
      g2: 0,
      glyphName: 1,
      "glyph-name": "glyphName",
      glyphOrientationHorizontal: 1,
      "glyph-orientation-horizontal": "glyphOrientationHorizontal",
      glyphOrientationVertical: 1,
      "glyph-orientation-vertical": "glyphOrientationVertical",
      glyphRef: 1,
      gradientTransform: 1,
      gradientUnits: 1,
      hanging: 0,
      horizAdvX: 1,
      "horiz-adv-x": "horizAdvX",
      horizOriginX: 1,
      "horiz-origin-x": "horizOriginX",
      ideographic: 0,
      imageRendering: 1,
      "image-rendering": "imageRendering",
      in2: 0,
      in: 0,
      inlist: 0,
      intercept: 0,
      k1: 0,
      k2: 0,
      k3: 0,
      k4: 0,
      k: 0,
      kernelMatrix: 1,
      kernelUnitLength: 1,
      kerning: 0,
      keyPoints: 1,
      keySplines: 1,
      keyTimes: 1,
      lengthAdjust: 1,
      letterSpacing: 1,
      "letter-spacing": "letterSpacing",
      lightingColor: 1,
      "lighting-color": "lightingColor",
      limitingConeAngle: 1,
      local: 0,
      markerEnd: 1,
      "marker-end": "markerEnd",
      markerHeight: 1,
      markerMid: 1,
      "marker-mid": "markerMid",
      markerStart: 1,
      "marker-start": "markerStart",
      markerUnits: 1,
      markerWidth: 1,
      mask: 0,
      maskContentUnits: 1,
      maskUnits: 1,
      mathematical: 0,
      mode: 0,
      numOctaves: 1,
      offset: 0,
      opacity: 0,
      operator: 0,
      order: 0,
      orient: 0,
      orientation: 0,
      origin: 0,
      overflow: 0,
      overlinePosition: 1,
      "overline-position": "overlinePosition",
      overlineThickness: 1,
      "overline-thickness": "overlineThickness",
      paintOrder: 1,
      "paint-order": "paintOrder",
      panose1: 0,
      "panose-1": "panose1",
      pathLength: 1,
      patternContentUnits: 1,
      patternTransform: 1,
      patternUnits: 1,
      pointerEvents: 1,
      "pointer-events": "pointerEvents",
      points: 0,
      pointsAtX: 1,
      pointsAtY: 1,
      pointsAtZ: 1,
      prefix: 0,
      preserveAlpha: 1,
      preserveAspectRatio: 1,
      primitiveUnits: 1,
      property: 0,
      r: 0,
      radius: 0,
      refX: 1,
      refY: 1,
      renderingIntent: 1,
      "rendering-intent": "renderingIntent",
      repeatCount: 1,
      repeatDur: 1,
      requiredExtensions: 1,
      requiredFeatures: 1,
      resource: 0,
      restart: 0,
      result: 0,
      results: 0,
      rotate: 0,
      rx: 0,
      ry: 0,
      scale: 0,
      security: 0,
      seed: 0,
      shapeRendering: 1,
      "shape-rendering": "shapeRendering",
      slope: 0,
      spacing: 0,
      specularConstant: 1,
      specularExponent: 1,
      speed: 0,
      spreadMethod: 1,
      startOffset: 1,
      stdDeviation: 1,
      stemh: 0,
      stemv: 0,
      stitchTiles: 1,
      stopColor: 1,
      "stop-color": "stopColor",
      stopOpacity: 1,
      "stop-opacity": "stopOpacity",
      strikethroughPosition: 1,
      "strikethrough-position": "strikethroughPosition",
      strikethroughThickness: 1,
      "strikethrough-thickness": "strikethroughThickness",
      string: 0,
      stroke: 0,
      strokeDasharray: 1,
      "stroke-dasharray": "strokeDasharray",
      strokeDashoffset: 1,
      "stroke-dashoffset": "strokeDashoffset",
      strokeLinecap: 1,
      "stroke-linecap": "strokeLinecap",
      strokeLinejoin: 1,
      "stroke-linejoin": "strokeLinejoin",
      strokeMiterlimit: 1,
      "stroke-miterlimit": "strokeMiterlimit",
      strokeWidth: 1,
      "stroke-width": "strokeWidth",
      strokeOpacity: 1,
      "stroke-opacity": "strokeOpacity",
      suppressContentEditableWarning: 1,
      suppressHydrationWarning: 1,
      surfaceScale: 1,
      systemLanguage: 1,
      tableValues: 1,
      targetX: 1,
      targetY: 1,
      textAnchor: 1,
      "text-anchor": "textAnchor",
      textDecoration: 1,
      "text-decoration": "textDecoration",
      textLength: 1,
      textRendering: 1,
      "text-rendering": "textRendering",
      to: 0,
      transform: 0,
      typeof: 0,
      u1: 0,
      u2: 0,
      underlinePosition: 1,
      "underline-position": "underlinePosition",
      underlineThickness: 1,
      "underline-thickness": "underlineThickness",
      unicode: 0,
      unicodeBidi: 1,
      "unicode-bidi": "unicodeBidi",
      unicodeRange: 1,
      "unicode-range": "unicodeRange",
      unitsPerEm: 1,
      "units-per-em": "unitsPerEm",
      unselectable: 0,
      vAlphabetic: 1,
      "v-alphabetic": "vAlphabetic",
      values: 0,
      vectorEffect: 1,
      "vector-effect": "vectorEffect",
      version: 0,
      vertAdvY: 1,
      "vert-adv-y": "vertAdvY",
      vertOriginX: 1,
      "vert-origin-x": "vertOriginX",
      vertOriginY: 1,
      "vert-origin-y": "vertOriginY",
      vHanging: 1,
      "v-hanging": "vHanging",
      vIdeographic: 1,
      "v-ideographic": "vIdeographic",
      viewBox: 1,
      viewTarget: 1,
      visibility: 0,
      vMathematical: 1,
      "v-mathematical": "vMathematical",
      vocab: 0,
      widths: 0,
      wordSpacing: 1,
      "word-spacing": "wordSpacing",
      writingMode: 1,
      "writing-mode": "writingMode",
      x1: 0,
      x2: 0,
      x: 0,
      xChannelSelector: 1,
      xHeight: 1,
      "x-height": "xHeight",
      xlinkActuate: 1,
      "xlink:actuate": "xlinkActuate",
      xlinkArcrole: 1,
      "xlink:arcrole": "xlinkArcrole",
      xlinkHref: 1,
      "xlink:href": "xlinkHref",
      xlinkRole: 1,
      "xlink:role": "xlinkRole",
      xlinkShow: 1,
      "xlink:show": "xlinkShow",
      xlinkTitle: 1,
      "xlink:title": "xlinkTitle",
      xlinkType: 1,
      "xlink:type": "xlinkType",
      xmlBase: 1,
      "xml:base": "xmlBase",
      xmlLang: 1,
      "xml:lang": "xmlLang",
      xmlns: 0,
      "xml:space": "xmlSpace",
      xmlnsXlink: 1,
      "xmlns:xlink": "xmlnsXlink",
      xmlSpace: 1,
      y1: 0,
      y2: 0,
      y: 0,
      yChannelSelector: 1,
      z: 0,
      zoomAndPan: 1
    };
  }
});

// node_modules/react-property/lib/index.js
var require_lib3 = __commonJS({
  "node_modules/react-property/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i == null)
        return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _s, _e;
      try {
        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var RESERVED = 0;
    var STRING = 1;
    var BOOLEANISH_STRING = 2;
    var BOOLEAN = 3;
    var OVERLOADED_BOOLEAN = 4;
    var NUMERIC = 5;
    var POSITIVE_NUMERIC = 6;
    function getPropertyInfo(name) {
      return properties.hasOwnProperty(name) ? properties[name] : null;
    }
    function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
      this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
      this.attributeName = attributeName;
      this.attributeNamespace = attributeNamespace;
      this.mustUseProperty = mustUseProperty;
      this.propertyName = name;
      this.type = type;
      this.sanitizeURL = sanitizeURL;
      this.removeEmptyString = removeEmptyString;
    }
    var properties = {};
    var reservedProps = [
      "children",
      "dangerouslySetInnerHTML",
      // TODO: This prevents the assignment of defaultValue to regular
      // elements (not just inputs). Now that ReactDOMInput assigns to the
      // defaultValue property -- do we need this?
      "defaultValue",
      "defaultChecked",
      "innerHTML",
      "suppressContentEditableWarning",
      "suppressHydrationWarning",
      "style"
    ];
    reservedProps.forEach(function(name) {
      properties[name] = new PropertyInfoRecord(
        name,
        RESERVED,
        false,
        // mustUseProperty
        name,
        // attributeName
        null,
        // attributeNamespace
        false,
        // sanitizeURL
        false
      );
    });
    [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
      var _ref2 = _slicedToArray(_ref, 2), name = _ref2[0], attributeName = _ref2[1];
      properties[name] = new PropertyInfoRecord(
        name,
        STRING,
        false,
        // mustUseProperty
        attributeName,
        // attributeName
        null,
        // attributeNamespace
        false,
        // sanitizeURL
        false
      );
    });
    ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
      properties[name] = new PropertyInfoRecord(
        name,
        BOOLEANISH_STRING,
        false,
        // mustUseProperty
        name.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        false,
        // sanitizeURL
        false
      );
    });
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
      properties[name] = new PropertyInfoRecord(
        name,
        BOOLEANISH_STRING,
        false,
        // mustUseProperty
        name,
        // attributeName
        null,
        // attributeNamespace
        false,
        // sanitizeURL
        false
      );
    });
    [
      "allowFullScreen",
      "async",
      // Note: there is a special case that prevents it from being written to the DOM
      // on the client side because the browsers are inconsistent. Instead we call focus().
      "autoFocus",
      "autoPlay",
      "controls",
      "default",
      "defer",
      "disabled",
      "disablePictureInPicture",
      "disableRemotePlayback",
      "formNoValidate",
      "hidden",
      "loop",
      "noModule",
      "noValidate",
      "open",
      "playsInline",
      "readOnly",
      "required",
      "reversed",
      "scoped",
      "seamless",
      // Microdata
      "itemScope"
    ].forEach(function(name) {
      properties[name] = new PropertyInfoRecord(
        name,
        BOOLEAN,
        false,
        // mustUseProperty
        name.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        false,
        // sanitizeURL
        false
      );
    });
    [
      "checked",
      // Note: `option.selected` is not updated if `select.multiple` is
      // disabled with `removeAttribute`. We have special logic for handling this.
      "multiple",
      "muted",
      "selected"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(name) {
      properties[name] = new PropertyInfoRecord(
        name,
        BOOLEAN,
        true,
        // mustUseProperty
        name,
        // attributeName
        null,
        // attributeNamespace
        false,
        // sanitizeURL
        false
      );
    });
    [
      "capture",
      "download"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(name) {
      properties[name] = new PropertyInfoRecord(
        name,
        OVERLOADED_BOOLEAN,
        false,
        // mustUseProperty
        name,
        // attributeName
        null,
        // attributeNamespace
        false,
        // sanitizeURL
        false
      );
    });
    [
      "cols",
      "rows",
      "size",
      "span"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(name) {
      properties[name] = new PropertyInfoRecord(
        name,
        POSITIVE_NUMERIC,
        false,
        // mustUseProperty
        name,
        // attributeName
        null,
        // attributeNamespace
        false,
        // sanitizeURL
        false
      );
    });
    ["rowSpan", "start"].forEach(function(name) {
      properties[name] = new PropertyInfoRecord(
        name,
        NUMERIC,
        false,
        // mustUseProperty
        name.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        false,
        // sanitizeURL
        false
      );
    });
    var CAMELIZE = /[\-\:]([a-z])/g;
    var capitalize = function capitalize2(token) {
      return token[1].toUpperCase();
    };
    [
      "accent-height",
      "alignment-baseline",
      "arabic-form",
      "baseline-shift",
      "cap-height",
      "clip-path",
      "clip-rule",
      "color-interpolation",
      "color-interpolation-filters",
      "color-profile",
      "color-rendering",
      "dominant-baseline",
      "enable-background",
      "fill-opacity",
      "fill-rule",
      "flood-color",
      "flood-opacity",
      "font-family",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-variant",
      "font-weight",
      "glyph-name",
      "glyph-orientation-horizontal",
      "glyph-orientation-vertical",
      "horiz-adv-x",
      "horiz-origin-x",
      "image-rendering",
      "letter-spacing",
      "lighting-color",
      "marker-end",
      "marker-mid",
      "marker-start",
      "overline-position",
      "overline-thickness",
      "paint-order",
      "panose-1",
      "pointer-events",
      "rendering-intent",
      "shape-rendering",
      "stop-color",
      "stop-opacity",
      "strikethrough-position",
      "strikethrough-thickness",
      "stroke-dasharray",
      "stroke-dashoffset",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-width",
      "text-anchor",
      "text-decoration",
      "text-rendering",
      "underline-position",
      "underline-thickness",
      "unicode-bidi",
      "unicode-range",
      "units-per-em",
      "v-alphabetic",
      "v-hanging",
      "v-ideographic",
      "v-mathematical",
      "vector-effect",
      "vert-adv-y",
      "vert-origin-x",
      "vert-origin-y",
      "word-spacing",
      "writing-mode",
      "xmlns:xlink",
      "x-height"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(
        name,
        STRING,
        false,
        // mustUseProperty
        attributeName,
        null,
        // attributeNamespace
        false,
        // sanitizeURL
        false
      );
    });
    [
      "xlink:actuate",
      "xlink:arcrole",
      "xlink:role",
      "xlink:show",
      "xlink:title",
      "xlink:type"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(
        name,
        STRING,
        false,
        // mustUseProperty
        attributeName,
        "http://www.w3.org/1999/xlink",
        false,
        // sanitizeURL
        false
      );
    });
    [
      "xml:base",
      "xml:lang",
      "xml:space"
      // NOTE: if you add a camelCased prop to this list,
      // you'll need to set attributeName to name.toLowerCase()
      // instead in the assignment below.
    ].forEach(function(attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(
        name,
        STRING,
        false,
        // mustUseProperty
        attributeName,
        "http://www.w3.org/XML/1998/namespace",
        false,
        // sanitizeURL
        false
      );
    });
    ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
      properties[attributeName] = new PropertyInfoRecord(
        attributeName,
        STRING,
        false,
        // mustUseProperty
        attributeName.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        false,
        // sanitizeURL
        false
      );
    });
    var xlinkHref = "xlinkHref";
    properties[xlinkHref] = new PropertyInfoRecord(
      "xlinkHref",
      STRING,
      false,
      // mustUseProperty
      "xlink:href",
      "http://www.w3.org/1999/xlink",
      true,
      // sanitizeURL
      false
    );
    ["src", "href", "action", "formAction"].forEach(function(attributeName) {
      properties[attributeName] = new PropertyInfoRecord(
        attributeName,
        STRING,
        false,
        // mustUseProperty
        attributeName.toLowerCase(),
        // attributeName
        null,
        // attributeNamespace
        true,
        // sanitizeURL
        true
      );
    });
    var _require = require_possibleStandardNamesOptimized();
    var CAMELCASE = _require.CAMELCASE;
    var SAME = _require.SAME;
    var possibleStandardNamesOptimized = _require.possibleStandardNames;
    var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var isCustomAttribute = RegExp.prototype.test.bind(
      // eslint-disable-next-line no-misleading-character-class
      new RegExp("^(data|aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$")
    );
    var possibleStandardNames = Object.keys(possibleStandardNamesOptimized).reduce(function(accumulator, standardName) {
      var propName = possibleStandardNamesOptimized[standardName];
      if (propName === SAME) {
        accumulator[standardName] = standardName;
      } else if (propName === CAMELCASE) {
        accumulator[standardName.toLowerCase()] = standardName;
      } else {
        accumulator[standardName] = propName;
      }
      return accumulator;
    }, {});
    exports.BOOLEAN = BOOLEAN;
    exports.BOOLEANISH_STRING = BOOLEANISH_STRING;
    exports.NUMERIC = NUMERIC;
    exports.OVERLOADED_BOOLEAN = OVERLOADED_BOOLEAN;
    exports.POSITIVE_NUMERIC = POSITIVE_NUMERIC;
    exports.RESERVED = RESERVED;
    exports.STRING = STRING;
    exports.getPropertyInfo = getPropertyInfo;
    exports.isCustomAttribute = isCustomAttribute;
    exports.possibleStandardNames = possibleStandardNames;
  }
});

// node_modules/inline-style-parser/index.js
var require_inline_style_parser = __commonJS({
  "node_modules/inline-style-parser/index.js"(exports, module) {
    var COMMENT_REGEX = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g;
    var NEWLINE_REGEX = /\n/g;
    var WHITESPACE_REGEX = /^\s*/;
    var PROPERTY_REGEX = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/;
    var COLON_REGEX = /^:\s*/;
    var VALUE_REGEX = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/;
    var SEMICOLON_REGEX = /^[;\s]*/;
    var TRIM_REGEX = /^\s+|\s+$/g;
    var NEWLINE = "\n";
    var FORWARD_SLASH = "/";
    var ASTERISK = "*";
    var EMPTY_STRING = "";
    var TYPE_COMMENT = "comment";
    var TYPE_DECLARATION = "declaration";
    module.exports = function(style, options) {
      if (typeof style !== "string") {
        throw new TypeError("First argument must be a string");
      }
      if (!style)
        return [];
      options = options || {};
      var lineno = 1;
      var column = 1;
      function updatePosition(str) {
        var lines = str.match(NEWLINE_REGEX);
        if (lines)
          lineno += lines.length;
        var i = str.lastIndexOf(NEWLINE);
        column = ~i ? str.length - i : column + str.length;
      }
      function position() {
        var start = { line: lineno, column };
        return function(node2) {
          node2.position = new Position(start);
          whitespace();
          return node2;
        };
      }
      function Position(start) {
        this.start = start;
        this.end = { line: lineno, column };
        this.source = options.source;
      }
      Position.prototype.content = style;
      var errorsList = [];
      function error(msg) {
        var err = new Error(
          options.source + ":" + lineno + ":" + column + ": " + msg
        );
        err.reason = msg;
        err.filename = options.source;
        err.line = lineno;
        err.column = column;
        err.source = style;
        if (options.silent) {
          errorsList.push(err);
        } else {
          throw err;
        }
      }
      function match(re) {
        var m = re.exec(style);
        if (!m)
          return;
        var str = m[0];
        updatePosition(str);
        style = style.slice(str.length);
        return m;
      }
      function whitespace() {
        match(WHITESPACE_REGEX);
      }
      function comments(rules) {
        var c;
        rules = rules || [];
        while (c = comment()) {
          if (c !== false) {
            rules.push(c);
          }
        }
        return rules;
      }
      function comment() {
        var pos = position();
        if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1))
          return;
        var i = 2;
        while (EMPTY_STRING != style.charAt(i) && (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))) {
          ++i;
        }
        i += 2;
        if (EMPTY_STRING === style.charAt(i - 1)) {
          return error("End of comment missing");
        }
        var str = style.slice(2, i - 2);
        column += 2;
        updatePosition(str);
        style = style.slice(i);
        column += 2;
        return pos({
          type: TYPE_COMMENT,
          comment: str
        });
      }
      function declaration() {
        var pos = position();
        var prop = match(PROPERTY_REGEX);
        if (!prop)
          return;
        comment();
        if (!match(COLON_REGEX))
          return error("property missing ':'");
        var val = match(VALUE_REGEX);
        var ret = pos({
          type: TYPE_DECLARATION,
          property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),
          value: val ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING)) : EMPTY_STRING
        });
        match(SEMICOLON_REGEX);
        return ret;
      }
      function declarations() {
        var decls = [];
        comments(decls);
        var decl;
        while (decl = declaration()) {
          if (decl !== false) {
            decls.push(decl);
            comments(decls);
          }
        }
        return decls;
      }
      whitespace();
      return declarations();
    };
    function trim(str) {
      return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;
    }
  }
});

// node_modules/style-to-object/index.js
var require_style_to_object = __commonJS({
  "node_modules/style-to-object/index.js"(exports, module) {
    var parse2 = require_inline_style_parser();
    function StyleToObject(style, iterator) {
      var output = null;
      if (!style || typeof style !== "string") {
        return output;
      }
      var declaration;
      var declarations = parse2(style);
      var hasIterator = typeof iterator === "function";
      var property;
      var value;
      for (var i = 0, len = declarations.length; i < len; i++) {
        declaration = declarations[i];
        property = declaration.property;
        value = declaration.value;
        if (hasIterator) {
          iterator(property, value, declaration);
        } else if (value) {
          output || (output = {});
          output[property] = value;
        }
      }
      return output;
    }
    module.exports = StyleToObject;
  }
});

// node_modules/style-to-js/cjs/utilities.js
var require_utilities = __commonJS({
  "node_modules/style-to-js/cjs/utilities.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.camelCase = void 0;
    var CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;
    var HYPHEN_REGEX = /-([a-z])/g;
    var NO_HYPHEN_REGEX = /^[^-]+$/;
    var VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;
    var MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;
    var skipCamelCase = function(property) {
      return !property || NO_HYPHEN_REGEX.test(property) || CUSTOM_PROPERTY_REGEX.test(property);
    };
    var capitalize = function(match, character) {
      return character.toUpperCase();
    };
    var trimHyphen = function(match, prefix) {
      return "".concat(prefix, "-");
    };
    var camelCase = function(property, options) {
      if (options === void 0) {
        options = {};
      }
      if (skipCamelCase(property)) {
        return property;
      }
      property = property.toLowerCase();
      if (options.reactCompat) {
        property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);
      } else {
        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);
      }
      return property.replace(HYPHEN_REGEX, capitalize);
    };
    exports.camelCase = camelCase;
  }
});

// node_modules/style-to-js/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/style-to-js/cjs/index.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    exports.__esModule = true;
    var style_to_object_1 = __importDefault(require_style_to_object());
    var utilities_1 = require_utilities();
    function StyleToJS(style, options) {
      var output = {};
      if (!style || typeof style !== "string") {
        return output;
      }
      (0, style_to_object_1["default"])(style, function(property, value) {
        if (property && value) {
          output[(0, utilities_1.camelCase)(property, options)] = value;
        }
      });
      return output;
    }
    exports["default"] = StyleToJS;
  }
});

// node_modules/html-react-parser/lib/utilities.js
var require_utilities2 = __commonJS({
  "node_modules/html-react-parser/lib/utilities.js"(exports, module) {
    var React28 = require_react();
    var styleToJS = require_cjs().default;
    function invertObject(obj, override) {
      if (!obj || typeof obj !== "object") {
        throw new TypeError("First argument must be an object");
      }
      var key2;
      var value;
      var isOverridePresent = typeof override === "function";
      var overrides = {};
      var result = {};
      for (key2 in obj) {
        value = obj[key2];
        if (isOverridePresent) {
          overrides = override(key2, value);
          if (overrides && overrides.length === 2) {
            result[overrides[0]] = overrides[1];
            continue;
          }
        }
        if (typeof value === "string") {
          result[value] = key2;
        }
      }
      return result;
    }
    function isCustomComponent(tagName, props) {
      if (tagName.indexOf("-") === -1) {
        return props && typeof props.is === "string";
      }
      switch (tagName) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return false;
        default:
          return true;
      }
    }
    var styleToJSOptions = { reactCompat: true };
    function setStyleProp(style, props) {
      if (style === null || style === void 0) {
        return;
      }
      try {
        props.style = styleToJS(style, styleToJSOptions);
      } catch (err) {
        props.style = {};
      }
    }
    var PRESERVE_CUSTOM_ATTRIBUTES = React28.version.split(".")[0] >= 16;
    var elementsWithNoTextChildren = /* @__PURE__ */ new Set([
      "tr",
      "tbody",
      "thead",
      "tfoot",
      "colgroup",
      "table",
      "head",
      "html",
      "frameset"
    ]);
    function canTextBeChildOfNode(node2) {
      return !elementsWithNoTextChildren.has(node2.name);
    }
    module.exports = {
      PRESERVE_CUSTOM_ATTRIBUTES,
      invertObject,
      isCustomComponent,
      setStyleProp,
      canTextBeChildOfNode,
      elementsWithNoTextChildren
    };
  }
});

// node_modules/html-react-parser/lib/attributes-to-props.js
var require_attributes_to_props = __commonJS({
  "node_modules/html-react-parser/lib/attributes-to-props.js"(exports, module) {
    var reactProperty = require_lib3();
    var utilities = require_utilities2();
    module.exports = function attributesToProps2(attributes) {
      attributes = attributes || {};
      var valueOnlyInputs = {
        reset: true,
        submit: true
      };
      var attributeName;
      var attributeNameLowerCased;
      var attributeValue;
      var propName;
      var propertyInfo;
      var props = {};
      var inputIsValueOnly = attributes.type && valueOnlyInputs[attributes.type];
      for (attributeName in attributes) {
        attributeValue = attributes[attributeName];
        if (reactProperty.isCustomAttribute(attributeName)) {
          props[attributeName] = attributeValue;
          continue;
        }
        attributeNameLowerCased = attributeName.toLowerCase();
        propName = getPropName(attributeNameLowerCased);
        if (propName) {
          propertyInfo = reactProperty.getPropertyInfo(propName);
          if ((propName === "checked" || propName === "value") && !inputIsValueOnly) {
            propName = getPropName("default" + attributeNameLowerCased);
          }
          props[propName] = attributeValue;
          switch (propertyInfo && propertyInfo.type) {
            case reactProperty.BOOLEAN:
              props[propName] = true;
              break;
            case reactProperty.OVERLOADED_BOOLEAN:
              if (attributeValue === "") {
                props[propName] = true;
              }
              break;
          }
          continue;
        }
        if (utilities.PRESERVE_CUSTOM_ATTRIBUTES) {
          props[attributeName] = attributeValue;
        }
      }
      utilities.setStyleProp(attributes.style, props);
      return props;
    };
    function getPropName(attributeName) {
      return reactProperty.possibleStandardNames[attributeName];
    }
  }
});

// node_modules/html-react-parser/lib/dom-to-react.js
var require_dom_to_react = __commonJS({
  "node_modules/html-react-parser/lib/dom-to-react.js"(exports, module) {
    var React28 = require_react();
    var attributesToProps2 = require_attributes_to_props();
    var utilities = require_utilities2();
    var setStyleProp = utilities.setStyleProp;
    var canTextBeChildOfNode = utilities.canTextBeChildOfNode;
    function domToReact2(nodes, options) {
      options = options || {};
      var library = options.library || React28;
      var cloneElement4 = library.cloneElement;
      var createElement17 = library.createElement;
      var isValidElement2 = library.isValidElement;
      var result = [];
      var node2;
      var isWhitespace;
      var hasReplace = typeof options.replace === "function";
      var replaceElement;
      var props;
      var children2;
      var trim = options.trim;
      for (var i = 0, len = nodes.length; i < len; i++) {
        node2 = nodes[i];
        if (hasReplace) {
          replaceElement = options.replace(node2);
          if (isValidElement2(replaceElement)) {
            if (len > 1) {
              replaceElement = cloneElement4(replaceElement, {
                key: replaceElement.key || i
              });
            }
            result.push(replaceElement);
            continue;
          }
        }
        if (node2.type === "text") {
          isWhitespace = !node2.data.trim().length;
          if (isWhitespace && node2.parent && !canTextBeChildOfNode(node2.parent)) {
            continue;
          }
          if (trim && isWhitespace) {
            continue;
          }
          result.push(node2.data);
          continue;
        }
        props = node2.attribs;
        if (skipAttributesToProps(node2)) {
          setStyleProp(props.style, props);
        } else if (props) {
          props = attributesToProps2(props);
        }
        children2 = null;
        switch (node2.type) {
          case "script":
          case "style":
            if (node2.children[0]) {
              props.dangerouslySetInnerHTML = {
                __html: node2.children[0].data
              };
            }
            break;
          case "tag":
            if (node2.name === "textarea" && node2.children[0]) {
              props.defaultValue = node2.children[0].data;
            } else if (node2.children && node2.children.length) {
              children2 = domToReact2(node2.children, options);
            }
            break;
          default:
            continue;
        }
        if (len > 1) {
          props.key = i;
        }
        result.push(createElement17(node2.name, props, children2));
      }
      return result.length === 1 ? result[0] : result;
    }
    function skipAttributesToProps(node2) {
      return utilities.PRESERVE_CUSTOM_ATTRIBUTES && node2.type === "tag" && utilities.isCustomComponent(node2.name, node2.attribs);
    }
    module.exports = domToReact2;
  }
});

// node_modules/html-dom-parser/lib/client/constants.js
var require_constants = __commonJS({
  "node_modules/html-dom-parser/lib/client/constants.js"(exports, module) {
    var CASE_SENSITIVE_TAG_NAMES = [
      "animateMotion",
      "animateTransform",
      "clipPath",
      "feBlend",
      "feColorMatrix",
      "feComponentTransfer",
      "feComposite",
      "feConvolveMatrix",
      "feDiffuseLighting",
      "feDisplacementMap",
      "feDropShadow",
      "feFlood",
      "feFuncA",
      "feFuncB",
      "feFuncG",
      "feFuncR",
      "feGaussainBlur",
      "feImage",
      "feMerge",
      "feMergeNode",
      "feMorphology",
      "feOffset",
      "fePointLight",
      "feSpecularLighting",
      "feSpotLight",
      "feTile",
      "feTurbulence",
      "foreignObject",
      "linearGradient",
      "radialGradient",
      "textPath"
    ];
    module.exports = {
      CASE_SENSITIVE_TAG_NAMES
    };
  }
});

// node_modules/domelementtype/lib/index.js
var require_lib4 = __commonJS({
  "node_modules/domelementtype/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Doctype = exports.CDATA = exports.Tag = exports.Style = exports.Script = exports.Comment = exports.Directive = exports.Text = exports.Root = exports.isTag = exports.ElementType = void 0;
    var ElementType;
    (function(ElementType2) {
      ElementType2["Root"] = "root";
      ElementType2["Text"] = "text";
      ElementType2["Directive"] = "directive";
      ElementType2["Comment"] = "comment";
      ElementType2["Script"] = "script";
      ElementType2["Style"] = "style";
      ElementType2["Tag"] = "tag";
      ElementType2["CDATA"] = "cdata";
      ElementType2["Doctype"] = "doctype";
    })(ElementType = exports.ElementType || (exports.ElementType = {}));
    function isTag(elem) {
      return elem.type === ElementType.Tag || elem.type === ElementType.Script || elem.type === ElementType.Style;
    }
    exports.isTag = isTag;
    exports.Root = ElementType.Root;
    exports.Text = ElementType.Text;
    exports.Directive = ElementType.Directive;
    exports.Comment = ElementType.Comment;
    exports.Script = ElementType.Script;
    exports.Style = ElementType.Style;
    exports.Tag = ElementType.Tag;
    exports.CDATA = ElementType.CDATA;
    exports.Doctype = ElementType.Doctype;
  }
});

// node_modules/domhandler/lib/node.js
var require_node = __commonJS({
  "node_modules/domhandler/lib/node.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign2 = exports && exports.__assign || function() {
      __assign2 = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign2.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.cloneNode = exports.hasChildren = exports.isDocument = exports.isDirective = exports.isComment = exports.isText = exports.isCDATA = exports.isTag = exports.Element = exports.Document = exports.NodeWithChildren = exports.ProcessingInstruction = exports.Comment = exports.Text = exports.DataNode = exports.Node = void 0;
    var domelementtype_1 = require_lib4();
    var nodeTypes = /* @__PURE__ */ new Map([
      [domelementtype_1.ElementType.Tag, 1],
      [domelementtype_1.ElementType.Script, 1],
      [domelementtype_1.ElementType.Style, 1],
      [domelementtype_1.ElementType.Directive, 1],
      [domelementtype_1.ElementType.Text, 3],
      [domelementtype_1.ElementType.CDATA, 4],
      [domelementtype_1.ElementType.Comment, 8],
      [domelementtype_1.ElementType.Root, 9]
    ]);
    var Node2 = (
      /** @class */
      function() {
        function Node3(type) {
          this.type = type;
          this.parent = null;
          this.prev = null;
          this.next = null;
          this.startIndex = null;
          this.endIndex = null;
        }
        Object.defineProperty(Node3.prototype, "nodeType", {
          // Read-only aliases
          /**
           * [DOM spec](https://dom.spec.whatwg.org/#dom-node-nodetype)-compatible
           * node {@link type}.
           */
          get: function() {
            var _a;
            return (_a = nodeTypes.get(this.type)) !== null && _a !== void 0 ? _a : 1;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Node3.prototype, "parentNode", {
          // Read-write aliases for properties
          /**
           * Same as {@link parent}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */
          get: function() {
            return this.parent;
          },
          set: function(parent) {
            this.parent = parent;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Node3.prototype, "previousSibling", {
          /**
           * Same as {@link prev}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */
          get: function() {
            return this.prev;
          },
          set: function(prev) {
            this.prev = prev;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Node3.prototype, "nextSibling", {
          /**
           * Same as {@link next}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */
          get: function() {
            return this.next;
          },
          set: function(next) {
            this.next = next;
          },
          enumerable: false,
          configurable: true
        });
        Node3.prototype.cloneNode = function(recursive) {
          if (recursive === void 0) {
            recursive = false;
          }
          return cloneNode(this, recursive);
        };
        return Node3;
      }()
    );
    exports.Node = Node2;
    var DataNode = (
      /** @class */
      function(_super) {
        __extends(DataNode2, _super);
        function DataNode2(type, data) {
          var _this = _super.call(this, type) || this;
          _this.data = data;
          return _this;
        }
        Object.defineProperty(DataNode2.prototype, "nodeValue", {
          /**
           * Same as {@link data}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */
          get: function() {
            return this.data;
          },
          set: function(data) {
            this.data = data;
          },
          enumerable: false,
          configurable: true
        });
        return DataNode2;
      }(Node2)
    );
    exports.DataNode = DataNode;
    var Text = (
      /** @class */
      function(_super) {
        __extends(Text2, _super);
        function Text2(data) {
          return _super.call(this, domelementtype_1.ElementType.Text, data) || this;
        }
        return Text2;
      }(DataNode)
    );
    exports.Text = Text;
    var Comment = (
      /** @class */
      function(_super) {
        __extends(Comment2, _super);
        function Comment2(data) {
          return _super.call(this, domelementtype_1.ElementType.Comment, data) || this;
        }
        return Comment2;
      }(DataNode)
    );
    exports.Comment = Comment;
    var ProcessingInstruction = (
      /** @class */
      function(_super) {
        __extends(ProcessingInstruction2, _super);
        function ProcessingInstruction2(name, data) {
          var _this = _super.call(this, domelementtype_1.ElementType.Directive, data) || this;
          _this.name = name;
          return _this;
        }
        return ProcessingInstruction2;
      }(DataNode)
    );
    exports.ProcessingInstruction = ProcessingInstruction;
    var NodeWithChildren = (
      /** @class */
      function(_super) {
        __extends(NodeWithChildren2, _super);
        function NodeWithChildren2(type, children2) {
          var _this = _super.call(this, type) || this;
          _this.children = children2;
          return _this;
        }
        Object.defineProperty(NodeWithChildren2.prototype, "firstChild", {
          // Aliases
          /** First child of the node. */
          get: function() {
            var _a;
            return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(NodeWithChildren2.prototype, "lastChild", {
          /** Last child of the node. */
          get: function() {
            return this.children.length > 0 ? this.children[this.children.length - 1] : null;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(NodeWithChildren2.prototype, "childNodes", {
          /**
           * Same as {@link children}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */
          get: function() {
            return this.children;
          },
          set: function(children2) {
            this.children = children2;
          },
          enumerable: false,
          configurable: true
        });
        return NodeWithChildren2;
      }(Node2)
    );
    exports.NodeWithChildren = NodeWithChildren;
    var Document = (
      /** @class */
      function(_super) {
        __extends(Document2, _super);
        function Document2(children2) {
          return _super.call(this, domelementtype_1.ElementType.Root, children2) || this;
        }
        return Document2;
      }(NodeWithChildren)
    );
    exports.Document = Document;
    var Element3 = (
      /** @class */
      function(_super) {
        __extends(Element4, _super);
        function Element4(name, attribs, children2, type) {
          if (children2 === void 0) {
            children2 = [];
          }
          if (type === void 0) {
            type = name === "script" ? domelementtype_1.ElementType.Script : name === "style" ? domelementtype_1.ElementType.Style : domelementtype_1.ElementType.Tag;
          }
          var _this = _super.call(this, type, children2) || this;
          _this.name = name;
          _this.attribs = attribs;
          return _this;
        }
        Object.defineProperty(Element4.prototype, "tagName", {
          // DOM Level 1 aliases
          /**
           * Same as {@link name}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */
          get: function() {
            return this.name;
          },
          set: function(name) {
            this.name = name;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Element4.prototype, "attributes", {
          get: function() {
            var _this = this;
            return Object.keys(this.attribs).map(function(name) {
              var _a, _b;
              return {
                name,
                value: _this.attribs[name],
                namespace: (_a = _this["x-attribsNamespace"]) === null || _a === void 0 ? void 0 : _a[name],
                prefix: (_b = _this["x-attribsPrefix"]) === null || _b === void 0 ? void 0 : _b[name]
              };
            });
          },
          enumerable: false,
          configurable: true
        });
        return Element4;
      }(NodeWithChildren)
    );
    exports.Element = Element3;
    function isTag(node2) {
      return (0, domelementtype_1.isTag)(node2);
    }
    exports.isTag = isTag;
    function isCDATA(node2) {
      return node2.type === domelementtype_1.ElementType.CDATA;
    }
    exports.isCDATA = isCDATA;
    function isText(node2) {
      return node2.type === domelementtype_1.ElementType.Text;
    }
    exports.isText = isText;
    function isComment(node2) {
      return node2.type === domelementtype_1.ElementType.Comment;
    }
    exports.isComment = isComment;
    function isDirective(node2) {
      return node2.type === domelementtype_1.ElementType.Directive;
    }
    exports.isDirective = isDirective;
    function isDocument(node2) {
      return node2.type === domelementtype_1.ElementType.Root;
    }
    exports.isDocument = isDocument;
    function hasChildren(node2) {
      return Object.prototype.hasOwnProperty.call(node2, "children");
    }
    exports.hasChildren = hasChildren;
    function cloneNode(node2, recursive) {
      if (recursive === void 0) {
        recursive = false;
      }
      var result;
      if (isText(node2)) {
        result = new Text(node2.data);
      } else if (isComment(node2)) {
        result = new Comment(node2.data);
      } else if (isTag(node2)) {
        var children2 = recursive ? cloneChildren(node2.children) : [];
        var clone_1 = new Element3(node2.name, __assign2({}, node2.attribs), children2);
        children2.forEach(function(child) {
          return child.parent = clone_1;
        });
        if (node2.namespace != null) {
          clone_1.namespace = node2.namespace;
        }
        if (node2["x-attribsNamespace"]) {
          clone_1["x-attribsNamespace"] = __assign2({}, node2["x-attribsNamespace"]);
        }
        if (node2["x-attribsPrefix"]) {
          clone_1["x-attribsPrefix"] = __assign2({}, node2["x-attribsPrefix"]);
        }
        result = clone_1;
      } else if (isCDATA(node2)) {
        var children2 = recursive ? cloneChildren(node2.children) : [];
        var clone_2 = new NodeWithChildren(domelementtype_1.ElementType.CDATA, children2);
        children2.forEach(function(child) {
          return child.parent = clone_2;
        });
        result = clone_2;
      } else if (isDocument(node2)) {
        var children2 = recursive ? cloneChildren(node2.children) : [];
        var clone_3 = new Document(children2);
        children2.forEach(function(child) {
          return child.parent = clone_3;
        });
        if (node2["x-mode"]) {
          clone_3["x-mode"] = node2["x-mode"];
        }
        result = clone_3;
      } else if (isDirective(node2)) {
        var instruction = new ProcessingInstruction(node2.name, node2.data);
        if (node2["x-name"] != null) {
          instruction["x-name"] = node2["x-name"];
          instruction["x-publicId"] = node2["x-publicId"];
          instruction["x-systemId"] = node2["x-systemId"];
        }
        result = instruction;
      } else {
        throw new Error("Not implemented yet: ".concat(node2.type));
      }
      result.startIndex = node2.startIndex;
      result.endIndex = node2.endIndex;
      if (node2.sourceCodeLocation != null) {
        result.sourceCodeLocation = node2.sourceCodeLocation;
      }
      return result;
    }
    exports.cloneNode = cloneNode;
    function cloneChildren(childs) {
      var children2 = childs.map(function(child) {
        return cloneNode(child, true);
      });
      for (var i = 1; i < children2.length; i++) {
        children2[i].prev = children2[i - 1];
        children2[i - 1].next = children2[i];
      }
      return children2;
    }
  }
});

// node_modules/html-dom-parser/lib/client/utilities.js
var require_utilities3 = __commonJS({
  "node_modules/html-dom-parser/lib/client/utilities.js"(exports, module) {
    var constants = require_constants();
    var domhandler = require_node();
    var CASE_SENSITIVE_TAG_NAMES = constants.CASE_SENSITIVE_TAG_NAMES;
    var Comment = domhandler.Comment;
    var Element3 = domhandler.Element;
    var ProcessingInstruction = domhandler.ProcessingInstruction;
    var Text = domhandler.Text;
    var caseSensitiveTagNamesMap = {};
    var tagName;
    for (i = 0, len = CASE_SENSITIVE_TAG_NAMES.length; i < len; i++) {
      tagName = CASE_SENSITIVE_TAG_NAMES[i];
      caseSensitiveTagNamesMap[tagName.toLowerCase()] = tagName;
    }
    var i;
    var len;
    function getCaseSensitiveTagName(tagName2) {
      return caseSensitiveTagNamesMap[tagName2];
    }
    function formatAttributes(attributes) {
      var result = {};
      var attribute;
      for (var i2 = 0, len2 = attributes.length; i2 < len2; i2++) {
        attribute = attributes[i2];
        result[attribute.name] = attribute.value;
      }
      return result;
    }
    function formatTagName(tagName2) {
      tagName2 = tagName2.toLowerCase();
      var caseSensitiveTagName = getCaseSensitiveTagName(tagName2);
      if (caseSensitiveTagName) {
        return caseSensitiveTagName;
      }
      return tagName2;
    }
    function formatDOM(nodes, parent, directive) {
      parent = parent || null;
      var result = [];
      for (var index2 = 0, len2 = nodes.length; index2 < len2; index2++) {
        var node2 = nodes[index2];
        var current;
        switch (node2.nodeType) {
          case 1:
            current = new Element3(
              formatTagName(node2.nodeName),
              formatAttributes(node2.attributes)
            );
            current.children = formatDOM(node2.childNodes, current);
            break;
          case 3:
            current = new Text(node2.nodeValue);
            break;
          case 8:
            current = new Comment(node2.nodeValue);
            break;
          default:
            continue;
        }
        var prev = result[index2 - 1] || null;
        if (prev) {
          prev.next = current;
        }
        current.parent = parent;
        current.prev = prev;
        current.next = null;
        result.push(current);
      }
      if (directive) {
        current = new ProcessingInstruction(
          directive.substring(0, directive.indexOf(" ")).toLowerCase(),
          directive
        );
        current.next = result[0] || null;
        current.parent = parent;
        result.unshift(current);
        if (result[1]) {
          result[1].prev = result[0];
        }
      }
      return result;
    }
    function isIE() {
      return /(MSIE |Trident\/|Edge\/)/.test(navigator.userAgent);
    }
    module.exports = {
      formatAttributes,
      formatDOM,
      isIE
    };
  }
});

// node_modules/html-dom-parser/lib/client/domparser.js
var require_domparser = __commonJS({
  "node_modules/html-dom-parser/lib/client/domparser.js"(exports, module) {
    var HTML = "html";
    var HEAD = "head";
    var BODY = "body";
    var FIRST_TAG_REGEX = /<([a-zA-Z]+[0-9]?)/;
    var HEAD_TAG_REGEX = /<head.*>/i;
    var BODY_TAG_REGEX = /<body.*>/i;
    var parseFromDocument = function() {
      throw new Error(
        "This browser does not support `document.implementation.createHTMLDocument`"
      );
    };
    var parseFromString = function() {
      throw new Error(
        "This browser does not support `DOMParser.prototype.parseFromString`"
      );
    };
    if (typeof window.DOMParser === "function") {
      domParser = new window.DOMParser();
      mimeType = "text/html";
      parseFromString = function(html, tagName) {
        if (tagName) {
          html = "<" + tagName + ">" + html + "</" + tagName + ">";
        }
        return domParser.parseFromString(html, mimeType);
      };
      parseFromDocument = parseFromString;
    }
    var domParser;
    var mimeType;
    if (document.implementation) {
      isIE = require_utilities3().isIE;
      doc = document.implementation.createHTMLDocument(
        isIE() ? "html-dom-parser" : void 0
      );
      parseFromDocument = function(html, tagName) {
        if (tagName) {
          doc.documentElement.getElementsByTagName(tagName)[0].innerHTML = html;
          return doc;
        }
        doc.documentElement.innerHTML = html;
        return doc;
      };
    }
    var isIE;
    var doc;
    var template = document.createElement("template");
    var parseFromTemplate;
    if (template.content) {
      parseFromTemplate = function(html) {
        template.innerHTML = html;
        return template.content.childNodes;
      };
    }
    function domparser(html) {
      var firstTagName;
      var match = html.match(FIRST_TAG_REGEX);
      if (match && match[1]) {
        firstTagName = match[1].toLowerCase();
      }
      var doc2;
      var element;
      var elements;
      switch (firstTagName) {
        case HTML:
          doc2 = parseFromString(html);
          if (!HEAD_TAG_REGEX.test(html)) {
            element = doc2.getElementsByTagName(HEAD)[0];
            if (element) {
              element.parentNode.removeChild(element);
            }
          }
          if (!BODY_TAG_REGEX.test(html)) {
            element = doc2.getElementsByTagName(BODY)[0];
            if (element) {
              element.parentNode.removeChild(element);
            }
          }
          return doc2.getElementsByTagName(HTML);
        case HEAD:
        case BODY:
          elements = parseFromDocument(html).getElementsByTagName(firstTagName);
          if (BODY_TAG_REGEX.test(html) && HEAD_TAG_REGEX.test(html)) {
            return elements[0].parentNode.childNodes;
          }
          return elements;
        default:
          if (parseFromTemplate) {
            return parseFromTemplate(html);
          }
          return parseFromDocument(html, BODY).getElementsByTagName(BODY)[0].childNodes;
      }
    }
    module.exports = domparser;
  }
});

// node_modules/html-dom-parser/lib/client/html-to-dom.js
var require_html_to_dom = __commonJS({
  "node_modules/html-dom-parser/lib/client/html-to-dom.js"(exports, module) {
    var domparser = require_domparser();
    var formatDOM = require_utilities3().formatDOM;
    var DIRECTIVE_REGEX = /<(![a-zA-Z\s]+)>/;
    function HTMLDOMParser(html) {
      if (typeof html !== "string") {
        throw new TypeError("First argument must be a string");
      }
      if (html === "") {
        return [];
      }
      var match = html.match(DIRECTIVE_REGEX);
      var directive;
      if (match && match[1]) {
        directive = match[1];
      }
      return formatDOM(domparser(html), null, directive);
    }
    module.exports = HTMLDOMParser;
  }
});

// node_modules/domhandler/lib/index.js
var require_lib5 = __commonJS({
  "node_modules/domhandler/lib/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DomHandler = void 0;
    var domelementtype_1 = require_lib4();
    var node_1 = require_node();
    __exportStar(require_node(), exports);
    var reWhitespace = /\s+/g;
    var defaultOpts = {
      normalizeWhitespace: false,
      withStartIndices: false,
      withEndIndices: false,
      xmlMode: false
    };
    var DomHandler = (
      /** @class */
      function() {
        function DomHandler2(callback, options, elementCB) {
          this.dom = [];
          this.root = new node_1.Document(this.dom);
          this.done = false;
          this.tagStack = [this.root];
          this.lastNode = null;
          this.parser = null;
          if (typeof options === "function") {
            elementCB = options;
            options = defaultOpts;
          }
          if (typeof callback === "object") {
            options = callback;
            callback = void 0;
          }
          this.callback = callback !== null && callback !== void 0 ? callback : null;
          this.options = options !== null && options !== void 0 ? options : defaultOpts;
          this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;
        }
        DomHandler2.prototype.onparserinit = function(parser) {
          this.parser = parser;
        };
        DomHandler2.prototype.onreset = function() {
          this.dom = [];
          this.root = new node_1.Document(this.dom);
          this.done = false;
          this.tagStack = [this.root];
          this.lastNode = null;
          this.parser = null;
        };
        DomHandler2.prototype.onend = function() {
          if (this.done)
            return;
          this.done = true;
          this.parser = null;
          this.handleCallback(null);
        };
        DomHandler2.prototype.onerror = function(error) {
          this.handleCallback(error);
        };
        DomHandler2.prototype.onclosetag = function() {
          this.lastNode = null;
          var elem = this.tagStack.pop();
          if (this.options.withEndIndices) {
            elem.endIndex = this.parser.endIndex;
          }
          if (this.elementCB)
            this.elementCB(elem);
        };
        DomHandler2.prototype.onopentag = function(name, attribs) {
          var type = this.options.xmlMode ? domelementtype_1.ElementType.Tag : void 0;
          var element = new node_1.Element(name, attribs, void 0, type);
          this.addNode(element);
          this.tagStack.push(element);
        };
        DomHandler2.prototype.ontext = function(data) {
          var normalizeWhitespace = this.options.normalizeWhitespace;
          var lastNode = this.lastNode;
          if (lastNode && lastNode.type === domelementtype_1.ElementType.Text) {
            if (normalizeWhitespace) {
              lastNode.data = (lastNode.data + data).replace(reWhitespace, " ");
            } else {
              lastNode.data += data;
            }
            if (this.options.withEndIndices) {
              lastNode.endIndex = this.parser.endIndex;
            }
          } else {
            if (normalizeWhitespace) {
              data = data.replace(reWhitespace, " ");
            }
            var node2 = new node_1.Text(data);
            this.addNode(node2);
            this.lastNode = node2;
          }
        };
        DomHandler2.prototype.oncomment = function(data) {
          if (this.lastNode && this.lastNode.type === domelementtype_1.ElementType.Comment) {
            this.lastNode.data += data;
            return;
          }
          var node2 = new node_1.Comment(data);
          this.addNode(node2);
          this.lastNode = node2;
        };
        DomHandler2.prototype.oncommentend = function() {
          this.lastNode = null;
        };
        DomHandler2.prototype.oncdatastart = function() {
          var text = new node_1.Text("");
          var node2 = new node_1.NodeWithChildren(domelementtype_1.ElementType.CDATA, [text]);
          this.addNode(node2);
          text.parent = node2;
          this.lastNode = text;
        };
        DomHandler2.prototype.oncdataend = function() {
          this.lastNode = null;
        };
        DomHandler2.prototype.onprocessinginstruction = function(name, data) {
          var node2 = new node_1.ProcessingInstruction(name, data);
          this.addNode(node2);
        };
        DomHandler2.prototype.handleCallback = function(error) {
          if (typeof this.callback === "function") {
            this.callback(error, this.dom);
          } else if (error) {
            throw error;
          }
        };
        DomHandler2.prototype.addNode = function(node2) {
          var parent = this.tagStack[this.tagStack.length - 1];
          var previousSibling = parent.children[parent.children.length - 1];
          if (this.options.withStartIndices) {
            node2.startIndex = this.parser.startIndex;
          }
          if (this.options.withEndIndices) {
            node2.endIndex = this.parser.endIndex;
          }
          parent.children.push(node2);
          if (previousSibling) {
            node2.prev = previousSibling;
            previousSibling.next = node2;
          }
          node2.parent = parent;
          this.lastNode = null;
        };
        return DomHandler2;
      }()
    );
    exports.DomHandler = DomHandler;
    exports.default = DomHandler;
  }
});

// node_modules/html-react-parser/index.js
var require_html_react_parser = __commonJS({
  "node_modules/html-react-parser/index.js"(exports, module) {
    var domToReact2 = require_dom_to_react();
    var attributesToProps2 = require_attributes_to_props();
    var htmlToDOM2 = require_html_to_dom();
    htmlToDOM2 = /* istanbul ignore next */
    typeof htmlToDOM2.default === "function" ? htmlToDOM2.default : htmlToDOM2;
    var domParserOptions = { lowerCaseAttributeNames: false };
    function HTMLReactParser2(html, options) {
      if (typeof html !== "string") {
        throw new TypeError("First argument must be a string");
      }
      if (html === "") {
        return [];
      }
      options = options || {};
      return domToReact2(
        htmlToDOM2(html, options.htmlparser2 || domParserOptions),
        options
      );
    }
    HTMLReactParser2.domToReact = domToReact2;
    HTMLReactParser2.htmlToDOM = htmlToDOM2;
    HTMLReactParser2.attributesToProps = attributesToProps2;
    HTMLReactParser2.Element = require_lib5().Element;
    module.exports = HTMLReactParser2;
    module.exports.default = HTMLReactParser2;
  }
});

// node_modules/a11y-focus-store/index.js
var require_a11y_focus_store = __commonJS({
  "node_modules/a11y-focus-store/index.js"(exports) {
    "use strict";
    var storedFocusElement;
    exports.storeFocus = function() {
      storedFocusElement = document.activeElement;
    };
    exports.clearStoredFocus = function() {
      storedFocusElement = null;
    };
    exports.restoreFocus = function() {
      if (!storedFocusElement)
        return;
      try {
        storedFocusElement.focus();
      } catch (err) {
      }
      storedFocusElement = null;
    };
  }
});

// node_modules/react-images/dist/react-images.es.js
var import_react17 = __toESM(require_react());
var import_react_dom3 = __toESM(require_react_dom());
var import_glam = __toESM(require_lib());

// node_modules/raf-schd/dist/raf-schd.esm.js
var rafSchd = function rafSchd2(fn) {
  var lastArgs = [];
  var frameId = null;
  var wrapperFn = function wrapperFn2() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    lastArgs = args;
    if (frameId) {
      return;
    }
    frameId = requestAnimationFrame(function() {
      frameId = null;
      fn.apply(void 0, lastArgs);
    });
  };
  wrapperFn.cancel = function() {
    if (!frameId) {
      return;
    }
    cancelAnimationFrame(frameId);
    frameId = null;
  };
  return wrapperFn;
};
var raf_schd_esm_default = rafSchd;

// node_modules/react-images/dist/react-images.es.js
var import_react_view_pager = __toESM(require_react_view_pager());

// node_modules/html-react-parser/index.mjs
var import_index = __toESM(require_html_react_parser(), 1);
var domToReact = import_index.default.domToReact;
var htmlToDOM = import_index.default.htmlToDOM;
var attributesToProps = import_index.default.attributesToProps;
var Element2 = import_index.default.Element;
var html_react_parser_default = import_index.default;

// node_modules/tslib/tslib.es6.mjs
var __assign = function() {
  __assign = Object.assign || function __assign2(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
function __rest(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++)
    s += arguments[i].length;
  for (var r = Array(s), k = 0, i = 0; i < il; i++)
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
      r[k] = a[j];
  return r;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
}

// node_modules/react-focus-on/dist/es2015/Combination.js
var React19 = __toESM(require_react());

// node_modules/react-focus-on/dist/es2015/UI.js
var React11 = __toESM(require_react());

// node_modules/react-remove-scroll/dist/es2015/UI.js
var React5 = __toESM(require_react());

// node_modules/react-remove-scroll-bar/dist/es2015/constants.js
var zeroRightClassName = "right-scroll-bar-position";
var fullWidthClassName = "width-before-scroll-bar";
var noScrollbarsClassName = "with-scroll-bars-hidden";
var removedBarSizeVariable = "--removed-body-scroll-bar-size";

// node_modules/use-callback-ref/dist/es2015/assignRef.js
function assignRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
  return ref;
}

// node_modules/use-callback-ref/dist/es2015/useRef.js
var import_react = __toESM(require_react());
function useCallbackRef(initialValue, callback) {
  var ref = (0, import_react.useState)(function() {
    return {
      // value
      value: initialValue,
      // last callback
      callback,
      // "memoized" public interface
      facade: {
        get current() {
          return ref.value;
        },
        set current(value) {
          var last = ref.value;
          if (last !== value) {
            ref.value = value;
            ref.callback(value, last);
          }
        }
      }
    };
  })[0];
  ref.callback = callback;
  return ref.facade;
}

// node_modules/use-callback-ref/dist/es2015/useMergeRef.js
var React = __toESM(require_react());
var useIsomorphicLayoutEffect = typeof window !== "undefined" ? React.useLayoutEffect : React.useEffect;
var currentValues = /* @__PURE__ */ new WeakMap();
function useMergeRefs(refs, defaultValue) {
  var callbackRef = useCallbackRef(defaultValue || null, function(newValue) {
    return refs.forEach(function(ref) {
      return assignRef(ref, newValue);
    });
  });
  useIsomorphicLayoutEffect(function() {
    var oldValue = currentValues.get(callbackRef);
    if (oldValue) {
      var prevRefs_1 = new Set(oldValue);
      var nextRefs_1 = new Set(refs);
      var current_1 = callbackRef.current;
      prevRefs_1.forEach(function(ref) {
        if (!nextRefs_1.has(ref)) {
          assignRef(ref, null);
        }
      });
      nextRefs_1.forEach(function(ref) {
        if (!prevRefs_1.has(ref)) {
          assignRef(ref, current_1);
        }
      });
    }
    currentValues.set(callbackRef, refs);
  }, [refs]);
  return callbackRef;
}

// node_modules/use-sidecar/dist/es2015/hoc.js
var React2 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/hook.js
var import_react2 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/medium.js
function ItoI(a) {
  return a;
}
function innerCreateMedium(defaults, middleware) {
  if (middleware === void 0) {
    middleware = ItoI;
  }
  var buffer = [];
  var assigned = false;
  var medium = {
    read: function() {
      if (assigned) {
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      }
      if (buffer.length) {
        return buffer[buffer.length - 1];
      }
      return defaults;
    },
    useMedium: function(data) {
      var item = middleware(data, assigned);
      buffer.push(item);
      return function() {
        buffer = buffer.filter(function(x) {
          return x !== item;
        });
      };
    },
    assignSyncMedium: function(cb) {
      assigned = true;
      while (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
      }
      buffer = {
        push: function(x) {
          return cb(x);
        },
        filter: function() {
          return buffer;
        }
      };
    },
    assignMedium: function(cb) {
      assigned = true;
      var pendingQueue = [];
      if (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
        pendingQueue = buffer;
      }
      var executeQueue = function() {
        var cbs2 = pendingQueue;
        pendingQueue = [];
        cbs2.forEach(cb);
      };
      var cycle = function() {
        return Promise.resolve().then(executeQueue);
      };
      cycle();
      buffer = {
        push: function(x) {
          pendingQueue.push(x);
          cycle();
        },
        filter: function(filter) {
          pendingQueue = pendingQueue.filter(filter);
          return buffer;
        }
      };
    }
  };
  return medium;
}
function createMedium(defaults, middleware) {
  if (middleware === void 0) {
    middleware = ItoI;
  }
  return innerCreateMedium(defaults, middleware);
}
function createSidecarMedium(options) {
  if (options === void 0) {
    options = {};
  }
  var medium = innerCreateMedium(null);
  medium.options = __assign({ async: true, ssr: false }, options);
  return medium;
}

// node_modules/use-sidecar/dist/es2015/renderProp.js
var React3 = __toESM(require_react());
var import_react3 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/exports.js
var React4 = __toESM(require_react());
var SideCar = function(_a) {
  var sideCar = _a.sideCar, rest = __rest(_a, ["sideCar"]);
  if (!sideCar) {
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  }
  var Target = sideCar.read();
  if (!Target) {
    throw new Error("Sidecar medium not found");
  }
  return React4.createElement(Target, __assign({}, rest));
};
SideCar.isSideCarExport = true;
function exportSidecar(medium, exported) {
  medium.useMedium(exported);
  return SideCar;
}

// node_modules/react-remove-scroll/dist/es2015/medium.js
var effectCar = createSidecarMedium();

// node_modules/react-remove-scroll/dist/es2015/UI.js
var nothing = function() {
  return;
};
var RemoveScroll = React5.forwardRef(function(props, parentRef) {
  var ref = React5.useRef(null);
  var _a = React5.useState({
    onScrollCapture: nothing,
    onWheelCapture: nothing,
    onTouchMoveCapture: nothing
  }), callbacks = _a[0], setCallbacks = _a[1];
  var forwardProps = props.forwardProps, children2 = props.children, className2 = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container3 = _b === void 0 ? "div" : _b, gapMode = props.gapMode, rest = __rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as", "gapMode"]);
  var SideCar2 = sideCar;
  var containerRef = useMergeRefs([ref, parentRef]);
  var containerProps = __assign(__assign({}, rest), callbacks);
  return React5.createElement(
    React5.Fragment,
    null,
    enabled && React5.createElement(SideCar2, { sideCar: effectCar, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref, gapMode }),
    forwardProps ? React5.cloneElement(React5.Children.only(children2), __assign(__assign({}, containerProps), { ref: containerRef })) : React5.createElement(Container3, __assign({}, containerProps, { className: className2, ref: containerRef }), children2)
  );
});
RemoveScroll.defaultProps = {
  enabled: true,
  removeScrollBar: true,
  inert: false
};
RemoveScroll.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName
};

// node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}

// node_modules/react-focus-lock/dist/es2015/Lock.js
var React7 = __toESM(require_react());
var import_prop_types2 = __toESM(require_prop_types());

// node_modules/focus-lock/dist/es2015/constants.js
var FOCUS_GROUP = "data-focus-lock";
var FOCUS_DISABLED = "data-focus-lock-disabled";
var FOCUS_ALLOW = "data-no-focus-lock";
var FOCUS_AUTO = "data-autofocus-inside";
var FOCUS_NO_AUTOFOCUS = "data-no-autofocus";

// node_modules/react-focus-lock/dist/es2015/FocusGuard.js
var React6 = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
var hiddenGuard = {
  width: "1px",
  height: "0px",
  padding: 0,
  overflow: "hidden",
  position: "fixed",
  top: "1px",
  left: "1px"
};
var InFocusGuard = function InFocusGuard2(_ref) {
  var _ref$children = _ref.children, children2 = _ref$children === void 0 ? null : _ref$children;
  return React6.createElement(React6.Fragment, null, React6.createElement("div", {
    key: "guard-first",
    "data-focus-guard": true,
    "data-focus-auto-guard": true,
    style: hiddenGuard
  }), children2, children2 && React6.createElement("div", {
    key: "guard-last",
    "data-focus-guard": true,
    "data-focus-auto-guard": true,
    style: hiddenGuard
  }));
};
InFocusGuard.propTypes = true ? {
  children: import_prop_types.default.node
} : {};

// node_modules/react-focus-lock/dist/es2015/medium.js
var mediumFocus = createMedium({}, function(_ref) {
  var target = _ref.target, currentTarget = _ref.currentTarget;
  return {
    target,
    currentTarget
  };
});
var mediumBlur = createMedium();
var mediumEffect = createMedium();
var mediumSidecar = createSidecarMedium({
  async: true,
  ssr: typeof document !== "undefined"
});

// node_modules/react-focus-lock/dist/es2015/scope.js
var import_react4 = __toESM(require_react());
var focusScope = (0, import_react4.createContext)(void 0);

// node_modules/react-focus-lock/dist/es2015/Lock.js
var emptyArray = [];
var FocusLock = React7.forwardRef(function FocusLockUI(props, parentRef) {
  var _extends22;
  var _React$useState = React7.useState(), realObserved = _React$useState[0], setObserved = _React$useState[1];
  var observed = React7.useRef();
  var isActive = React7.useRef(false);
  var originalFocusedElement = React7.useRef(null);
  var _React$useState2 = React7.useState({}), update = _React$useState2[1];
  var children2 = props.children, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$noFocusGuards = props.noFocusGuards, noFocusGuards = _props$noFocusGuards === void 0 ? false : _props$noFocusGuards, _props$persistentFocu = props.persistentFocus, persistentFocus = _props$persistentFocu === void 0 ? false : _props$persistentFocu, _props$crossFrame = props.crossFrame, crossFrame = _props$crossFrame === void 0 ? true : _props$crossFrame, _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus, allowTextSelection = props.allowTextSelection, group = props.group, className2 = props.className, whiteList = props.whiteList, hasPositiveIndices = props.hasPositiveIndices, _props$shards = props.shards, shards = _props$shards === void 0 ? emptyArray : _props$shards, _props$as = props.as, Container3 = _props$as === void 0 ? "div" : _props$as, _props$lockProps = props.lockProps, containerProps = _props$lockProps === void 0 ? {} : _props$lockProps, SideCar2 = props.sideCar, _props$returnFocus = props.returnFocus, shouldReturnFocus = _props$returnFocus === void 0 ? false : _props$returnFocus, focusOptions = props.focusOptions, onActivationCallback = props.onActivation, onDeactivationCallback = props.onDeactivation;
  var _React$useState3 = React7.useState({}), id = _React$useState3[0];
  var onActivation = React7.useCallback(function(_ref) {
    var captureFocusRestore2 = _ref.captureFocusRestore;
    if (!originalFocusedElement.current) {
      var _document;
      var activeElement = (_document = document) == null ? void 0 : _document.activeElement;
      originalFocusedElement.current = activeElement;
      if (activeElement !== document.body) {
        originalFocusedElement.current = captureFocusRestore2(activeElement);
      }
    }
    if (observed.current && onActivationCallback) {
      onActivationCallback(observed.current);
    }
    isActive.current = true;
    update();
  }, [onActivationCallback]);
  var onDeactivation = React7.useCallback(function() {
    isActive.current = false;
    if (onDeactivationCallback) {
      onDeactivationCallback(observed.current);
    }
    update();
  }, [onDeactivationCallback]);
  var returnFocus = React7.useCallback(function(allowDefer) {
    var focusRestore = originalFocusedElement.current;
    if (focusRestore) {
      var returnFocusTo = (typeof focusRestore === "function" ? focusRestore() : focusRestore) || document.body;
      var howToReturnFocus = typeof shouldReturnFocus === "function" ? shouldReturnFocus(returnFocusTo) : shouldReturnFocus;
      if (howToReturnFocus) {
        var returnFocusOptions = typeof howToReturnFocus === "object" ? howToReturnFocus : void 0;
        originalFocusedElement.current = null;
        if (allowDefer) {
          Promise.resolve().then(function() {
            return returnFocusTo.focus(returnFocusOptions);
          });
        } else {
          returnFocusTo.focus(returnFocusOptions);
        }
      }
    }
  }, [shouldReturnFocus]);
  var onFocus3 = React7.useCallback(function(event) {
    if (isActive.current) {
      mediumFocus.useMedium(event);
    }
  }, []);
  var onBlur3 = mediumBlur.useMedium;
  var setObserveNode = React7.useCallback(function(newObserved) {
    if (observed.current !== newObserved) {
      observed.current = newObserved;
      setObserved(newObserved);
    }
  }, []);
  if (true) {
    if (typeof allowTextSelection !== "undefined") {
      console.warn("React-Focus-Lock: allowTextSelection is deprecated and enabled by default");
    }
    React7.useEffect(function() {
      if (!observed.current && typeof Container3 !== "string") {
        console.error("FocusLock: could not obtain ref to internal node");
      }
    }, []);
  }
  var lockProps = _extends((_extends22 = {}, _extends22[FOCUS_DISABLED] = disabled && "disabled", _extends22[FOCUS_GROUP] = group, _extends22), containerProps);
  var hasLeadingGuards = noFocusGuards !== true;
  var hasTailingGuards = hasLeadingGuards && noFocusGuards !== "tail";
  var mergedRef = useMergeRefs([parentRef, setObserveNode]);
  var focusScopeValue = React7.useMemo(function() {
    return {
      observed,
      shards,
      enabled: !disabled,
      active: isActive.current
    };
  }, [disabled, isActive.current, shards, realObserved]);
  return React7.createElement(React7.Fragment, null, hasLeadingGuards && [
    React7.createElement("div", {
      key: "guard-first",
      "data-focus-guard": true,
      tabIndex: disabled ? -1 : 0,
      style: hiddenGuard
    }),
    hasPositiveIndices ? React7.createElement("div", {
      key: "guard-nearest",
      "data-focus-guard": true,
      tabIndex: disabled ? -1 : 1,
      style: hiddenGuard
    }) : null
  ], !disabled && React7.createElement(SideCar2, {
    id,
    sideCar: mediumSidecar,
    observed: realObserved,
    disabled,
    persistentFocus,
    crossFrame,
    autoFocus,
    whiteList,
    shards,
    onActivation,
    onDeactivation,
    returnFocus,
    focusOptions
  }), React7.createElement(Container3, _extends({
    ref: mergedRef
  }, lockProps, {
    className: className2,
    onBlur: onBlur3,
    onFocus: onFocus3
  }), React7.createElement(focusScope.Provider, {
    value: focusScopeValue
  }, children2)), hasTailingGuards && React7.createElement("div", {
    "data-focus-guard": true,
    tabIndex: disabled ? -1 : 0,
    style: hiddenGuard
  }));
});
FocusLock.propTypes = true ? {
  children: import_prop_types2.node,
  disabled: import_prop_types2.bool,
  returnFocus: (0, import_prop_types2.oneOfType)([import_prop_types2.bool, import_prop_types2.object, import_prop_types2.func]),
  focusOptions: import_prop_types2.object,
  noFocusGuards: import_prop_types2.bool,
  hasPositiveIndices: import_prop_types2.bool,
  allowTextSelection: import_prop_types2.bool,
  autoFocus: import_prop_types2.bool,
  persistentFocus: import_prop_types2.bool,
  crossFrame: import_prop_types2.bool,
  group: import_prop_types2.string,
  className: import_prop_types2.string,
  whiteList: import_prop_types2.func,
  shards: (0, import_prop_types2.arrayOf)(import_prop_types2.any),
  as: (0, import_prop_types2.oneOfType)([import_prop_types2.string, import_prop_types2.func, import_prop_types2.object]),
  lockProps: import_prop_types2.object,
  onActivation: import_prop_types2.func,
  onDeactivation: import_prop_types2.func,
  sideCar: import_prop_types2.any.isRequired
} : {};
var Lock_default = FocusLock;

// node_modules/react-focus-lock/dist/es2015/AutoFocusInside.js
var React8 = __toESM(require_react());
var import_prop_types3 = __toESM(require_prop_types());

// node_modules/react-focus-lock/dist/es2015/util.js
function deferAction(action) {
  setTimeout(action, 1);
}
var inlineProp = function inlineProp2(name, value) {
  var obj = {};
  obj[name] = value;
  return obj;
};
var extractRef = function extractRef2(ref) {
  return ref && "current" in ref ? ref.current : ref;
};

// node_modules/react-focus-lock/dist/es2015/AutoFocusInside.js
var AutoFocusInside = function AutoFocusInside2(_ref) {
  var _ref$disabled = _ref.disabled, disabled = _ref$disabled === void 0 ? false : _ref$disabled, children2 = _ref.children, _ref$className = _ref.className, className2 = _ref$className === void 0 ? void 0 : _ref$className;
  return React8.createElement("div", _extends({}, inlineProp(FOCUS_AUTO, !disabled), {
    className: className2
  }), children2);
};
AutoFocusInside.propTypes = true ? {
  children: import_prop_types3.default.node.isRequired,
  disabled: import_prop_types3.default.bool,
  className: import_prop_types3.default.string
} : {};

// node_modules/react-focus-lock/dist/es2015/MoveFocusInside.js
var React9 = __toESM(require_react());
var import_prop_types4 = __toESM(require_prop_types());
var useFocusInside = function useFocusInside2(observedRef) {
  React9.useEffect(function() {
    var enabled = true;
    mediumEffect.useMedium(function(car) {
      var observed = observedRef && observedRef.current;
      if (enabled && observed) {
        if (!car.focusInside(observed)) {
          car.moveFocusInside(observed, null);
        }
      }
    });
    return function() {
      enabled = false;
    };
  }, [observedRef]);
};
function MoveFocusInside(_ref) {
  var _ref$disabled = _ref.disabled, isDisabled = _ref$disabled === void 0 ? false : _ref$disabled, className2 = _ref.className, children2 = _ref.children;
  var ref = React9.useRef(null);
  useFocusInside(isDisabled ? void 0 : ref);
  return React9.createElement("div", _extends({}, inlineProp(FOCUS_AUTO, !isDisabled), {
    ref,
    className: className2
  }), children2);
}
MoveFocusInside.propTypes = true ? {
  children: import_prop_types4.default.node.isRequired,
  disabled: import_prop_types4.default.bool,
  className: import_prop_types4.default.string
} : {};

// node_modules/react-focus-lock/dist/es2015/FreeFocusInside.js
var React10 = __toESM(require_react());
var import_prop_types5 = __toESM(require_prop_types());
var FreeFocusInside = function FreeFocusInside2(_ref) {
  var children2 = _ref.children, className2 = _ref.className;
  return React10.createElement("div", _extends({}, inlineProp(FOCUS_ALLOW, true), {
    className: className2
  }), children2);
};
FreeFocusInside.propTypes = true ? {
  children: import_prop_types5.default.node.isRequired,
  className: import_prop_types5.default.string
} : {};

// node_modules/react-focus-lock/dist/es2015/use-focus-scope.js
var import_react5 = __toESM(require_react());

// node_modules/react-focus-lock/dist/es2015/use-focus-state.js
var import_react6 = __toESM(require_react());

// node_modules/react-focus-lock/dist/es2015/nano-events.js
var createNanoEvents = function createNanoEvents2() {
  return {
    emit: function emit(event) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      for (var i = 0, callbacks = this.events[event] || [], length = callbacks.length; i < length; i++) {
        callbacks[i].apply(callbacks, args);
      }
    },
    events: {},
    on: function on(event, cb) {
      var _this$events, _this = this;
      ((_this$events = this.events)[event] || (_this$events[event] = [])).push(cb);
      return function() {
        var _this$events$event;
        _this.events[event] = (_this$events$event = _this.events[event]) == null ? void 0 : _this$events$event.filter(function(i) {
          return cb !== i;
        });
      };
    }
  };
};

// node_modules/react-focus-lock/dist/es2015/use-focus-state.js
var mainbus = createNanoEvents();

// node_modules/react-focus-lock/dist/es2015/UI.js
var UI_default = Lock_default;

// node_modules/react-focus-on/dist/es2015/medium.js
var effectCar2 = createSidecarMedium();
var focusHiddenMarker = "data-focus-on-hidden";

// node_modules/react-focus-on/dist/es2015/reExports.js
var classNames = __assign({}, RemoveScroll.classNames);

// node_modules/react-focus-on/dist/es2015/UI.js
var PREVENT_SCROLL = { preventScroll: true };
var FocusOn = React11.forwardRef(function(props, parentRef) {
  var _a = React11.useState(false), lockProps = _a[0], setLockProps = _a[1];
  var children2 = props.children, autoFocus = props.autoFocus, shards = props.shards, crossFrame = props.crossFrame, _b = props.enabled, enabled = _b === void 0 ? true : _b, _c = props.scrollLock, scrollLock = _c === void 0 ? true : _c, _d = props.focusLock, focusLock = _d === void 0 ? true : _d, _e = props.returnFocus, returnFocus = _e === void 0 ? true : _e, inert = props.inert, allowPinchZoom = props.allowPinchZoom, sideCar = props.sideCar, className2 = props.className, shouldIgnore = props.shouldIgnore, preventScrollOnFocus = props.preventScrollOnFocus, style = props.style, as = props.as, gapMode = props.gapMode, rest = __rest(props, ["children", "autoFocus", "shards", "crossFrame", "enabled", "scrollLock", "focusLock", "returnFocus", "inert", "allowPinchZoom", "sideCar", "className", "shouldIgnore", "preventScrollOnFocus", "style", "as", "gapMode"]);
  var SideCar2 = sideCar;
  var onActivation = lockProps.onActivation, onDeactivation = lockProps.onDeactivation, restProps = __rest(lockProps, ["onActivation", "onDeactivation"]);
  var appliedLockProps = __assign(__assign({}, restProps), {
    as,
    style,
    sideCar,
    shards,
    allowPinchZoom,
    gapMode,
    inert,
    enabled: enabled && scrollLock
  });
  return React11.createElement(
    React11.Fragment,
    null,
    React11.createElement(UI_default, { ref: parentRef, sideCar, disabled: !(lockProps && enabled && focusLock), returnFocus, autoFocus, shards, crossFrame, onActivation, onDeactivation, className: className2, whiteList: shouldIgnore, lockProps: appliedLockProps, focusOptions: preventScrollOnFocus ? PREVENT_SCROLL : void 0, as: RemoveScroll }, children2),
    enabled && React11.createElement(SideCar2, __assign({}, rest, { sideCar: effectCar2, setLockProps, shards }))
  );
});

// node_modules/react-focus-lock/dist/es2015/Trap.js
var React13 = __toESM(require_react());
var import_prop_types6 = __toESM(require_prop_types());

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf(t, e);
}

// node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(t, o) {
  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);
}

// node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}

// node_modules/@babel/runtime/helpers/esm/toPrimitive.js
function toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t)
    return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i))
      return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}

// node_modules/@babel/runtime/helpers/esm/toPropertyKey.js
function toPropertyKey(t) {
  var i = toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}

// node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(e, r, t) {
  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[r] = t, e;
}

// node_modules/react-clientside-effect/lib/index.es.js
var import_react7 = __toESM(require_react());
function withSideEffect(reducePropsToState2, handleStateChangeOnClient2) {
  if (true) {
    if (typeof reducePropsToState2 !== "function") {
      throw new Error("Expected reducePropsToState to be a function.");
    }
    if (typeof handleStateChangeOnClient2 !== "function") {
      throw new Error("Expected handleStateChangeOnClient to be a function.");
    }
  }
  function getDisplayName(WrappedComponent) {
    return WrappedComponent.displayName || WrappedComponent.name || "Component";
  }
  return function wrap(WrappedComponent) {
    if (true) {
      if (typeof WrappedComponent !== "function") {
        throw new Error("Expected WrappedComponent to be a React component.");
      }
    }
    var mountedInstances = [];
    var state;
    function emitChange() {
      state = reducePropsToState2(mountedInstances.map(function(instance) {
        return instance.props;
      }));
      handleStateChangeOnClient2(state);
    }
    var SideEffect = function(_PureComponent) {
      _inheritsLoose(SideEffect2, _PureComponent);
      function SideEffect2() {
        return _PureComponent.apply(this, arguments) || this;
      }
      SideEffect2.peek = function peek() {
        return state;
      };
      var _proto = SideEffect2.prototype;
      _proto.componentDidMount = function componentDidMount() {
        mountedInstances.push(this);
        emitChange();
      };
      _proto.componentDidUpdate = function componentDidUpdate() {
        emitChange();
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        var index2 = mountedInstances.indexOf(this);
        mountedInstances.splice(index2, 1);
        emitChange();
      };
      _proto.render = function render() {
        return import_react7.default.createElement(WrappedComponent, this.props);
      };
      return SideEffect2;
    }(import_react7.PureComponent);
    _defineProperty(SideEffect, "displayName", "SideEffect(" + getDisplayName(WrappedComponent) + ")");
    return SideEffect;
  };
}
var index_es_default = withSideEffect;

// node_modules/focus-lock/dist/es2015/utils/array.js
var toArray = function(a) {
  var ret = Array(a.length);
  for (var i = 0; i < a.length; ++i) {
    ret[i] = a[i];
  }
  return ret;
};
var asArray = function(a) {
  return Array.isArray(a) ? a : [a];
};
var getFirst = function(a) {
  return Array.isArray(a) ? a[0] : a;
};

// node_modules/focus-lock/dist/es2015/utils/is.js
var isElementHidden = function(node2) {
  if (node2.nodeType !== Node.ELEMENT_NODE) {
    return false;
  }
  var computedStyle = window.getComputedStyle(node2, null);
  if (!computedStyle || !computedStyle.getPropertyValue) {
    return false;
  }
  return computedStyle.getPropertyValue("display") === "none" || computedStyle.getPropertyValue("visibility") === "hidden";
};
var getParentNode = function(node2) {
  return node2.parentNode && node2.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? (
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    node2.parentNode.host
  ) : node2.parentNode;
};
var isTopNode = function(node2) {
  return node2 === document || node2 && node2.nodeType === Node.DOCUMENT_NODE;
};
var isInert = function(node2) {
  return node2.hasAttribute("inert");
};
var isVisibleUncached = function(node2, checkParent) {
  return !node2 || isTopNode(node2) || !isElementHidden(node2) && !isInert(node2) && checkParent(getParentNode(node2));
};
var isVisibleCached = function(visibilityCache, node2) {
  var cached = visibilityCache.get(node2);
  if (cached !== void 0) {
    return cached;
  }
  var result = isVisibleUncached(node2, isVisibleCached.bind(void 0, visibilityCache));
  visibilityCache.set(node2, result);
  return result;
};
var isAutoFocusAllowedUncached = function(node2, checkParent) {
  return node2 && !isTopNode(node2) ? isAutoFocusAllowed(node2) ? checkParent(getParentNode(node2)) : false : true;
};
var isAutoFocusAllowedCached = function(cache2, node2) {
  var cached = cache2.get(node2);
  if (cached !== void 0) {
    return cached;
  }
  var result = isAutoFocusAllowedUncached(node2, isAutoFocusAllowedCached.bind(void 0, cache2));
  cache2.set(node2, result);
  return result;
};
var getDataset = function(node2) {
  return node2.dataset;
};
var isHTMLButtonElement = function(node2) {
  return node2.tagName === "BUTTON";
};
var isHTMLInputElement = function(node2) {
  return node2.tagName === "INPUT";
};
var isRadioElement = function(node2) {
  return isHTMLInputElement(node2) && node2.type === "radio";
};
var notHiddenInput = function(node2) {
  return !((isHTMLInputElement(node2) || isHTMLButtonElement(node2)) && (node2.type === "hidden" || node2.disabled));
};
var isAutoFocusAllowed = function(node2) {
  var attribute = node2.getAttribute(FOCUS_NO_AUTOFOCUS);
  return ![true, "true", ""].includes(attribute);
};
var isGuard = function(node2) {
  var _a;
  return Boolean(node2 && ((_a = getDataset(node2)) === null || _a === void 0 ? void 0 : _a.focusGuard));
};
var isNotAGuard = function(node2) {
  return !isGuard(node2);
};
var isDefined = function(x) {
  return Boolean(x);
};

// node_modules/focus-lock/dist/es2015/utils/tabOrder.js
var tabSort = function(a, b) {
  var aTab = Math.max(0, a.tabIndex);
  var bTab = Math.max(0, b.tabIndex);
  var tabDiff = aTab - bTab;
  var indexDiff = a.index - b.index;
  if (tabDiff) {
    if (!aTab) {
      return 1;
    }
    if (!bTab) {
      return -1;
    }
  }
  return tabDiff || indexDiff;
};
var getTabIndex = function(node2) {
  if (node2.tabIndex < 0) {
    if (!node2.hasAttribute("tabindex")) {
      return 0;
    }
  }
  return node2.tabIndex;
};
var orderByTabIndex = function(nodes, filterNegative, keepGuards) {
  return toArray(nodes).map(function(node2, index2) {
    var tabIndex = getTabIndex(node2);
    return {
      node: node2,
      index: index2,
      tabIndex: keepGuards && tabIndex === -1 ? (node2.dataset || {}).focusGuard ? 0 : -1 : tabIndex
    };
  }).filter(function(data) {
    return !filterNegative || data.tabIndex >= 0;
  }).sort(tabSort);
};

// node_modules/focus-lock/dist/es2015/utils/tabbables.js
var tabbables = [
  "button:enabled",
  "select:enabled",
  "textarea:enabled",
  "input:enabled",
  // elements with explicit roles will also use explicit tabindex
  // '[role="button"]',
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[tabindex]",
  "[contenteditable]",
  "[autofocus]"
];

// node_modules/focus-lock/dist/es2015/utils/tabUtils.js
var queryTabbables = tabbables.join(",");
var queryGuardTabbables = "".concat(queryTabbables, ", [data-focus-guard]");
var getFocusablesWithShadowDom = function(parent, withGuards) {
  return toArray((parent.shadowRoot || parent).children).reduce(function(acc, child) {
    return acc.concat(child.matches(withGuards ? queryGuardTabbables : queryTabbables) ? [child] : [], getFocusablesWithShadowDom(child));
  }, []);
};
var getFocusablesWithIFrame = function(parent, withGuards) {
  var _a;
  if (parent instanceof HTMLIFrameElement && ((_a = parent.contentDocument) === null || _a === void 0 ? void 0 : _a.body)) {
    return getFocusables([parent.contentDocument.body], withGuards);
  }
  return [parent];
};
var getFocusables = function(parents, withGuards) {
  return parents.reduce(function(acc, parent) {
    var _a;
    var focusableWithShadowDom = getFocusablesWithShadowDom(parent, withGuards);
    var focusableWithIframes = (_a = []).concat.apply(_a, focusableWithShadowDom.map(function(node2) {
      return getFocusablesWithIFrame(node2, withGuards);
    }));
    return acc.concat(
      // add all tabbables inside and within shadow DOMs in DOM order
      focusableWithIframes,
      // add if node is tabbable itself
      parent.parentNode ? toArray(parent.parentNode.querySelectorAll(queryTabbables)).filter(function(node2) {
        return node2 === parent;
      }) : []
    );
  }, []);
};
var getParentAutofocusables = function(parent) {
  var parentFocus = parent.querySelectorAll("[".concat(FOCUS_AUTO, "]"));
  return toArray(parentFocus).map(function(node2) {
    return getFocusables([node2]);
  }).reduce(function(acc, nodes) {
    return acc.concat(nodes);
  }, []);
};

// node_modules/focus-lock/dist/es2015/utils/DOMutils.js
var filterFocusable = function(nodes, visibilityCache) {
  return toArray(nodes).filter(function(node2) {
    return isVisibleCached(visibilityCache, node2);
  }).filter(function(node2) {
    return notHiddenInput(node2);
  });
};
var filterAutoFocusable = function(nodes, cache2) {
  if (cache2 === void 0) {
    cache2 = /* @__PURE__ */ new Map();
  }
  return toArray(nodes).filter(function(node2) {
    return isAutoFocusAllowedCached(cache2, node2);
  });
};
var getTabbableNodes = function(topNodes, visibilityCache, withGuards) {
  return orderByTabIndex(filterFocusable(getFocusables(topNodes, withGuards), visibilityCache), true, withGuards);
};
var getFocusableNodes = function(topNodes, visibilityCache) {
  return orderByTabIndex(filterFocusable(getFocusables(topNodes), visibilityCache), false);
};
var parentAutofocusables = function(topNode, visibilityCache) {
  return filterFocusable(getParentAutofocusables(topNode), visibilityCache);
};
var contains = function(scope, element) {
  if (scope.shadowRoot) {
    return contains(scope.shadowRoot, element);
  } else {
    if (Object.getPrototypeOf(scope).contains !== void 0 && Object.getPrototypeOf(scope).contains.call(scope, element)) {
      return true;
    }
    return toArray(scope.children).some(function(child) {
      var _a;
      if (child instanceof HTMLIFrameElement) {
        var iframeBody = (_a = child.contentDocument) === null || _a === void 0 ? void 0 : _a.body;
        if (iframeBody) {
          return contains(iframeBody, element);
        }
        return false;
      }
      return contains(child, element);
    });
  }
};

// node_modules/focus-lock/dist/es2015/utils/all-affected.js
var filterNested = function(nodes) {
  var contained = /* @__PURE__ */ new Set();
  var l = nodes.length;
  for (var i = 0; i < l; i += 1) {
    for (var j = i + 1; j < l; j += 1) {
      var position = nodes[i].compareDocumentPosition(nodes[j]);
      if ((position & Node.DOCUMENT_POSITION_CONTAINED_BY) > 0) {
        contained.add(j);
      }
      if ((position & Node.DOCUMENT_POSITION_CONTAINS) > 0) {
        contained.add(i);
      }
    }
  }
  return nodes.filter(function(_, index2) {
    return !contained.has(index2);
  });
};
var getTopParent = function(node2) {
  return node2.parentNode ? getTopParent(node2.parentNode) : node2;
};
var getAllAffectedNodes = function(node2) {
  var nodes = asArray(node2);
  return nodes.filter(Boolean).reduce(function(acc, currentNode) {
    var group = currentNode.getAttribute(FOCUS_GROUP);
    acc.push.apply(acc, group ? filterNested(toArray(getTopParent(currentNode).querySelectorAll("[".concat(FOCUS_GROUP, '="').concat(group, '"]:not([').concat(FOCUS_DISABLED, '="disabled"])')))) : [currentNode]);
    return acc;
  }, []);
};

// node_modules/focus-lock/dist/es2015/utils/safe.js
var safeProbe = function(cb) {
  try {
    return cb();
  } catch (e) {
    return void 0;
  }
};

// node_modules/focus-lock/dist/es2015/utils/getActiveElement.js
var getActiveElement = function(inDocument) {
  if (inDocument === void 0) {
    inDocument = document;
  }
  if (!inDocument || !inDocument.activeElement) {
    return void 0;
  }
  var activeElement = inDocument.activeElement;
  return activeElement.shadowRoot ? getActiveElement(activeElement.shadowRoot) : activeElement instanceof HTMLIFrameElement && safeProbe(function() {
    return activeElement.contentWindow.document;
  }) ? getActiveElement(activeElement.contentWindow.document) : activeElement;
};

// node_modules/focus-lock/dist/es2015/focusInside.js
var focusInFrame = function(frame, activeElement) {
  return frame === activeElement;
};
var focusInsideIframe = function(topNode, activeElement) {
  return Boolean(toArray(topNode.querySelectorAll("iframe")).some(function(node2) {
    return focusInFrame(node2, activeElement);
  }));
};
var focusInside = function(topNode, activeElement) {
  if (activeElement === void 0) {
    activeElement = getActiveElement(getFirst(topNode).ownerDocument);
  }
  if (!activeElement || activeElement.dataset && activeElement.dataset.focusGuard) {
    return false;
  }
  return getAllAffectedNodes(topNode).some(function(node2) {
    return contains(node2, activeElement) || focusInsideIframe(node2, activeElement);
  });
};

// node_modules/focus-lock/dist/es2015/focusIsHidden.js
var focusIsHidden = function(inDocument) {
  if (inDocument === void 0) {
    inDocument = document;
  }
  var activeElement = getActiveElement(inDocument);
  if (!activeElement) {
    return false;
  }
  return toArray(inDocument.querySelectorAll("[".concat(FOCUS_ALLOW, "]"))).some(function(node2) {
    return contains(node2, activeElement);
  });
};

// node_modules/focus-lock/dist/es2015/utils/correctFocus.js
var findSelectedRadio = function(node2, nodes) {
  return nodes.filter(isRadioElement).filter(function(el) {
    return el.name === node2.name;
  }).filter(function(el) {
    return el.checked;
  })[0] || node2;
};
var correctNode = function(node2, nodes) {
  if (isRadioElement(node2) && node2.name) {
    return findSelectedRadio(node2, nodes);
  }
  return node2;
};
var correctNodes = function(nodes) {
  var resultSet = /* @__PURE__ */ new Set();
  nodes.forEach(function(node2) {
    return resultSet.add(correctNode(node2, nodes));
  });
  return nodes.filter(function(node2) {
    return resultSet.has(node2);
  });
};

// node_modules/focus-lock/dist/es2015/utils/firstFocus.js
var pickFirstFocus = function(nodes) {
  if (nodes[0] && nodes.length > 1) {
    return correctNode(nodes[0], nodes);
  }
  return nodes[0];
};
var pickFocusable = function(nodes, node2) {
  return nodes.indexOf(correctNode(node2, nodes));
};

// node_modules/focus-lock/dist/es2015/solver.js
var NEW_FOCUS = "NEW_FOCUS";
var newFocus = function(innerNodes, innerTabbables, outerNodes, activeElement, lastNode) {
  var cnt = innerNodes.length;
  var firstFocus = innerNodes[0];
  var lastFocus = innerNodes[cnt - 1];
  var isOnGuard = isGuard(activeElement);
  if (activeElement && innerNodes.indexOf(activeElement) >= 0) {
    return void 0;
  }
  var activeIndex = activeElement !== void 0 ? outerNodes.indexOf(activeElement) : -1;
  var lastIndex = lastNode ? outerNodes.indexOf(lastNode) : activeIndex;
  var lastNodeInside = lastNode ? innerNodes.indexOf(lastNode) : -1;
  if (activeIndex === -1) {
    if (lastNodeInside !== -1) {
      return lastNodeInside;
    }
    return NEW_FOCUS;
  }
  if (lastNodeInside === -1) {
    return NEW_FOCUS;
  }
  var indexDiff = activeIndex - lastIndex;
  var firstNodeIndex = outerNodes.indexOf(firstFocus);
  var lastNodeIndex = outerNodes.indexOf(lastFocus);
  var correctedNodes = correctNodes(outerNodes);
  var correctedIndex = activeElement !== void 0 ? correctedNodes.indexOf(activeElement) : -1;
  var correctedIndexDiff = correctedIndex - (lastNode ? correctedNodes.indexOf(lastNode) : activeIndex);
  if (!indexDiff && lastNodeInside >= 0) {
    return lastNodeInside;
  }
  if (innerTabbables.length === 0) {
    return lastNodeInside;
  }
  var returnFirstNode = pickFocusable(innerNodes, innerTabbables[0]);
  var returnLastNode = pickFocusable(innerNodes, innerTabbables[innerTabbables.length - 1]);
  if (activeIndex <= firstNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {
    return returnLastNode;
  }
  if (activeIndex >= lastNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) {
    return returnFirstNode;
  }
  if (indexDiff && Math.abs(correctedIndexDiff) > 1) {
    return lastNodeInside;
  }
  if (activeIndex <= firstNodeIndex) {
    return returnLastNode;
  }
  if (activeIndex > lastNodeIndex) {
    return returnFirstNode;
  }
  if (indexDiff) {
    if (Math.abs(indexDiff) > 1) {
      return lastNodeInside;
    }
    return (cnt + lastNodeInside + indexDiff) % cnt;
  }
  return void 0;
};

// node_modules/focus-lock/dist/es2015/utils/auto-focus.js
var findAutoFocused = function(autoFocusables) {
  return function(node2) {
    var _a;
    var autofocus = (_a = getDataset(node2)) === null || _a === void 0 ? void 0 : _a.autofocus;
    return (
      // @ts-expect-error
      node2.autofocus || //
      autofocus !== void 0 && autofocus !== "false" || //
      autoFocusables.indexOf(node2) >= 0
    );
  };
};
var pickAutofocus = function(nodesIndexes, orderedNodes, groups) {
  var nodes = nodesIndexes.map(function(_a) {
    var node2 = _a.node;
    return node2;
  });
  var autoFocusable = filterAutoFocusable(nodes.filter(findAutoFocused(groups)));
  if (autoFocusable && autoFocusable.length) {
    return pickFirstFocus(autoFocusable);
  }
  return pickFirstFocus(filterAutoFocusable(orderedNodes));
};

// node_modules/focus-lock/dist/es2015/utils/parenting.js
var getParents = function(node2, parents) {
  if (parents === void 0) {
    parents = [];
  }
  parents.push(node2);
  if (node2.parentNode) {
    getParents(node2.parentNode.host || node2.parentNode, parents);
  }
  return parents;
};
var getCommonParent = function(nodeA, nodeB) {
  var parentsA = getParents(nodeA);
  var parentsB = getParents(nodeB);
  for (var i = 0; i < parentsA.length; i += 1) {
    var currentParent = parentsA[i];
    if (parentsB.indexOf(currentParent) >= 0) {
      return currentParent;
    }
  }
  return false;
};
var getTopCommonParent = function(baseActiveElement, leftEntry, rightEntries) {
  var activeElements = asArray(baseActiveElement);
  var leftEntries = asArray(leftEntry);
  var activeElement = activeElements[0];
  var topCommon = false;
  leftEntries.filter(Boolean).forEach(function(entry) {
    topCommon = getCommonParent(topCommon || entry, entry) || topCommon;
    rightEntries.filter(Boolean).forEach(function(subEntry) {
      var common = getCommonParent(activeElement, subEntry);
      if (common) {
        if (!topCommon || contains(common, topCommon)) {
          topCommon = common;
        } else {
          topCommon = getCommonParent(common, topCommon);
        }
      }
    });
  });
  return topCommon;
};
var allParentAutofocusables = function(entries, visibilityCache) {
  return entries.reduce(function(acc, node2) {
    return acc.concat(parentAutofocusables(node2, visibilityCache));
  }, []);
};

// node_modules/focus-lock/dist/es2015/focusSolver.js
var reorderNodes = function(srcNodes, dstNodes) {
  var remap = /* @__PURE__ */ new Map();
  dstNodes.forEach(function(entity) {
    return remap.set(entity.node, entity);
  });
  return srcNodes.map(function(node2) {
    return remap.get(node2);
  }).filter(isDefined);
};
var focusSolver = function(topNode, lastNode) {
  var activeElement = getActiveElement(asArray(topNode).length > 0 ? document : getFirst(topNode).ownerDocument);
  var entries = getAllAffectedNodes(topNode).filter(isNotAGuard);
  var commonParent = getTopCommonParent(activeElement || topNode, topNode, entries);
  var visibilityCache = /* @__PURE__ */ new Map();
  var anyFocusable = getFocusableNodes(entries, visibilityCache);
  var innerElements = anyFocusable.filter(function(_a) {
    var node2 = _a.node;
    return isNotAGuard(node2);
  });
  if (!innerElements[0]) {
    return void 0;
  }
  var outerNodes = getFocusableNodes([commonParent], visibilityCache).map(function(_a) {
    var node2 = _a.node;
    return node2;
  });
  var orderedInnerElements = reorderNodes(outerNodes, innerElements);
  var innerFocusables = orderedInnerElements.map(function(_a) {
    var node2 = _a.node;
    return node2;
  });
  var innerTabbable = orderedInnerElements.filter(function(_a) {
    var tabIndex = _a.tabIndex;
    return tabIndex >= 0;
  }).map(function(_a) {
    var node2 = _a.node;
    return node2;
  });
  var newId = newFocus(innerFocusables, innerTabbable, outerNodes, activeElement, lastNode);
  if (newId === NEW_FOCUS) {
    var focusNode = (
      // first try only tabbable, and the fallback to all focusable, as long as at least one element should be picked for focus
      pickAutofocus(anyFocusable, innerTabbable, allParentAutofocusables(entries, visibilityCache)) || pickAutofocus(anyFocusable, innerFocusables, allParentAutofocusables(entries, visibilityCache))
    );
    if (focusNode) {
      return { node: focusNode };
    } else {
      console.warn("focus-lock: cannot find any node to move focus into");
      return void 0;
    }
  }
  if (newId === void 0) {
    return newId;
  }
  return orderedInnerElements[newId];
};

// node_modules/focus-lock/dist/es2015/focusables.js
var expandFocusableNodes = function(topNode) {
  var entries = getAllAffectedNodes(topNode).filter(isNotAGuard);
  var commonParent = getTopCommonParent(topNode, topNode, entries);
  var outerNodes = orderByTabIndex(getFocusables([commonParent], true), true, true);
  var innerElements = getFocusables(entries, false);
  return outerNodes.map(function(_a) {
    var node2 = _a.node, index2 = _a.index;
    return {
      node: node2,
      index: index2,
      lockItem: innerElements.indexOf(node2) >= 0,
      guard: isGuard(node2)
    };
  });
};

// node_modules/focus-lock/dist/es2015/commands.js
var focusOn = function(target, focusOptions) {
  if (!target) {
    return;
  }
  if ("focus" in target) {
    target.focus(focusOptions);
  }
  if ("contentWindow" in target && target.contentWindow) {
    target.contentWindow.focus();
  }
};

// node_modules/focus-lock/dist/es2015/moveFocusInside.js
var guardCount = 0;
var lockDisabled = false;
var moveFocusInside = function(topNode, lastNode, options) {
  if (options === void 0) {
    options = {};
  }
  var focusable = focusSolver(topNode, lastNode);
  if (lockDisabled) {
    return;
  }
  if (focusable) {
    if (guardCount > 2) {
      console.error("FocusLock: focus-fighting detected. Only one focus management system could be active. See https://github.com/theKashey/focus-lock/#focus-fighting");
      lockDisabled = true;
      setTimeout(function() {
        lockDisabled = false;
      }, 1);
      return;
    }
    guardCount++;
    focusOn(focusable.node, options.focusOptions);
    guardCount--;
  }
};

// node_modules/focus-lock/dist/es2015/return-focus.js
function weakRef(value) {
  if (!value)
    return null;
  if (typeof WeakRef === "undefined") {
    return function() {
      return value || null;
    };
  }
  var w = value ? new WeakRef(value) : null;
  return function() {
    return (w === null || w === void 0 ? void 0 : w.deref()) || null;
  };
}
var recordElementLocation = function(element) {
  if (!element) {
    return null;
  }
  var stack = [];
  var currentElement = element;
  while (currentElement && currentElement !== document.body) {
    stack.push({
      current: weakRef(currentElement),
      parent: weakRef(currentElement.parentElement),
      left: weakRef(currentElement.previousElementSibling),
      right: weakRef(currentElement.nextElementSibling)
    });
    currentElement = currentElement.parentElement;
  }
  return {
    element: weakRef(element),
    stack,
    ownerDocument: element.ownerDocument
  };
};
var restoreFocusTo = function(location) {
  var _a, _b, _c, _d, _e;
  if (!location) {
    return void 0;
  }
  var stack = location.stack, ownerDocument = location.ownerDocument;
  var visibilityCache = /* @__PURE__ */ new Map();
  for (var _i = 0, stack_1 = stack; _i < stack_1.length; _i++) {
    var line = stack_1[_i];
    var parent_1 = (_a = line.parent) === null || _a === void 0 ? void 0 : _a.call(line);
    if (parent_1 && ownerDocument.contains(parent_1)) {
      var left = (_b = line.left) === null || _b === void 0 ? void 0 : _b.call(line);
      var savedCurrent = line.current();
      var current = parent_1.contains(savedCurrent) ? savedCurrent : void 0;
      var right = (_c = line.right) === null || _c === void 0 ? void 0 : _c.call(line);
      var focusables = getTabbableNodes([parent_1], visibilityCache);
      var aim = (
        // that is element itself
        (_e = (_d = current !== null && current !== void 0 ? current : (
          // or something in it's place
          left === null || left === void 0 ? void 0 : left.nextElementSibling
        )) !== null && _d !== void 0 ? _d : (
          // or somebody to the right, still close enough
          right
        )) !== null && _e !== void 0 ? _e : (
          // or somebody to the left, something?
          left
        )
      );
      while (aim) {
        for (var _f = 0, focusables_1 = focusables; _f < focusables_1.length; _f++) {
          var focusable = focusables_1[_f];
          if (aim === null || aim === void 0 ? void 0 : aim.contains(focusable.node)) {
            return focusable.node;
          }
        }
        aim = aim.nextElementSibling;
      }
      if (focusables.length) {
        return focusables[0].node;
      }
    }
  }
  return void 0;
};
var captureFocusRestore = function(targetElement) {
  var location = recordElementLocation(targetElement);
  return function() {
    return restoreFocusTo(location);
  };
};

// node_modules/focus-lock/dist/es2015/sibling.js
var getRelativeFocusable = function(element, scope, useTabbables) {
  if (!element || !scope) {
    console.error("no element or scope given");
    return {};
  }
  var shards = asArray(scope);
  if (shards.every(function(shard) {
    return !contains(shard, element);
  })) {
    console.error("Active element is not contained in the scope");
    return {};
  }
  var focusables = useTabbables ? getTabbableNodes(shards, /* @__PURE__ */ new Map()) : getFocusableNodes(shards, /* @__PURE__ */ new Map());
  var current = focusables.findIndex(function(_a) {
    var node2 = _a.node;
    return node2 === element;
  });
  if (current === -1) {
    return void 0;
  }
  return {
    prev: focusables[current - 1],
    next: focusables[current + 1],
    first: focusables[0],
    last: focusables[focusables.length - 1]
  };
};
var getBoundary = function(shards, useTabbables) {
  var set = useTabbables ? getTabbableNodes(asArray(shards), /* @__PURE__ */ new Map()) : getFocusableNodes(asArray(shards), /* @__PURE__ */ new Map());
  return {
    first: set[0],
    last: set[set.length - 1]
  };
};
var defaultOptions = function(options) {
  return Object.assign({
    scope: document.body,
    cycle: true,
    onlyTabbable: true
  }, options);
};
var moveFocus = function(fromElement, options, cb) {
  if (options === void 0) {
    options = {};
  }
  var newOptions = defaultOptions(options);
  var solution = getRelativeFocusable(fromElement, newOptions.scope, newOptions.onlyTabbable);
  if (!solution) {
    return;
  }
  var target = cb(solution, newOptions.cycle);
  if (target) {
    focusOn(target.node, newOptions.focusOptions);
  }
};
var focusNextElement = function(fromElement, options) {
  if (options === void 0) {
    options = {};
  }
  moveFocus(fromElement, options, function(_a, cycle) {
    var next = _a.next, first = _a.first;
    return next || cycle && first;
  });
};
var focusPrevElement = function(fromElement, options) {
  if (options === void 0) {
    options = {};
  }
  moveFocus(fromElement, options, function(_a, cycle) {
    var prev = _a.prev, last = _a.last;
    return prev || cycle && last;
  });
};
var pickBoundary = function(scope, options, what) {
  var _a;
  var boundary = getBoundary(scope, (_a = options.onlyTabbable) !== null && _a !== void 0 ? _a : true);
  var node2 = boundary[what];
  if (node2) {
    focusOn(node2.node, options.focusOptions);
  }
};
var focusFirstElement = function(scope, options) {
  if (options === void 0) {
    options = {};
  }
  pickBoundary(scope, options, "first");
};
var focusLastElement = function(scope, options) {
  if (options === void 0) {
    options = {};
  }
  pickBoundary(scope, options, "last");
};

// node_modules/react-focus-lock/dist/es2015/Trap.js
var focusOnBody = function focusOnBody2() {
  return document && document.activeElement === document.body;
};
var isFreeFocus = function isFreeFocus2() {
  return focusOnBody() || focusIsHidden();
};
var lastActiveTrap = null;
var lastActiveFocus = null;
var lastPortaledElement = null;
var focusWasOutsideWindow = false;
var defaultWhitelist = function defaultWhitelist2() {
  return true;
};
var focusWhitelisted = function focusWhitelisted2(activeElement) {
  return (lastActiveTrap.whiteList || defaultWhitelist)(activeElement);
};
var recordPortal = function recordPortal2(observerNode, portaledElement) {
  lastPortaledElement = {
    observerNode,
    portaledElement
  };
};
var focusIsPortaledPair = function focusIsPortaledPair2(element) {
  return lastPortaledElement && lastPortaledElement.portaledElement === element;
};
function autoGuard(startIndex, end, step, allNodes) {
  var lastGuard = null;
  var i = startIndex;
  do {
    var item = allNodes[i];
    if (item.guard) {
      if (item.node.dataset.focusAutoGuard) {
        lastGuard = item;
      }
    } else if (item.lockItem) {
      if (i !== startIndex) {
        return;
      }
      lastGuard = null;
    } else {
      break;
    }
  } while ((i += step) !== end);
  if (lastGuard) {
    lastGuard.node.tabIndex = 0;
  }
}
var focusWasOutside = function focusWasOutside2(crossFrameOption) {
  if (crossFrameOption) {
    return Boolean(focusWasOutsideWindow);
  }
  return focusWasOutsideWindow === "meanwhile";
};
var checkInHost = function checkInHost2(check, el, boundary) {
  return el && (el.host === check && (!el.activeElement || boundary.contains(el.activeElement)) || el.parentNode && checkInHost2(check, el.parentNode, boundary));
};
var withinHost = function withinHost2(activeElement, workingArea) {
  return workingArea.some(function(area) {
    return checkInHost(activeElement, area, area);
  });
};
var activateTrap = function activateTrap2() {
  var result = false;
  if (lastActiveTrap) {
    var _lastActiveTrap = lastActiveTrap, observed = _lastActiveTrap.observed, persistentFocus = _lastActiveTrap.persistentFocus, autoFocus = _lastActiveTrap.autoFocus, shards = _lastActiveTrap.shards, crossFrame = _lastActiveTrap.crossFrame, focusOptions = _lastActiveTrap.focusOptions;
    var workingNode = observed || lastPortaledElement && lastPortaledElement.portaledElement;
    var activeElement = document && document.activeElement;
    if (workingNode) {
      var workingArea = [workingNode].concat(shards.map(extractRef).filter(Boolean));
      if (!activeElement || focusWhitelisted(activeElement)) {
        if (persistentFocus || focusWasOutside(crossFrame) || !isFreeFocus() || !lastActiveFocus && autoFocus) {
          if (workingNode && !(focusInside(workingArea) || activeElement && withinHost(activeElement, workingArea) || focusIsPortaledPair(activeElement, workingNode))) {
            if (document && !lastActiveFocus && activeElement && !autoFocus) {
              if (activeElement.blur) {
                activeElement.blur();
              }
              document.body.focus();
            } else {
              result = moveFocusInside(workingArea, lastActiveFocus, {
                focusOptions
              });
              lastPortaledElement = {};
            }
          }
          focusWasOutsideWindow = false;
          lastActiveFocus = document && document.activeElement;
        }
      }
      if (document && activeElement !== document.activeElement && document.querySelector("[data-focus-auto-guard]")) {
        var newActiveElement = document && document.activeElement;
        var allNodes = expandFocusableNodes(workingArea);
        var focusedIndex = allNodes.map(function(_ref) {
          var node2 = _ref.node;
          return node2;
        }).indexOf(newActiveElement);
        if (focusedIndex > -1) {
          allNodes.filter(function(_ref2) {
            var guard = _ref2.guard, node2 = _ref2.node;
            return guard && node2.dataset.focusAutoGuard;
          }).forEach(function(_ref3) {
            var node2 = _ref3.node;
            return node2.removeAttribute("tabIndex");
          });
          autoGuard(focusedIndex, allNodes.length, 1, allNodes);
          autoGuard(focusedIndex, -1, -1, allNodes);
        }
      }
    }
  }
  return result;
};
var onTrap = function onTrap2(event) {
  if (activateTrap() && event) {
    event.stopPropagation();
    event.preventDefault();
  }
};
var onBlur = function onBlur2() {
  return deferAction(activateTrap);
};
var onFocus = function onFocus2(event) {
  var source = event.target;
  var currentNode = event.currentTarget;
  if (!currentNode.contains(source)) {
    recordPortal(currentNode, source);
  }
};
var FocusWatcher = function FocusWatcher2() {
  return null;
};
var FocusTrap = function FocusTrap2(_ref4) {
  var children2 = _ref4.children;
  return React13.createElement("div", {
    onBlur,
    onFocus
  }, children2);
};
FocusTrap.propTypes = true ? {
  children: import_prop_types6.default.node.isRequired
} : {};
var onWindowBlur = function onWindowBlur2() {
  focusWasOutsideWindow = "just";
  deferAction(function() {
    focusWasOutsideWindow = "meanwhile";
  });
};
var attachHandler = function attachHandler2() {
  document.addEventListener("focusin", onTrap);
  document.addEventListener("focusout", onBlur);
  window.addEventListener("blur", onWindowBlur);
};
var detachHandler = function detachHandler2() {
  document.removeEventListener("focusin", onTrap);
  document.removeEventListener("focusout", onBlur);
  window.removeEventListener("blur", onWindowBlur);
};
function reducePropsToState(propsList) {
  return propsList.filter(function(_ref5) {
    var disabled = _ref5.disabled;
    return !disabled;
  });
}
var focusLockAPI = {
  moveFocusInside,
  focusInside,
  focusNextElement,
  focusPrevElement,
  focusFirstElement,
  focusLastElement,
  captureFocusRestore
};
function handleStateChangeOnClient(traps) {
  var trap = traps.slice(-1)[0];
  if (trap && !lastActiveTrap) {
    attachHandler();
  }
  var lastTrap = lastActiveTrap;
  var sameTrap = lastTrap && trap && trap.id === lastTrap.id;
  lastActiveTrap = trap;
  if (lastTrap && !sameTrap) {
    lastTrap.onDeactivation();
    if (!traps.filter(function(_ref6) {
      var id = _ref6.id;
      return id === lastTrap.id;
    }).length) {
      lastTrap.returnFocus(!trap);
    }
  }
  if (trap) {
    lastActiveFocus = null;
    if (!sameTrap || lastTrap.observed !== trap.observed) {
      trap.onActivation(focusLockAPI);
    }
    activateTrap(true);
    deferAction(activateTrap);
  } else {
    detachHandler();
    lastActiveFocus = null;
  }
}
mediumFocus.assignSyncMedium(onFocus);
mediumBlur.assignMedium(onBlur);
mediumEffect.assignMedium(function(cb) {
  return cb(focusLockAPI);
});
var Trap_default = index_es_default(reducePropsToState, handleStateChangeOnClient)(FocusWatcher);

// node_modules/react-focus-lock/dist/es2015/sidecar.js
var sidecar_default = exportSidecar(mediumSidecar, Trap_default);

// node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var React16 = __toESM(require_react());

// node_modules/react-remove-scroll-bar/dist/es2015/component.js
var React15 = __toESM(require_react());

// node_modules/react-style-singleton/dist/es2015/hook.js
var React14 = __toESM(require_react());

// node_modules/get-nonce/dist/es2015/index.js
var currentNonce;
var getNonce = function() {
  if (currentNonce) {
    return currentNonce;
  }
  if (typeof __webpack_nonce__ !== "undefined") {
    return __webpack_nonce__;
  }
  return void 0;
};

// node_modules/react-style-singleton/dist/es2015/singleton.js
function makeStyleTag() {
  if (!document)
    return null;
  var tag = document.createElement("style");
  tag.type = "text/css";
  var nonce = getNonce();
  if (nonce) {
    tag.setAttribute("nonce", nonce);
  }
  return tag;
}
function injectStyles(tag, css) {
  if (tag.styleSheet) {
    tag.styleSheet.cssText = css;
  } else {
    tag.appendChild(document.createTextNode(css));
  }
}
function insertStyleTag(tag) {
  var head = document.head || document.getElementsByTagName("head")[0];
  head.appendChild(tag);
}
var stylesheetSingleton = function() {
  var counter = 0;
  var stylesheet = null;
  return {
    add: function(style) {
      if (counter == 0) {
        if (stylesheet = makeStyleTag()) {
          injectStyles(stylesheet, style);
          insertStyleTag(stylesheet);
        }
      }
      counter++;
    },
    remove: function() {
      counter--;
      if (!counter && stylesheet) {
        stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
        stylesheet = null;
      }
    }
  };
};

// node_modules/react-style-singleton/dist/es2015/hook.js
var styleHookSingleton = function() {
  var sheet = stylesheetSingleton();
  return function(styles2, isDynamic) {
    React14.useEffect(function() {
      sheet.add(styles2);
      return function() {
        sheet.remove();
      };
    }, [styles2 && isDynamic]);
  };
};

// node_modules/react-style-singleton/dist/es2015/component.js
var styleSingleton = function() {
  var useStyle = styleHookSingleton();
  var Sheet = function(_a) {
    var styles2 = _a.styles, dynamic = _a.dynamic;
    useStyle(styles2, dynamic);
    return null;
  };
  return Sheet;
};

// node_modules/react-remove-scroll-bar/dist/es2015/utils.js
var zeroGap = {
  left: 0,
  top: 0,
  right: 0,
  gap: 0
};
var parse = function(x) {
  return parseInt(x || "", 10) || 0;
};
var getOffset = function(gapMode) {
  var cs = window.getComputedStyle(document.body);
  var left = cs[gapMode === "padding" ? "paddingLeft" : "marginLeft"];
  var top = cs[gapMode === "padding" ? "paddingTop" : "marginTop"];
  var right = cs[gapMode === "padding" ? "paddingRight" : "marginRight"];
  return [parse(left), parse(top), parse(right)];
};
var getGapWidth = function(gapMode) {
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  if (typeof window === "undefined") {
    return zeroGap;
  }
  var offsets = getOffset(gapMode);
  var documentWidth = document.documentElement.clientWidth;
  var windowWidth = window.innerWidth;
  return {
    left: offsets[0],
    top: offsets[1],
    right: offsets[2],
    gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
  };
};

// node_modules/react-remove-scroll-bar/dist/es2015/component.js
var Style = styleSingleton();
var lockAttribute = "data-scroll-locked";
var getStyles = function(_a, allowRelative, gapMode, important) {
  var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  return "\n  .".concat(noScrollbarsClassName, " {\n   overflow: hidden ").concat(important, ";\n   padding-right: ").concat(gap, "px ").concat(important, ";\n  }\n  body[").concat(lockAttribute, "] {\n    overflow: hidden ").concat(important, ";\n    overscroll-behavior: contain;\n    ").concat([
    allowRelative && "position: relative ".concat(important, ";"),
    gapMode === "margin" && "\n    padding-left: ".concat(left, "px;\n    padding-top: ").concat(top, "px;\n    padding-right: ").concat(right, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(gap, "px ").concat(important, ";\n    "),
    gapMode === "padding" && "padding-right: ".concat(gap, "px ").concat(important, ";")
  ].filter(Boolean).join(""), "\n  }\n  \n  .").concat(zeroRightClassName, " {\n    right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " {\n    margin-right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(zeroRightClassName, " .").concat(zeroRightClassName, " {\n    right: 0 ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " .").concat(fullWidthClassName, " {\n    margin-right: 0 ").concat(important, ";\n  }\n  \n  body[").concat(lockAttribute, "] {\n    ").concat(removedBarSizeVariable, ": ").concat(gap, "px;\n  }\n");
};
var getCurrentUseCounter = function() {
  var counter = parseInt(document.body.getAttribute(lockAttribute) || "0", 10);
  return isFinite(counter) ? counter : 0;
};
var useLockAttribute = function() {
  React15.useEffect(function() {
    document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());
    return function() {
      var newCounter = getCurrentUseCounter() - 1;
      if (newCounter <= 0) {
        document.body.removeAttribute(lockAttribute);
      } else {
        document.body.setAttribute(lockAttribute, newCounter.toString());
      }
    };
  }, []);
};
var RemoveScrollBar = function(_a) {
  var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? "margin" : _b;
  useLockAttribute();
  var gap = React15.useMemo(function() {
    return getGapWidth(gapMode);
  }, [gapMode]);
  return React15.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? "!important" : "") });
};

// node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js
var passiveSupported = false;
if (typeof window !== "undefined") {
  try {
    options = Object.defineProperty({}, "passive", {
      get: function() {
        passiveSupported = true;
        return true;
      }
    });
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, options);
  } catch (err) {
    passiveSupported = false;
  }
}
var options;
var nonPassive = passiveSupported ? { passive: false } : false;

// node_modules/react-remove-scroll/dist/es2015/handleScroll.js
var alwaysContainsScroll = function(node2) {
  return node2.tagName === "TEXTAREA";
};
var elementCanBeScrolled = function(node2, overflow) {
  if (!(node2 instanceof Element)) {
    return false;
  }
  var styles2 = window.getComputedStyle(node2);
  return (
    // not-not-scrollable
    styles2[overflow] !== "hidden" && // contains scroll inside self
    !(styles2.overflowY === styles2.overflowX && !alwaysContainsScroll(node2) && styles2[overflow] === "visible")
  );
};
var elementCouldBeVScrolled = function(node2) {
  return elementCanBeScrolled(node2, "overflowY");
};
var elementCouldBeHScrolled = function(node2) {
  return elementCanBeScrolled(node2, "overflowX");
};
var locationCouldBeScrolled = function(axis, node2) {
  var ownerDocument = node2.ownerDocument;
  var current = node2;
  do {
    if (typeof ShadowRoot !== "undefined" && current instanceof ShadowRoot) {
      current = current.host;
    }
    var isScrollable = elementCouldBeScrolled(axis, current);
    if (isScrollable) {
      var _a = getScrollVariables(axis, current), scrollHeight = _a[1], clientHeight = _a[2];
      if (scrollHeight > clientHeight) {
        return true;
      }
    }
    current = current.parentNode;
  } while (current && current !== ownerDocument.body);
  return false;
};
var getVScrollVariables = function(_a) {
  var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
  return [
    scrollTop,
    scrollHeight,
    clientHeight
  ];
};
var getHScrollVariables = function(_a) {
  var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
  return [
    scrollLeft,
    scrollWidth,
    clientWidth
  ];
};
var elementCouldBeScrolled = function(axis, node2) {
  return axis === "v" ? elementCouldBeVScrolled(node2) : elementCouldBeHScrolled(node2);
};
var getScrollVariables = function(axis, node2) {
  return axis === "v" ? getVScrollVariables(node2) : getHScrollVariables(node2);
};
var getDirectionFactor = function(axis, direction) {
  return axis === "h" && direction === "rtl" ? -1 : 1;
};
var handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
  var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);
  var delta = directionFactor * sourceDelta;
  var target = event.target;
  var targetInLock = endTarget.contains(target);
  var shouldCancelScroll = false;
  var isDeltaPositive = delta > 0;
  var availableScroll = 0;
  var availableScrollTop = 0;
  do {
    var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];
    var elementScroll = scroll_1 - capacity - directionFactor * position;
    if (position || elementScroll) {
      if (elementCouldBeScrolled(axis, target)) {
        availableScroll += elementScroll;
        availableScrollTop += position;
      }
    }
    if (target instanceof ShadowRoot) {
      target = target.host;
    } else {
      target = target.parentNode;
    }
  } while (
    // portaled content
    !targetInLock && target !== document.body || // self content
    targetInLock && (endTarget.contains(target) || endTarget === target)
  );
  if (isDeltaPositive && (noOverscroll && Math.abs(availableScroll) < 1 || !noOverscroll && delta > availableScroll)) {
    shouldCancelScroll = true;
  } else if (!isDeltaPositive && (noOverscroll && Math.abs(availableScrollTop) < 1 || !noOverscroll && -delta > availableScrollTop)) {
    shouldCancelScroll = true;
  }
  return shouldCancelScroll;
};

// node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var getTouchXY = function(event) {
  return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
};
var getDeltaXY = function(event) {
  return [event.deltaX, event.deltaY];
};
var extractRef3 = function(ref) {
  return ref && "current" in ref ? ref.current : ref;
};
var deltaCompare = function(x, y) {
  return x[0] === y[0] && x[1] === y[1];
};
var generateStyle = function(id) {
  return "\n  .block-interactivity-".concat(id, " {pointer-events: none;}\n  .allow-interactivity-").concat(id, " {pointer-events: all;}\n");
};
var idCounter = 0;
var lockStack = [];
function RemoveScrollSideCar(props) {
  var shouldPreventQueue = React16.useRef([]);
  var touchStartRef = React16.useRef([0, 0]);
  var activeAxis = React16.useRef();
  var id = React16.useState(idCounter++)[0];
  var Style3 = React16.useState(styleSingleton)[0];
  var lastProps = React16.useRef(props);
  React16.useEffect(function() {
    lastProps.current = props;
  }, [props]);
  React16.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-".concat(id));
      var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef3), true).filter(Boolean);
      allow_1.forEach(function(el) {
        return el.classList.add("allow-interactivity-".concat(id));
      });
      return function() {
        document.body.classList.remove("block-interactivity-".concat(id));
        allow_1.forEach(function(el) {
          return el.classList.remove("allow-interactivity-".concat(id));
        });
      };
    }
    return;
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = React16.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2) {
      return !lastProps.current.allowPinchZoom;
    }
    var touch = getTouchXY(event);
    var touchStart = touchStartRef.current;
    var deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0];
    var deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1];
    var currentAxis;
    var target = event.target;
    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    if ("touches" in event && moveDirection === "h" && target.type === "range") {
      return false;
    }
    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    if (!canBeScrolledInMainDirection) {
      return true;
    }
    if (canBeScrolledInMainDirection) {
      currentAxis = moveDirection;
    } else {
      currentAxis = moveDirection === "v" ? "h" : "v";
      canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    }
    if (!canBeScrolledInMainDirection) {
      return false;
    }
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY)) {
      activeAxis.current = currentAxis;
    }
    if (!currentAxis) {
      return true;
    }
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, true);
  }, []);
  var shouldPrevent = React16.useCallback(function(_event) {
    var event = _event;
    if (!lockStack.length || lockStack[lockStack.length - 1] !== Style3) {
      return;
    }
    var delta = "deltaY" in event ? getDeltaXY(event) : getTouchXY(event);
    var sourceEvent = shouldPreventQueue.current.filter(function(e) {
      return e.name === event.type && (e.target === event.target || event.target === e.shadowParent) && deltaCompare(e.delta, delta);
    })[0];
    if (sourceEvent && sourceEvent.should) {
      if (event.cancelable) {
        event.preventDefault();
      }
      return;
    }
    if (!sourceEvent) {
      var shardNodes = (lastProps.current.shards || []).map(extractRef3).filter(Boolean).filter(function(node2) {
        return node2.contains(event.target);
      });
      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
      if (shouldStop) {
        if (event.cancelable) {
          event.preventDefault();
        }
      }
    }
  }, []);
  var shouldCancel = React16.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should, shadowParent: getOutermostShadowParent(target) };
    shouldPreventQueue.current.push(event);
    setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e) {
        return e !== event;
      });
    }, 1);
  }, []);
  var scrollTouchStart = React16.useCallback(function(event) {
    touchStartRef.current = getTouchXY(event);
    activeAxis.current = void 0;
  }, []);
  var scrollWheel = React16.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  var scrollTouchMove = React16.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  React16.useEffect(function() {
    lockStack.push(Style3);
    props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    });
    document.addEventListener("wheel", shouldPrevent, nonPassive);
    document.addEventListener("touchmove", shouldPrevent, nonPassive);
    document.addEventListener("touchstart", scrollTouchStart, nonPassive);
    return function() {
      lockStack = lockStack.filter(function(inst) {
        return inst !== Style3;
      });
      document.removeEventListener("wheel", shouldPrevent, nonPassive);
      document.removeEventListener("touchmove", shouldPrevent, nonPassive);
      document.removeEventListener("touchstart", scrollTouchStart, nonPassive);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return React16.createElement(
    React16.Fragment,
    null,
    inert ? React16.createElement(Style3, { styles: generateStyle(id) }) : null,
    removeScrollBar ? React16.createElement(RemoveScrollBar, { gapMode: props.gapMode }) : null
  );
}
function getOutermostShadowParent(node2) {
  var shadowParent = null;
  while (node2 !== null) {
    if (node2 instanceof ShadowRoot) {
      shadowParent = node2.host;
      node2 = node2.host;
    }
    node2 = node2.parentNode;
  }
  return shadowParent;
}

// node_modules/react-remove-scroll/dist/es2015/sidecar.js
var sidecar_default2 = exportSidecar(effectCar, RemoveScrollSideCar);

// node_modules/react-focus-on/dist/es2015/Effect.js
var React18 = __toESM(require_react());

// node_modules/aria-hidden/dist/es2015/index.js
var getDefaultParent = function(originalTarget) {
  if (typeof document === "undefined") {
    return null;
  }
  var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
  return sampleTarget.ownerDocument.body;
};
var counterMap = /* @__PURE__ */ new WeakMap();
var uncontrolledNodes = /* @__PURE__ */ new WeakMap();
var markerMap = {};
var lockCount = 0;
var unwrapHost = function(node2) {
  return node2 && (node2.host || unwrapHost(node2.parentNode));
};
var correctTargets = function(parent, targets) {
  return targets.map(function(target) {
    if (parent.contains(target)) {
      return target;
    }
    var correctedTarget = unwrapHost(target);
    if (correctedTarget && parent.contains(correctedTarget)) {
      return correctedTarget;
    }
    console.error("aria-hidden", target, "in not contained inside", parent, ". Doing nothing");
    return null;
  }).filter(function(x) {
    return Boolean(x);
  });
};
var applyAttributeToOthers = function(originalTarget, parentNode, markerName, controlAttribute) {
  var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  if (!markerMap[markerName]) {
    markerMap[markerName] = /* @__PURE__ */ new WeakMap();
  }
  var markerCounter = markerMap[markerName];
  var hiddenNodes = [];
  var elementsToKeep = /* @__PURE__ */ new Set();
  var elementsToStop = new Set(targets);
  var keep = function(el) {
    if (!el || elementsToKeep.has(el)) {
      return;
    }
    elementsToKeep.add(el);
    keep(el.parentNode);
  };
  targets.forEach(keep);
  var deep = function(parent) {
    if (!parent || elementsToStop.has(parent)) {
      return;
    }
    Array.prototype.forEach.call(parent.children, function(node2) {
      if (elementsToKeep.has(node2)) {
        deep(node2);
      } else {
        try {
          var attr = node2.getAttribute(controlAttribute);
          var alreadyHidden = attr !== null && attr !== "false";
          var counterValue = (counterMap.get(node2) || 0) + 1;
          var markerValue = (markerCounter.get(node2) || 0) + 1;
          counterMap.set(node2, counterValue);
          markerCounter.set(node2, markerValue);
          hiddenNodes.push(node2);
          if (counterValue === 1 && alreadyHidden) {
            uncontrolledNodes.set(node2, true);
          }
          if (markerValue === 1) {
            node2.setAttribute(markerName, "true");
          }
          if (!alreadyHidden) {
            node2.setAttribute(controlAttribute, "true");
          }
        } catch (e) {
          console.error("aria-hidden: cannot operate on ", node2, e);
        }
      }
    });
  };
  deep(parentNode);
  elementsToKeep.clear();
  lockCount++;
  return function() {
    hiddenNodes.forEach(function(node2) {
      var counterValue = counterMap.get(node2) - 1;
      var markerValue = markerCounter.get(node2) - 1;
      counterMap.set(node2, counterValue);
      markerCounter.set(node2, markerValue);
      if (!counterValue) {
        if (!uncontrolledNodes.has(node2)) {
          node2.removeAttribute(controlAttribute);
        }
        uncontrolledNodes.delete(node2);
      }
      if (!markerValue) {
        node2.removeAttribute(markerName);
      }
    });
    lockCount--;
    if (!lockCount) {
      counterMap = /* @__PURE__ */ new WeakMap();
      counterMap = /* @__PURE__ */ new WeakMap();
      uncontrolledNodes = /* @__PURE__ */ new WeakMap();
      markerMap = {};
    }
  };
};
var hideOthers = function(originalTarget, parentNode, markerName) {
  if (markerName === void 0) {
    markerName = "data-aria-hidden";
  }
  var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  var activeParentNode = parentNode || getDefaultParent(originalTarget);
  if (!activeParentNode) {
    return function() {
      return null;
    };
  }
  targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll("[aria-live]")));
  return applyAttributeToOthers(targets, activeParentNode, markerName, "aria-hidden");
};

// node_modules/react-focus-on/dist/es2015/InteractivityDisabler.js
var React17 = __toESM(require_react());
var Style2 = styleSingleton();
var styles = "\n [" + focusHiddenMarker + "] {\n   pointer-events: none !important;\n }\n";
var InteractivityDisabler = function() {
  return React17.createElement(Style2, { styles });
};

// node_modules/react-focus-on/dist/es2015/Effect.js
var import_react8 = __toESM(require_react());
var extractRef4 = function(ref) {
  return "current" in ref ? ref.current : ref;
};
function Effect(_a) {
  var setLockProps = _a.setLockProps, onEscapeKey = _a.onEscapeKey, onClickOutside = _a.onClickOutside, shards = _a.shards, onActivation = _a.onActivation, onDeactivation = _a.onDeactivation, noIsolation = _a.noIsolation;
  var _b = (0, import_react8.useState)(void 0), activeNode = _b[0], setActiveNode = _b[1];
  var lastEventTarget = (0, import_react8.useRef)(null);
  var mouseTouches = (0, import_react8.useRef)(0);
  React18.useEffect(function() {
    var onKeyDown = function(event) {
      if (!event.defaultPrevented) {
        if ((event.code === "Escape" || event.key === "Escape" || event.keyCode === 27) && onEscapeKey) {
          onEscapeKey(event);
        }
      }
    };
    var onMouseDown = function(event) {
      if (event.defaultPrevented || event.target === lastEventTarget.current || event instanceof MouseEvent && event.button !== 0) {
        return;
      }
      if (shards && shards.map(extractRef4).some(function(node2) {
        return node2 && node2.contains(event.target) || node2 === event.target;
      })) {
        return;
      }
      if (onClickOutside) {
        onClickOutside(event);
      }
    };
    var onTouchStart = function(event) {
      onMouseDown(event);
      mouseTouches.current = event.touches.length;
    };
    var onTouchEnd = function(event) {
      mouseTouches.current = event.touches.length;
    };
    if (activeNode) {
      document.addEventListener("keydown", onKeyDown);
      document.addEventListener("mousedown", onMouseDown);
      document.addEventListener("touchstart", onTouchStart);
      document.addEventListener("touchend", onTouchEnd);
      return function() {
        document.removeEventListener("keydown", onKeyDown);
        document.removeEventListener("mousedown", onMouseDown);
        document.removeEventListener("touchstart", onTouchStart);
        document.removeEventListener("touchend", onTouchEnd);
      };
    }
  }, [activeNode, onClickOutside, onEscapeKey]);
  (0, import_react8.useEffect)(function() {
    if (activeNode) {
      if (onActivation) {
        onActivation(activeNode);
      }
      return function() {
        if (onDeactivation) {
          onDeactivation();
        }
      };
    }
  }, [!!activeNode]);
  (0, import_react8.useEffect)(function() {
    var _undo = function() {
      return null;
    };
    var unmounted = false;
    var onNodeActivation = function(node2) {
      if (!noIsolation) {
        _undo = hideOthers(__spreadArrays([node2], (shards || []).map(extractRef4)), document.body, focusHiddenMarker);
      }
      setActiveNode(function() {
        return node2;
      });
    };
    var onNodeDeactivation = function() {
      _undo();
      if (!unmounted) {
        setActiveNode(null);
      }
    };
    setLockProps({
      onMouseDown: function(e) {
        lastEventTarget.current = e.target;
      },
      onTouchStart: function(e) {
        lastEventTarget.current = e.target;
      },
      onActivation: onNodeActivation,
      onDeactivation: onNodeDeactivation
    });
    return function() {
      unmounted = true;
      setLockProps(false);
    };
  }, []);
  return React18.createElement(InteractivityDisabler, null);
}

// node_modules/react-focus-on/dist/es2015/sidecar.js
var sidecar_default3 = exportSidecar(effectCar2, Effect);

// node_modules/react-focus-on/dist/es2015/Combination.js
var RequireSideCar = function(props) {
  return React19.createElement(sidecar_default3, __assign({}, props));
};
var FocusOn2 = React19.forwardRef(function(props, ref) {
  return React19.createElement(FocusOn, __assign({}, props, { ref, sideCar: RequireSideCar }));
});

// node_modules/react-full-screen/dist/index.modern.js
var import_react9 = __toESM(require_react());

// node_modules/fscreen/dist/fscreen.esm.js
var key = {
  fullscreenEnabled: 0,
  fullscreenElement: 1,
  requestFullscreen: 2,
  exitFullscreen: 3,
  fullscreenchange: 4,
  fullscreenerror: 5,
  fullscreen: 6
};
var webkit = [
  "webkitFullscreenEnabled",
  "webkitFullscreenElement",
  "webkitRequestFullscreen",
  "webkitExitFullscreen",
  "webkitfullscreenchange",
  "webkitfullscreenerror",
  "-webkit-full-screen"
];
var moz = [
  "mozFullScreenEnabled",
  "mozFullScreenElement",
  "mozRequestFullScreen",
  "mozCancelFullScreen",
  "mozfullscreenchange",
  "mozfullscreenerror",
  "-moz-full-screen"
];
var ms = [
  "msFullscreenEnabled",
  "msFullscreenElement",
  "msRequestFullscreen",
  "msExitFullscreen",
  "MSFullscreenChange",
  "MSFullscreenError",
  "-ms-fullscreen"
];
var document2 = typeof window !== "undefined" && typeof window.document !== "undefined" ? window.document : {};
var vendor = "fullscreenEnabled" in document2 && Object.keys(key) || webkit[0] in document2 && webkit || moz[0] in document2 && moz || ms[0] in document2 && ms || [];

// node_modules/react-full-screen/dist/index.modern.js
var FullScreen = function FullScreen2(_ref) {
  var handle = _ref.handle, onChange = _ref.onChange, children2 = _ref.children, className2 = _ref.className;
  var classNames2 = [];
  if (className2) {
    classNames2.push(className2);
  }
  classNames2.push("fullscreen");
  if (handle.active) {
    classNames2.push("fullscreen-enabled");
  }
  (0, import_react9.useEffect)(function() {
    if (onChange) {
      onChange(handle.active, handle);
    }
  }, [handle.active]);
  return import_react9.default.createElement("div", {
    className: classNames2.join(" "),
    ref: handle.node,
    style: handle.active ? {
      height: "100%",
      width: "100%"
    } : void 0
  }, children2);
};

// node_modules/react-images/dist/react-images.es.js
var import_a11y_focus_store = __toESM(require_a11y_focus_store());

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r)
    return {};
  var t = {};
  for (var n in r)
    if ({}.hasOwnProperty.call(r, n)) {
      if (e.indexOf(n) >= 0)
        continue;
      t[n] = r[n];
    }
  return t;
}

// node_modules/react-transition-group/esm/CSSTransition.js
var import_prop_types9 = __toESM(require_prop_types());

// node_modules/dom-helpers/esm/hasClass.js
function hasClass(element, className2) {
  if (element.classList)
    return !!className2 && element.classList.contains(className2);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className2 + " ") !== -1;
}

// node_modules/dom-helpers/esm/addClass.js
function addClass(element, className2) {
  if (element.classList)
    element.classList.add(className2);
  else if (!hasClass(element, className2))
    if (typeof element.className === "string")
      element.className = element.className + " " + className2;
    else
      element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className2);
}

// node_modules/dom-helpers/esm/removeClass.js
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function removeClass(element, className2) {
  if (element.classList) {
    element.classList.remove(className2);
  } else if (typeof element.className === "string") {
    element.className = replaceClassName(element.className, className2);
  } else {
    element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className2));
  }
}

// node_modules/react-transition-group/esm/CSSTransition.js
var import_react12 = __toESM(require_react());

// node_modules/react-transition-group/esm/Transition.js
var import_prop_types8 = __toESM(require_prop_types());
var import_react11 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/react-transition-group/esm/config.js
var config_default = {
  disabled: false
};

// node_modules/react-transition-group/esm/utils/PropTypes.js
var import_prop_types7 = __toESM(require_prop_types());
var timeoutsShape = true ? import_prop_types7.default.oneOfType([import_prop_types7.default.number, import_prop_types7.default.shape({
  enter: import_prop_types7.default.number,
  exit: import_prop_types7.default.number,
  appear: import_prop_types7.default.number
}).isRequired]) : null;
var classNamesShape = true ? import_prop_types7.default.oneOfType([import_prop_types7.default.string, import_prop_types7.default.shape({
  enter: import_prop_types7.default.string,
  exit: import_prop_types7.default.string,
  active: import_prop_types7.default.string
}), import_prop_types7.default.shape({
  enter: import_prop_types7.default.string,
  enterDone: import_prop_types7.default.string,
  enterActive: import_prop_types7.default.string,
  exit: import_prop_types7.default.string,
  exitDone: import_prop_types7.default.string,
  exitActive: import_prop_types7.default.string
})]) : null;

// node_modules/react-transition-group/esm/TransitionGroupContext.js
var import_react10 = __toESM(require_react());
var TransitionGroupContext_default = import_react10.default.createContext(null);

// node_modules/react-transition-group/esm/utils/reflow.js
var forceReflow = function forceReflow2(node2) {
  return node2.scrollTop;
};

// node_modules/react-transition-group/esm/Transition.js
var UNMOUNTED = "unmounted";
var EXITED = "exited";
var ENTERING = "entering";
var ENTERED = "entered";
var EXITING = "exiting";
var Transition = function(_React$Component) {
  _inheritsLoose(Transition2, _React$Component);
  function Transition2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context;
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }
  Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  };
  var _proto = Transition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout2 = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout2;
    if (timeout2 != null && typeof timeout2 !== "number") {
      exit = timeout2.exit;
      enter = timeout2.enter;
      appear = timeout2.appear !== void 0 ? timeout2.appear : enter;
    }
    return {
      exit,
      enter,
      appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var node2 = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom.default.findDOMNode(this);
          if (node2)
            forceReflow(node2);
        }
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;
    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref2 = this.props.nodeRef ? [appearing] : [import_react_dom.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
    if (!mounting && !enter || config_default.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function() {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function() {
      _this2.props.onEntering(maybeNode, maybeAppearing);
      _this2.onTransitionEnd(enterTimeout, function() {
        _this2.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? void 0 : import_react_dom.default.findDOMNode(this);
    if (!exit || config_default.disabled) {
      this.safeSetState({
        status: EXITED
      }, function() {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function() {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function() {
        _this3.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active = true;
    this.nextCallback = function(event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };
    this.nextCallback.cancel = function() {
      active = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd(timeout2, handler) {
    this.setNextCallback(handler);
    var node2 = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom.default.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout2 == null && !this.props.addEndListener;
    if (!node2 || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node2, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout2 != null) {
      setTimeout(this.nextCallback, timeout2);
    }
  };
  _proto.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props, children2 = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      import_react11.default.createElement(TransitionGroupContext_default.Provider, {
        value: null
      }, typeof children2 === "function" ? children2(status, childProps) : import_react11.default.cloneElement(import_react11.default.Children.only(children2), childProps))
    );
  };
  return Transition2;
}(import_react11.default.Component);
Transition.contextType = TransitionGroupContext_default;
Transition.propTypes = true ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: import_prop_types8.default.shape({
    current: typeof Element === "undefined" ? import_prop_types8.default.any : function(propValue, key2, componentName, location, propFullName, secret) {
      var value = propValue[key2];
      return import_prop_types8.default.instanceOf(value && "ownerDocument" in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key2, componentName, location, propFullName, secret);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: import_prop_types8.default.oneOfType([import_prop_types8.default.func.isRequired, import_prop_types8.default.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: import_prop_types8.default.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: import_prop_types8.default.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: import_prop_types8.default.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: import_prop_types8.default.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: import_prop_types8.default.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: import_prop_types8.default.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = timeoutsShape;
    if (!props.addEndListener)
      pt = pt.isRequired;
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return pt.apply(void 0, [props].concat(args));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: import_prop_types8.default.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: import_prop_types8.default.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types8.default.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: import_prop_types8.default.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: import_prop_types8.default.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: import_prop_types8.default.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: import_prop_types8.default.func
} : {};
function noop() {
}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
var Transition_default = Transition;

// node_modules/react-transition-group/esm/CSSTransition.js
var _addClass = function addClass2(node2, classes) {
  return node2 && classes && classes.split(" ").forEach(function(c) {
    return addClass(node2, c);
  });
};
var removeClass2 = function removeClass3(node2, classes) {
  return node2 && classes && classes.split(" ").forEach(function(c) {
    return removeClass(node2, c);
  });
};
var CSSTransition = function(_React$Component) {
  _inheritsLoose(CSSTransition2, _React$Component);
  function CSSTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };
    _this.onEnter = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node2 = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
      _this.removeClasses(node2, "exit");
      _this.addClass(node2, appearing ? "appear" : "enter", "base");
      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };
    _this.onEntering = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node2 = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
      var type = appearing ? "appear" : "enter";
      _this.addClass(node2, type, "active");
      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };
    _this.onEntered = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node2 = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
      var type = appearing ? "appear" : "enter";
      _this.removeClasses(node2, type);
      _this.addClass(node2, type, "done");
      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };
    _this.onExit = function(maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node2 = _this$resolveArgument4[0];
      _this.removeClasses(node2, "appear");
      _this.removeClasses(node2, "enter");
      _this.addClass(node2, "exit", "base");
      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };
    _this.onExiting = function(maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node2 = _this$resolveArgument5[0];
      _this.addClass(node2, "exit", "active");
      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };
    _this.onExited = function(maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node2 = _this$resolveArgument6[0];
      _this.removeClasses(node2, "exit");
      _this.addClass(node2, "exit", "done");
      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };
    _this.resolveArguments = function(maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
    };
    _this.getClassNames = function(type) {
      var classNames2 = _this.props.classNames;
      var isStringClassNames = typeof classNames2 === "string";
      var prefix = isStringClassNames && classNames2 ? classNames2 + "-" : "";
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames2[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames2[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames2[type + "Done"];
      return {
        baseClassName,
        activeClassName,
        doneClassName
      };
    };
    return _this;
  }
  var _proto = CSSTransition2.prototype;
  _proto.addClass = function addClass3(node2, type, phase) {
    var className2 = this.getClassNames(type)[phase + "ClassName"];
    var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
    if (type === "appear" && phase === "done" && doneClassName) {
      className2 += " " + doneClassName;
    }
    if (phase === "active") {
      if (node2)
        forceReflow(node2);
    }
    if (className2) {
      this.appliedClasses[type][phase] = className2;
      _addClass(node2, className2);
    }
  };
  _proto.removeClasses = function removeClasses(node2, type) {
    var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};
    if (baseClassName) {
      removeClass2(node2, baseClassName);
    }
    if (activeClassName) {
      removeClass2(node2, activeClassName);
    }
    if (doneClassName) {
      removeClass2(node2, doneClassName);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, _ = _this$props.classNames, props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
    return import_react12.default.createElement(Transition_default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };
  return CSSTransition2;
}(import_react12.default.Component);
CSSTransition.defaultProps = {
  classNames: ""
};
CSSTransition.propTypes = true ? _extends({}, Transition_default.propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: classNamesShape,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: import_prop_types9.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types9.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: import_prop_types9.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExit: import_prop_types9.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: import_prop_types9.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExited: import_prop_types9.default.func
}) : {};

// node_modules/react-transition-group/esm/ReplaceTransition.js
var import_prop_types11 = __toESM(require_prop_types());
var import_react15 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(e) {
  if (void 0 === e)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}

// node_modules/react-transition-group/esm/TransitionGroup.js
var import_prop_types10 = __toESM(require_prop_types());
var import_react14 = __toESM(require_react());

// node_modules/react-transition-group/esm/utils/ChildMapping.js
var import_react13 = __toESM(require_react());
function getChildMapping(children2, mapFn) {
  var mapper = function mapper2(child) {
    return mapFn && (0, import_react13.isValidElement)(child) ? mapFn(child) : child;
  };
  var result = /* @__PURE__ */ Object.create(null);
  if (children2)
    import_react13.Children.map(children2, function(c) {
      return c;
    }).forEach(function(child) {
      result[child.key] = mapper(child);
    });
  return result;
}
function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};
  function getValueForKey(key2) {
    return key2 in next ? next[key2] : prev[key2];
  }
  var nextKeysPending = /* @__PURE__ */ Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }
  return childMapping;
}
function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function(child) {
    return (0, import_react13.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, "appear", props),
      enter: getProp(child, "enter", props),
      exit: getProp(child, "exit", props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children2 = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children2).forEach(function(key2) {
    var child = children2[key2];
    if (!(0, import_react13.isValidElement)(child))
      return;
    var hasPrev = key2 in prevChildMapping;
    var hasNext = key2 in nextChildMapping;
    var prevChild = prevChildMapping[key2];
    var isLeaving = (0, import_react13.isValidElement)(prevChild) && !prevChild.props.in;
    if (hasNext && (!hasPrev || isLeaving)) {
      children2[key2] = (0, import_react13.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      children2[key2] = (0, import_react13.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, import_react13.isValidElement)(prevChild)) {
      children2[key2] = (0, import_react13.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    }
  });
  return children2;
}

// node_modules/react-transition-group/esm/TransitionGroup.js
var values = Object.values || function(obj) {
  return Object.keys(obj).map(function(k) {
    return obj[k];
  });
};
var defaultProps = {
  component: "div",
  childFactory: function childFactory(child) {
    return child;
  }
};
var TransitionGroup = function(_React$Component) {
  _inheritsLoose(TransitionGroup2, _React$Component);
  function TransitionGroup2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited,
      firstRender: true
    };
    return _this;
  }
  var _proto = TransitionGroup2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };
  _proto.handleExited = function handleExited(child, node2) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping)
      return;
    if (child.props.onExited) {
      child.props.onExited(node2);
    }
    if (this.mounted) {
      this.setState(function(state) {
        var children2 = _extends({}, state.children);
        delete children2[child.key];
        return {
          children: children2
        };
      });
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, Component2 = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children2 = values(this.state.children).map(childFactory2);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component2 === null) {
      return import_react14.default.createElement(TransitionGroupContext_default.Provider, {
        value: contextValue
      }, children2);
    }
    return import_react14.default.createElement(TransitionGroupContext_default.Provider, {
      value: contextValue
    }, import_react14.default.createElement(Component2, props, children2));
  };
  return TransitionGroup2;
}(import_react14.default.Component);
TransitionGroup.propTypes = true ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: import_prop_types10.default.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: import_prop_types10.default.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: import_prop_types10.default.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: import_prop_types10.default.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: import_prop_types10.default.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: import_prop_types10.default.func
} : {};
TransitionGroup.defaultProps = defaultProps;
var TransitionGroup_default = TransitionGroup;

// node_modules/react-transition-group/esm/ReplaceTransition.js
var ReplaceTransition = function(_React$Component) {
  _inheritsLoose(ReplaceTransition2, _React$Component);
  function ReplaceTransition2() {
    var _this;
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
    _this.handleEnter = function() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return _this.handleLifecycle("onEnter", 0, args);
    };
    _this.handleEntering = function() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      return _this.handleLifecycle("onEntering", 0, args);
    };
    _this.handleEntered = function() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      return _this.handleLifecycle("onEntered", 0, args);
    };
    _this.handleExit = function() {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      return _this.handleLifecycle("onExit", 1, args);
    };
    _this.handleExiting = function() {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      return _this.handleLifecycle("onExiting", 1, args);
    };
    _this.handleExited = function() {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      return _this.handleLifecycle("onExited", 1, args);
    };
    return _this;
  }
  var _proto = ReplaceTransition2.prototype;
  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;
    var children2 = this.props.children;
    var child = import_react15.default.Children.toArray(children2)[idx];
    if (child.props[handler])
      (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) {
      var maybeNode = child.props.nodeRef ? void 0 : import_react_dom2.default.findDOMNode(this);
      this.props[handler](maybeNode);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);
    var _React$Children$toArr = import_react15.default.Children.toArray(children2), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return import_react15.default.createElement(TransitionGroup_default, props, inProp ? import_react15.default.cloneElement(first, {
      key: "first",
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : import_react15.default.cloneElement(second, {
      key: "second",
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };
  return ReplaceTransition2;
}(import_react15.default.Component);
ReplaceTransition.propTypes = true ? {
  in: import_prop_types11.default.bool.isRequired,
  children: function children(props, propName) {
    if (import_react15.default.Children.count(props[propName]) !== 2)
      return new Error('"' + propName + '" must be exactly two transition components.');
    return null;
  }
} : {};

// node_modules/react-transition-group/esm/SwitchTransition.js
var import_react16 = __toESM(require_react());
var import_prop_types12 = __toESM(require_prop_types());
var _leaveRenders;
var _enterRenders;
function areChildrenDifferent(oldChildren, newChildren) {
  if (oldChildren === newChildren)
    return false;
  if (import_react16.default.isValidElement(oldChildren) && import_react16.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
    return false;
  }
  return true;
}
var modes = {
  out: "out-in",
  in: "in-out"
};
var callHook = function callHook2(element, name, cb) {
  return function() {
    var _element$props;
    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);
    cb();
  };
};
var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function(_ref) {
  var current = _ref.current, changeState = _ref.changeState;
  return import_react16.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERING, null);
    })
  });
}, _leaveRenders[modes.in] = function(_ref2) {
  var current = _ref2.current, changeState = _ref2.changeState, children2 = _ref2.children;
  return [current, import_react16.default.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERING);
    })
  })];
}, _leaveRenders);
var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function(_ref3) {
  var children2 = _ref3.children, changeState = _ref3.changeState;
  return import_react16.default.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERED, import_react16.default.cloneElement(children2, {
        in: true
      }));
    })
  });
}, _enterRenders[modes.in] = function(_ref4) {
  var current = _ref4.current, children2 = _ref4.children, changeState = _ref4.changeState;
  return [import_react16.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERED, import_react16.default.cloneElement(children2, {
        in: true
      }));
    })
  }), import_react16.default.cloneElement(children2, {
    in: true
  })];
}, _enterRenders);
var SwitchTransition = function(_React$Component) {
  _inheritsLoose(SwitchTransition2, _React$Component);
  function SwitchTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      status: ENTERED,
      current: null
    };
    _this.appeared = false;
    _this.changeState = function(status, current) {
      if (current === void 0) {
        current = _this.state.current;
      }
      _this.setState({
        status,
        current
      });
    };
    return _this;
  }
  var _proto = SwitchTransition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };
  SwitchTransition2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.children == null) {
      return {
        current: null
      };
    }
    if (state.status === ENTERING && props.mode === modes.in) {
      return {
        status: ENTERING
      };
    }
    if (state.current && areChildrenDifferent(state.current, props.children)) {
      return {
        status: EXITING
      };
    }
    return {
      current: import_react16.default.cloneElement(props.children, {
        in: true
      })
    };
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, mode = _this$props.mode, _this$state = this.state, status = _this$state.status, current = _this$state.current;
    var data = {
      children: children2,
      current,
      changeState: this.changeState,
      status
    };
    var component;
    switch (status) {
      case ENTERING:
        component = enterRenders[mode](data);
        break;
      case EXITING:
        component = leaveRenders[mode](data);
        break;
      case ENTERED:
        component = current;
    }
    return import_react16.default.createElement(TransitionGroupContext_default.Provider, {
      value: {
        isMounting: !this.appeared
      }
    }, component);
  };
  return SwitchTransition2;
}(import_react16.default.Component);
SwitchTransition.propTypes = true ? {
  /**
   * Transition modes.
   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.
   * `in-out`: New element transitions in first, then when complete, the current element transitions out.
   *
   * @type {'out-in'|'in-out'}
   */
  mode: import_prop_types12.default.oneOf([modes.in, modes.out]),
  /**
   * Any `Transition` or `CSSTransition` component.
   */
  children: import_prop_types12.default.oneOfType([import_prop_types12.default.element.isRequired])
} : {};
SwitchTransition.defaultProps = {
  mode: modes.out
};

// node_modules/react-images/dist/react-images.es.js
var classCallCheck = function(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
var createClass = /* @__PURE__ */ function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var defineProperty = function(obj, key2, value) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key2] = value;
  }
  return obj;
};
var _extends2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key2 in source) {
      if (Object.prototype.hasOwnProperty.call(source, key2)) {
        target[key2] = source[key2];
      }
    }
  }
  return target;
};
var inherits = function(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};
var objectWithoutProperties = function(obj, keys) {
  var target = {};
  for (var i in obj) {
    if (keys.indexOf(i) >= 0)
      continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i))
      continue;
    target[i] = obj[i];
  }
  return target;
};
var possibleConstructorReturn = function(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
};
var Base = function Base2(_ref) {
  var css = _ref.css, innerRef = _ref.innerRef, Tag = _ref.tag, props = objectWithoutProperties(_ref, ["css", "innerRef", "tag"]);
  return (0, import_glam.default)(Tag, _extends2({
    ref: innerRef,
    css: _extends2({
      boxSizing: "border-box"
    }, css)
  }, props));
};
var Button = function Button2(props) {
  return (0, import_glam.default)(Base, _extends2({ tag: "button" }, props));
};
var Div = function Div2(props) {
  return (0, import_glam.default)(Base, _extends2({ tag: "div" }, props));
};
var Img = function Img2(props) {
  return (0, import_glam.default)(Base, _extends2({ tag: "img" }, props));
};
var Nav = function Nav2(props) {
  return (0, import_glam.default)(Base, _extends2({ tag: "nav" }, props));
};
var Span = function Span2(props) {
  return (0, import_glam.default)(Base, _extends2({ tag: "span" }, props));
};
var CLASS_PREFIX = "react-images";
function className(name, state) {
  var arr = Array.isArray(name) ? name : [name];
  if (state && typeof name === "string") {
    for (var _key in state) {
      if (state.hasOwnProperty(_key) && state[_key]) {
        arr.push(name + "--" + _key);
      }
    }
  }
  return arr.map(function(cn) {
    return CLASS_PREFIX + "__" + cn;
  }).join(" ");
}
function isTouch() {
  try {
    document.createEvent("TouchEvent");
    return true;
  } catch (e) {
    return false;
  }
}
var containerCSS = function containerCSS2(_ref) {
  var isFullscreen = _ref.isFullscreen;
  return {
    backgroundColor: isFullscreen ? "black" : null,
    display: "flex ",
    flexDirection: "column",
    height: "100%"
  };
};
var Container = function Container2(props) {
  var children2 = props.children, getStyles2 = props.getStyles, isFullscreen = props.isFullscreen, isModal = props.isModal, innerProps = props.innerProps;
  return (0, import_glam.default)(
    Div,
    _extends2({ css: getStyles2("container", props), className: className("container", { isFullscreen, isModal }) }, innerProps),
    children2
  );
};
var smallDevice = "@media (max-width: 769px)";
var componentBaseClassNames = {
  Header: "header",
  Footer: "footer",
  View: "view",
  Track: "track",
  Positioner: "positioner"
};
var footerCSS = function footerCSS2(_ref) {
  var isModal = _ref.isModal, interactionIsIdle = _ref.interactionIsIdle;
  return defineProperty({
    alignItems: "top",
    bottom: isModal ? 0 : null,
    color: isModal ? "rgba(255, 255, 255, 0.9)" : "#666",
    display: "flex ",
    flex: "0 0 auto",
    fontSize: 13,
    justifyContent: "space-between",
    left: isModal ? 0 : null,
    opacity: interactionIsIdle && isModal ? 0 : 1,
    padding: isModal ? "30px 20px 20px" : "10px 0",
    position: isModal ? "absolute" : null,
    right: isModal ? 0 : null,
    transform: isModal ? "translateY(" + (interactionIsIdle ? 10 : 0) + "px)" : null,
    transition: "opacity 300ms, transform 300ms",
    zIndex: isModal ? 1 : null,
    "& *:focus": {
      outline: "1.5px solid orange"
    }
  }, smallDevice, {
    padding: isModal ? "20px 15px 15px" : "5px 0"
  });
};
var footerBaseClassName = componentBaseClassNames.Footer;
var Footer = function Footer2(props) {
  var components = props.components, getStyles2 = props.getStyles, innerProps = props.innerProps, isFullscreen = props.isFullscreen, isModal = props.isModal;
  var style = isModal ? { background: "linear-gradient(rgba(0,0,0,0), rgba(0,0,0,0.33))" } : null;
  var state = { isFullscreen, isModal };
  var cn = {
    container: className(footerBaseClassName, state),
    caption: className("footer__caption", state),
    count: className("footer__count", state)
  };
  var css = {
    container: getStyles2(footerBaseClassName, props),
    caption: getStyles2("footerCaption", props),
    count: getStyles2("footerCount", props)
  };
  var Caption = components.Caption, Count = components.Count;
  return (0, import_glam.default)(
    Div,
    _extends2({
      css: css.container,
      className: cn.container,
      style
    }, innerProps),
    (0, import_glam.default)(Caption, props),
    (0, import_glam.default)(Count, props)
  );
};
var footerCaptionCSS = function footerCaptionCSS2() {
  return {};
};
var FooterCaption = function FooterCaption2(props) {
  var currentView = props.currentView, getStyles2 = props.getStyles, isFullscreen = props.isFullscreen, isModal = props.isModal;
  var caption = currentView.caption;
  var state = { isFullscreen, isModal };
  return (0, import_glam.default)(
    Span,
    { css: getStyles2("footerCaption", props), className: className("footer__caption", state) },
    typeof caption === "string" ? html_react_parser_default("<span>" + caption + "</span>") : caption
  );
};
var footerCountCSS = function footerCountCSS2() {
  return { flexShrink: 0, marginLeft: "1em" };
};
var FooterCount = function FooterCount2(props) {
  var currentIndex = props.currentIndex, getStyles2 = props.getStyles, isFullscreen = props.isFullscreen, isModal = props.isModal, views = props.views;
  var state = { isFullscreen, isModal };
  var activeView = currentIndex + 1;
  var totalViews = views.length;
  if (!activeView || !totalViews)
    return null;
  return (0, import_glam.default)(
    Span,
    { css: getStyles2("footerCount", props), className: className("footer__count", state) },
    activeView,
    " of ",
    totalViews
  );
};
var Svg = function Svg2(_ref) {
  var size = _ref.size, props = objectWithoutProperties(_ref, ["size"]);
  return (0, import_glam.default)("svg", _extends2({
    role: "presentation",
    viewBox: "0 0 24 24",
    css: {
      display: "inline-block",
      fill: "currentColor",
      height: size,
      stroke: "currentColor",
      strokeWidth: 0,
      width: size
    }
  }, props));
};
var ChevronLeft = function ChevronLeft2(_ref2) {
  var _ref2$size = _ref2.size, size = _ref2$size === void 0 ? 32 : _ref2$size, props = objectWithoutProperties(_ref2, ["size"]);
  return (0, import_glam.default)(
    Svg,
    _extends2({ size }, props),
    (0, import_glam.default)("path", { d: "M15.422 16.078l-1.406 1.406-6-6 6-6 1.406 1.406-4.594 4.594z" })
  );
};
var ChevronRight = function ChevronRight2(_ref3) {
  var _ref3$size = _ref3.size, size = _ref3$size === void 0 ? 32 : _ref3$size, props = objectWithoutProperties(_ref3, ["size"]);
  return (0, import_glam.default)(
    Svg,
    _extends2({ size }, props),
    (0, import_glam.default)("path", { d: "M9.984 6l6 6-6 6-1.406-1.406 4.594-4.594-4.594-4.594z" })
  );
};
var Close = function Close2(_ref4) {
  var _ref4$size = _ref4.size, size = _ref4$size === void 0 ? 32 : _ref4$size, props = objectWithoutProperties(_ref4, ["size"]);
  return (0, import_glam.default)(
    Svg,
    _extends2({ size }, props),
    (0, import_glam.default)("path", { d: "M18.984 6.422l-5.578 5.578 5.578 5.578-1.406 1.406-5.578-5.578-5.578 5.578-1.406-1.406 5.578-5.578-5.578-5.578 1.406-1.406 5.578 5.578 5.578-5.578z" })
  );
};
var FullscreenEnter = function FullscreenEnter2(_ref5) {
  var _ref5$size = _ref5.size, size = _ref5$size === void 0 ? 32 : _ref5$size, props = objectWithoutProperties(_ref5, ["size"]);
  return (0, import_glam.default)(
    Svg,
    _extends2({ size }, props),
    (0, import_glam.default)("path", { d: "M14.016 5.016h4.969v4.969h-1.969v-3h-3v-1.969zM17.016 17.016v-3h1.969v4.969h-4.969v-1.969h3zM5.016 9.984v-4.969h4.969v1.969h-3v3h-1.969zM6.984 14.016v3h3v1.969h-4.969v-4.969h1.969z" })
  );
};
var FullscreenExit = function FullscreenExit2(_ref6) {
  var _ref6$size = _ref6.size, size = _ref6$size === void 0 ? 32 : _ref6$size, props = objectWithoutProperties(_ref6, ["size"]);
  return (0, import_glam.default)(
    Svg,
    _extends2({ size }, props),
    (0, import_glam.default)("path", { d: "M15.984 8.016h3v1.969h-4.969v-4.969h1.969v3zM14.016 18.984v-4.969h4.969v1.969h-3v3h-1.969zM8.016 8.016v-3h1.969v4.969h-4.969v-1.969h3zM5.016 15.984v-1.969h4.969v4.969h-1.969v-3h-3z" })
  );
};
var headerCSS = function headerCSS2(_ref) {
  var interactionIsIdle = _ref.interactionIsIdle;
  return {
    alignItems: "center",
    display: "flex ",
    flex: "0 0 auto",
    justifyContent: "space-between",
    opacity: interactionIsIdle ? 0 : 1,
    padding: 10,
    paddingBottom: 20,
    position: "absolute",
    transform: "translateY(" + (interactionIsIdle ? -10 : 0) + "px)",
    transition: "opacity 300ms, transform 300ms",
    top: 0,
    left: 0,
    right: 0,
    zIndex: 1,
    "& *:focus": {
      outline: "1.5px solid orange"
    }
  };
};
var headerBaseClassName = componentBaseClassNames.Header;
var Header = function Header2(props) {
  var components = props.components, getStyles2 = props.getStyles, getCloseLabel2 = props.getCloseLabel, getFullscreenLabel2 = props.getFullscreenLabel, innerProps = props.innerProps, isModal = props.isModal, modalProps = props.modalProps;
  if (!isModal)
    return null;
  var allowFullscreen = modalProps.allowFullscreen, isFullscreen = modalProps.isFullscreen, onClose = modalProps.onClose, toggleFullscreen = modalProps.toggleFullscreen;
  var FsIcon = isFullscreen ? FullscreenExit : FullscreenEnter;
  var CloseButton = components.CloseButton, FullscreenButton = components.FullscreenButton;
  var state = { isFullscreen, isModal };
  return (0, import_glam.default)(
    Div,
    _extends2({
      css: getStyles2(headerBaseClassName, props),
      className: className(headerBaseClassName, state),
      style: {
        background: "linear-gradient(rgba(0,0,0,0.33), rgba(0,0,0,0))"
      }
    }, innerProps),
    (0, import_glam.default)("span", null),
    (0, import_glam.default)(
      "span",
      null,
      allowFullscreen ? (0, import_glam.default)(
        FullscreenButton,
        {
          getStyles: getStyles2,
          innerProps: {
            onClick: toggleFullscreen,
            title: getFullscreenLabel2(state)
          }
        },
        (0, import_glam.default)(FsIcon, { size: 32 })
      ) : null,
      (0, import_glam.default)(
        CloseButton,
        {
          getStyles: getStyles2,
          innerProps: {
            onClick: onClose,
            title: getCloseLabel2(state)
          }
        },
        (0, import_glam.default)(Close, { size: 32 })
      )
    )
  );
};
var headerButtonCSS = function headerButtonCSS2() {
  return {
    alignItems: "center",
    background: 0,
    border: 0,
    color: "rgba(255, 255, 255, 0.75)",
    cursor: "pointer",
    display: "inline-flex ",
    height: 44,
    justifyContent: "center",
    outline: 0,
    padding: 0,
    position: "relative",
    width: 44,
    "&:hover": {
      color: "white"
    }
  };
};
var headerFullscreenCSS = headerButtonCSS;
var HeaderFullscreen = function HeaderFullscreen2(props) {
  var children2 = props.children, getStyles2 = props.getStyles, innerProps = props.innerProps;
  return (0, import_glam.default)(
    Button,
    _extends2({ css: getStyles2("headerFullscreen", props), className: className(["header_button", "header_button--fullscreen"]), type: "button" }, innerProps),
    children2
  );
};
var headerCloseCSS = headerButtonCSS;
var HeaderClose = function HeaderClose2(props) {
  var children2 = props.children, getStyles2 = props.getStyles, innerProps = props.innerProps;
  return (0, import_glam.default)(
    Button,
    _extends2({ css: getStyles2("headerClose", props), className: className(["header_button", "header_button--close"]), type: "button" }, innerProps),
    children2
  );
};
var navigationCSS = function navigationCSS2(_ref) {
  var interactionIsIdle = _ref.interactionIsIdle;
  return {
    display: "flex ",
    alignItems: "center",
    justifyContent: "space-between",
    opacity: interactionIsIdle ? 0 : 1,
    transition: "opacity 300ms",
    "& *:focus": {
      outline: "1.5px solid orange"
    }
  };
};
var Navigation = function Navigation2(props) {
  var children2 = props.children, getStyles2 = props.getStyles, isFullscreen = props.isFullscreen, isModal = props.isModal, showNavigationOnTouchDevice = props.showNavigationOnTouchDevice;
  return !isTouch() || isTouch() && showNavigationOnTouchDevice ? (0, import_glam.default)(
    Nav,
    { css: getStyles2("navigation", props), className: className("navigation", { isFullscreen, isModal }) },
    children2
  ) : null;
};
var BUTTON_SIZE = 50;
var navigationItemCSS = function navigationItemCSS2(_ref2) {
  var _ref3;
  var align = _ref2.align;
  return _ref3 = {
    alignItems: "center",
    background: "rgba(255, 255, 255, 0.2)",
    border: 0,
    borderRadius: "50%",
    color: "white",
    cursor: "pointer",
    display: "flex ",
    fontSize: "inherit",
    height: BUTTON_SIZE,
    justifyContent: "center",
    marginTop: -(BUTTON_SIZE / 2),
    outline: 0,
    position: "absolute",
    top: "50%",
    transition: "background-color 200ms",
    width: BUTTON_SIZE
  }, defineProperty(_ref3, align, 20), defineProperty(_ref3, "&:hover", {
    background: "rgba(255, 255, 255, 0.3)"
  }), defineProperty(_ref3, "&:active", {
    background: "rgba(255, 255, 255, 0.2)"
  }), _ref3;
};
var navigationPrevCSS = navigationItemCSS;
var NavigationPrev = function NavigationPrev2(props) {
  var _props$children = props.children, children2 = _props$children === void 0 ? (0, import_glam.default)(ChevronLeft, { size: 48 }) : _props$children, getStyles2 = props.getStyles, innerProps = props.innerProps;
  return (0, import_glam.default)(
    Button,
    _extends2({ type: "button", css: getStyles2("navigationPrev", props) }, innerProps),
    children2
  );
};
var navigationNextCSS = navigationItemCSS;
var NavigationNext = function NavigationNext2(props) {
  var _props$children2 = props.children, children2 = _props$children2 === void 0 ? (0, import_glam.default)(ChevronRight, { size: 48 }) : _props$children2, getStyles2 = props.getStyles, innerProps = props.innerProps;
  return (0, import_glam.default)(
    Button,
    _extends2({ type: "button", css: getStyles2("navigationNext", props) }, innerProps),
    children2
  );
};
var blanketCSS = function blanketCSS2(_ref) {
  var isFullscreen = _ref.isFullscreen;
  return {
    backgroundColor: isFullscreen ? "black" : "rgba(0, 0, 0, 0.8)",
    bottom: 0,
    left: 0,
    position: "fixed",
    right: 0,
    top: 0,
    zIndex: 1199
  };
};
var Blanket = function Blanket2(props) {
  var getStyles2 = props.getStyles, innerProps = props.innerProps, isFullscreen = props.isFullscreen;
  return (0, import_glam.default)(Div, _extends2({ css: getStyles2("blanket", props), className: className("blanket", { isFullscreen }) }, innerProps));
};
var positionerCSS = function positionerCSS2() {
  return {
    alignItems: "center",
    bottom: 0,
    display: "flex ",
    justifyContent: "center",
    left: 0,
    position: "fixed",
    right: 0,
    top: 0,
    zIndex: 1200
  };
};
var Positioner = function Positioner2(props) {
  var children2 = props.children, getStyles2 = props.getStyles, innerProps = props.innerProps, isFullscreen = props.isFullscreen;
  return (0, import_glam.default)(
    Div,
    _extends2({ css: getStyles2(componentBaseClassNames.Positioner, props), className: className(componentBaseClassNames.Positioner, { isFullscreen }) }, innerProps),
    children2
  );
};
var dialogCSS = function dialogCSS2() {
  return {
    width: "100%"
  };
};
var Dialog = function Dialog2(props) {
  var children2 = props.children, getStyles2 = props.getStyles, innerProps = props.innerProps, isFullscreen = props.isFullscreen, removeFocusOn = props.removeFocusOn;
  return removeFocusOn ? (0, import_glam.default)(
    Div,
    _extends2({ css: getStyles2("dialog", props), className: className("dialog", { isFullscreen }) }, innerProps),
    children2
  ) : (0, import_glam.default)(
    FocusOn2,
    null,
    (0, import_glam.default)(
      Div,
      _extends2({ css: getStyles2("dialog", props), className: className("dialog", { isFullscreen }) }, innerProps),
      children2
    )
  );
};
function getSource(_ref) {
  var data = _ref.data, isFullscreen = _ref.isFullscreen;
  var _data$source = data.source, source = _data$source === void 0 ? data.src : _data$source;
  if (typeof source === "string")
    return source;
  return isFullscreen ? source.fullscreen : source.regular;
}
var viewCSS = function viewCSS2() {
  return {
    lineHeight: 0,
    position: "relative",
    textAlign: "center"
  };
};
var viewBaseClassName = componentBaseClassNames.View;
var View = function View2(props) {
  var data = props.data, formatters2 = props.formatters, getStyles2 = props.getStyles, index2 = props.index, isFullscreen = props.isFullscreen, isModal = props.isModal;
  var innerProps = {
    alt: formatters2.getAltText({ data, index: index2 }),
    src: getSource({ data, isFullscreen })
  };
  return (0, import_glam.default)(
    Div,
    { css: getStyles2(viewBaseClassName, props), className: className(viewBaseClassName, { isFullscreen, isModal }) },
    (0, import_glam.default)(Img, _extends2({}, innerProps, {
      className: className("view-image", { isFullscreen, isModal }),
      css: {
        height: "auto",
        maxHeight: "100vh",
        maxWidth: "100%",
        userSelect: "none"
      }
    }))
  );
};
var carouselComponents = {
  Container,
  Footer,
  FooterCaption,
  FooterCount,
  Header,
  HeaderClose,
  HeaderFullscreen,
  Navigation,
  NavigationPrev,
  NavigationNext,
  View
};
var defaultCarouselComponents = function defaultCarouselComponents2(providedComponents) {
  return _extends2({}, carouselComponents, providedComponents);
};
var modalComponents = {
  Blanket,
  Positioner,
  Dialog
};
var defaultModalComponents = function defaultModalComponents2(providedComponents) {
  return _extends2({}, modalComponents, providedComponents);
};
var defaultCarouselStyles = {
  container: containerCSS,
  footer: footerCSS,
  footerCaption: footerCaptionCSS,
  footerCount: footerCountCSS,
  header: headerCSS,
  headerClose: headerCloseCSS,
  headerFullscreen: headerFullscreenCSS,
  navigation: navigationCSS,
  navigationPrev: navigationPrevCSS,
  navigationNext: navigationNextCSS,
  view: viewCSS
};
var defaultModalStyles = {
  blanket: blanketCSS,
  dialog: dialogCSS,
  positioner: positionerCSS
  // Merge Utility
  // Allows consumers to extend a base Carousel or Modal with additional styles
};
var easing = "cubic-bezier(0.23, 1, 0.32, 1)";
var verticalOffset = 40;
var Fade = function Fade2(_ref) {
  var Tag = _ref.component, onEntered = _ref.onEntered, onExited = _ref.onExited, inProp = _ref.in, originalProps = _ref.innerProps, props = objectWithoutProperties(_ref, ["component", "onEntered", "onExited", "in", "innerProps"]);
  var enter = 300;
  var exit = 500;
  var fadeStyle = {
    transition: "opacity 200ms",
    opacity: 0
  };
  var fadeTransition = {
    entering: { opacity: 0 },
    entered: { opacity: 1 },
    exiting: { opacity: 0, transitionDuration: exit + "ms" }
  };
  return import_react17.default.createElement(
    Transition_default,
    { appear: true, mountOnEnter: true, unmountOnExit: true, onEntered, onExited, key: "fade", "in": inProp, timeout: { enter, exit } },
    function(status) {
      var innerProps = _extends2({}, originalProps, {
        style: _extends2({}, fadeStyle, fadeTransition[status])
      });
      if (status === "exited")
        return null;
      return import_react17.default.createElement(Tag, _extends2({ innerProps }, props));
    }
  );
};
var SlideUp = function SlideUp2(_ref2) {
  var Tag = _ref2.component, onEntered = _ref2.onEntered, onExited = _ref2.onExited, inProp = _ref2.in, originalProps = _ref2.innerProps, props = objectWithoutProperties(_ref2, ["component", "onEntered", "onExited", "in", "innerProps"]);
  var enter = 300;
  var exit = 500;
  var restingTransform = "translate3d(0, 0, 0)";
  var slideStyle = {
    transition: "transform " + enter + "ms " + easing + ", opacity " + enter + "ms " + easing,
    transform: restingTransform
  };
  var slideTransition = {
    entering: {
      opacity: 0,
      transform: "translate3d(0, " + verticalOffset + "px, 0) scale(0.9)"
    },
    entered: {
      opacity: 1,
      transform: restingTransform
    },
    exiting: {
      opacity: 0,
      transform: "translate3d(0, " + verticalOffset + "px, 0) scale(0.9)",
      transition: "transform " + exit + "ms " + easing + ", opacity " + exit + "ms " + easing
    }
  };
  return import_react17.default.createElement(
    Transition_default,
    { appear: true, "in": inProp, mountOnEnter: true, onEntered, onExited, timeout: { enter, exit }, unmountOnExit: true },
    function(status) {
      if (status === "exited")
        return null;
      var innerProps = _extends2({}, originalProps, {
        style: _extends2({}, slideStyle, slideTransition[status])
      });
      return import_react17.default.createElement(Tag, _extends2({ innerProps }, props));
    }
  );
};
var defaultProps2 = {
  allowFullscreen: !isTouch(),
  closeOnBackdropClick: true,
  closeOnEsc: true,
  preventScroll: true,
  styles: {}
  /** Classes that when clicked on, close the backdrop */
};
var backdropClassNames = new Set([componentBaseClassNames.View, componentBaseClassNames.Header, componentBaseClassNames.Footer, componentBaseClassNames.Track, componentBaseClassNames.Positioner].map(className));
var Modal = function(_Component) {
  inherits(Modal2, _Component);
  function Modal2(props) {
    classCallCheck(this, Modal2);
    var _this = possibleConstructorReturn(this, (Modal2.__proto__ || Object.getPrototypeOf(Modal2)).call(this, props));
    _initialiseProps.call(_this);
    _this.cacheComponents(props.components);
    _this.state = { isFullscreen: false, isClosing: false };
    return _this;
  }
  createClass(Modal2, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.components !== this.props.components) {
        this.cacheComponents(prevProps.components);
      }
    }
    // emulate `componentDidMount` & `componentWillUnmount`
    // called on complete of enter & exit transitions respectively
  }, {
    key: "getCommonProps",
    value: function getCommonProps() {
      var isFullscreen = this.state.isFullscreen;
      return {
        getStyles: this.getStyles,
        isFullscreen,
        modalProps: this.props
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _components = this.components, Blanket3 = _components.Blanket, Positioner3 = _components.Positioner, Dialog3 = _components.Dialog;
      var _props = this.props, allowFullscreen = _props.allowFullscreen, children2 = _props.children;
      var isFullscreen = this.state.isFullscreen;
      var commonProps = this.commonProps = this.getCommonProps();
      var transitionIn = this.props.in;
      var modalProps = {
        allowFullscreen,
        isFullscreen,
        onClose: this.handleClose,
        preventScroll: this.preventScroll,
        toggleFullscreen: this.toggleFullscreen
        // augment user carousel with modal props
        // $FlowFixMe
      };
      var carouselComponent = (0, import_react17.cloneElement)(children2, {
        isModal: true,
        modalProps
      });
      return (0, import_glam.default)(
        FullScreen,
        { handle: { active: isFullscreen }, onChange: this.handleFullscreenChange },
        (0, import_glam.default)(Fade, _extends2({}, commonProps, { component: Blanket3, "in": transitionIn })),
        (0, import_glam.default)(
          SlideUp,
          _extends2({}, commonProps, {
            component: Positioner3,
            "in": transitionIn,
            innerProps: {
              onClick: this.state.isClosing ? null : this.handleBackdropClick
            },
            onEntered: this.modalDidMount,
            onExited: this.modalWillUnmount
          }),
          (0, import_glam.default)(
            Dialog3,
            _extends2({ removeFocusOn: this.state.isClosing }, commonProps),
            carouselComponent
          )
        )
      );
    }
  }]);
  return Modal2;
}(import_react17.Component);
Modal.defaultProps = defaultProps2;
var _initialiseProps = function _initialiseProps2() {
  var _this2 = this;
  this.modalDidMount = function() {
    document.addEventListener("keyup", _this2.handleKeyUp);
    import_a11y_focus_store.default.storeFocus();
  };
  this.modalWillUnmount = function() {
    document.removeEventListener("keyup", _this2.handleKeyUp);
    import_a11y_focus_store.default.restoreFocus();
    _this2.setState({ isClosing: false });
  };
  this.cacheComponents = function(comps) {
    _this2.components = defaultModalComponents(comps);
  };
  this.handleFullscreenChange = function(isFullscreen) {
    _this2.setState({ isFullscreen });
  };
  this.handleKeyUp = function(event) {
    var _props2 = _this2.props, allowFullscreen = _props2.allowFullscreen, closeOnEsc = _props2.closeOnEsc;
    var isFullscreen = _this2.state.isFullscreen;
    var allowClose = event.key === "Escape" && closeOnEsc && !isFullscreen;
    if (allowFullscreen && event.key === "f") {
      _this2.toggleFullscreen();
    }
    if (allowClose)
      _this2.handleClose(event);
  };
  this.handleBackdropClick = function(event) {
    var hasBackdropClassName = false;
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = void 0;
    try {
      for (var _iterator = event.target.classList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var targetClass = _step.value;
        if (backdropClassNames.has(targetClass)) {
          hasBackdropClassName = true;
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
    if (!hasBackdropClassName || !_this2.props.closeOnBackdropClick) {
      return;
    }
    _this2.handleClose(event);
  };
  this.toggleFullscreen = function() {
    _this2.setState(function(state) {
      return { isFullscreen: !state.isFullscreen };
    });
  };
  this.handleClose = function(event) {
    var onClose = _this2.props.onClose;
    var _state = _this2.state, isFullscreen = _state.isFullscreen, isClosing = _state.isClosing;
    if (!isClosing) {
      _this2.setState({ isClosing: true });
      if (isFullscreen) {
        _this2.toggleFullscreen();
      }
      onClose(event);
    }
  };
  this.getStyles = function(key2, props) {
    var base = defaultModalStyles[key2](props);
    base.boxSizing = "border-box";
    var custom = _this2.props.styles[key2];
    return custom ? custom(base, props) : base;
  };
};
function getNextLabel(_ref) {
  var currentIndex = _ref.currentIndex, views = _ref.views;
  return "Show slide " + (currentIndex + 2) + " of " + views.length;
}
function getPrevLabel(_ref2) {
  var currentIndex = _ref2.currentIndex, views = _ref2.views;
  return "Show slide " + currentIndex + " of " + views.length;
}
function getNextTitle(props) {
  return "Next (right arrow)";
}
function getPrevTitle(props) {
  return "Previous (left arrow)";
}
function getCloseLabel(props) {
  return "Close (esc)";
}
function getFullscreenLabel(_ref3) {
  var isFullscreen = _ref3.isFullscreen;
  return isFullscreen ? "Exit fullscreen (f)" : "Enter fullscreen (f)";
}
function getAltText(_ref4) {
  var data = _ref4.data, index2 = _ref4.index;
  if (data.alt) {
    if (typeof data.alt !== "string") {
      console.error("Image " + (index2 + 1) + " had a non-string alt property, which will probably render incorrectly.\nInstead of a plain string it was ", data.alt);
    }
    return data.alt;
  }
  if (data.caption) {
    if (typeof data.caption !== "string") {
      console.warn("Image " + (index2 + 1) + " has a non-string caption, but no alt value provided. This will probably make the alt prop unintelligible for screen readers. Is this intentional?");
    }
    return data.caption;
  }
  return "Image " + (index2 + 1);
}
var formatters = {
  getAltText,
  getNextLabel,
  getPrevLabel,
  getNextTitle,
  getPrevTitle,
  getCloseLabel,
  getFullscreenLabel
};
var viewPagerStyles = {
  flex: "1 1 auto",
  position: "relative"
};
var frameStyles = { outline: 0 };
var defaultProps$1 = {
  currentIndex: 0,
  formatters,
  hideControlsWhenIdle: 3e3,
  showNavigationOnTouchDevice: false,
  styles: {},
  trackProps: {
    instant: !isTouch(),
    swipe: "touch"
  }
};
var trackBaseClassName = componentBaseClassNames.Track;
var Carousel = function(_Component) {
  inherits(Carousel2, _Component);
  function Carousel2(props) {
    classCallCheck(this, Carousel2);
    var _this = possibleConstructorReturn(this, (Carousel2.__proto__ || Object.getPrototypeOf(Carousel2)).call(this, props));
    _initialiseProps$1.call(_this);
    _this.cacheComponents(props.components);
    _this.state = {
      currentIndex: props.currentIndex,
      interactionIsIdle: isTouch()
    };
    return _this;
  }
  createClass(Carousel2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _props = this.props, hideControlsWhenIdle = _props.hideControlsWhenIdle, modalProps = _props.modalProps;
      var isModal = Boolean(modalProps);
      this.mounted = true;
      if (hideControlsWhenIdle && this.container) {
        this.container.addEventListener("mousedown", this.handleMouseActivity);
        this.container.addEventListener("mousemove", this.handleMouseActivity);
        this.container.addEventListener("touchmove", this.handleMouseActivity);
      }
      if (isModal) {
        this.focusViewFrame();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.components !== this.props.components) {
        this.cacheComponents(prevProps.components);
      }
      if (this.props.currentIndex !== prevProps.currentIndex) {
        this.setState({ currentIndex: this.props.currentIndex });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.mounted = false;
      if (this.props.hideControlsWhenIdle && this.container) {
        this.container.removeEventListener("mousedown", this.handleMouseActivity);
        this.container.removeEventListener("mousemove", this.handleMouseActivity);
        this.container.removeEventListener("touchmove", this.handleMouseActivity);
        this.handleMouseActivity.cancel();
      }
    }
    // ==============================
    // Refs
    // ==============================
    // ==============================
    // Utilities
    // ==============================
    // combine defaultProps with consumer props to maintain expected behaviour
    // combine defaultProps with consumer props to maintain expected behaviour
    // ==============================
    // Handlers
    // ==============================
    // ==============================
    // Renderers
    // ==============================
  }, {
    key: "getCommonProps",
    value: function getCommonProps() {
      var _props2 = this.props, frameProps = _props2.frameProps, trackProps = _props2.trackProps, modalProps = _props2.modalProps, views = _props2.views, showNavigationOnTouchDevice = _props2.showNavigationOnTouchDevice;
      var isModal = Boolean(modalProps);
      var isFullscreen = Boolean(modalProps && modalProps.isFullscreen);
      var _state = this.state, currentIndex = _state.currentIndex, interactionIsIdle = _state.interactionIsIdle;
      var currentView = this.getViewData();
      return {
        carouselProps: this.props,
        currentIndex,
        currentView,
        formatters: this.props.formatters,
        frameProps,
        getStyles: this.getStyles,
        showNavigationOnTouchDevice,
        isFullscreen,
        isModal,
        modalProps,
        interactionIsIdle,
        trackProps,
        views
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _components = this.components, Container3 = _components.Container, View3 = _components.View;
      var currentIndex = this.state.currentIndex;
      var _props3 = this.props, frameProps = _props3.frameProps, views = _props3.views;
      var commonProps = this.commonProps = this.getCommonProps();
      return (0, import_glam.default)(
        Container3,
        _extends2({}, commonProps, { innerProps: { innerRef: this.getContainer } }),
        this.renderHeader(),
        (0, import_glam.default)(
          import_react_view_pager.ViewPager,
          { tag: "main", style: viewPagerStyles, className: className("pager") },
          (0, import_glam.default)(
            import_react_view_pager.Frame,
            _extends2({}, frameProps, { ref: this.getFrame, className: className("frame"), style: frameStyles, tabIndex: "-1" }),
            (0, import_glam.default)(
              import_react_view_pager.Track,
              _extends2({}, this.getTrackProps(this.props), {
                style: { display: "flex", alignItems: "center" },
                currentView: currentIndex,
                className: className(trackBaseClassName),
                onViewChange: this.handleViewChange,
                ref: this.getTrack
              }),
              views && views.map(function(data, index2) {
                return (0, import_glam.default)(
                  import_react_view_pager.View,
                  { className: className("view-wrapper"), key: index2 },
                  (0, import_glam.default)(View3, _extends2({}, commonProps, { data, index: index2 }))
                );
              })
            )
          ),
          this.renderNavigation()
        ),
        this.renderFooter()
      );
    }
  }]);
  return Carousel2;
}(import_react17.Component);
Carousel.defaultProps = defaultProps$1;
var _initialiseProps$1 = function _initialiseProps3() {
  var _this2 = this;
  this.mounted = false;
  this.cacheComponents = function(comps) {
    _this2.components = defaultCarouselComponents(comps);
  };
  this.getContainer = function(ref) {
    _this2.container = ref;
  };
  this.getFooter = function(ref) {
    _this2.footer = ref;
  };
  this.getFrame = function(ref) {
    _this2.frame = (0, import_react_dom3.findDOMNode)(ref);
  };
  this.getHeader = function(ref) {
    _this2.header = ref;
  };
  this.getTrack = function(ref) {
    _this2.track = ref;
  };
  this.hasPreviousView = function() {
    var trackProps = _this2.props.trackProps;
    var currentIndex = _this2.state.currentIndex;
    return trackProps.infinite || currentIndex !== 0;
  };
  this.hasNextView = function() {
    var _props4 = _this2.props, trackProps = _props4.trackProps, views = _props4.views;
    var currentIndex = _this2.state.currentIndex;
    return trackProps.infinite || currentIndex !== views.length - 1;
  };
  this.getStyles = function(key2, props) {
    var base = defaultCarouselStyles[key2](props);
    base.boxSizing = "border-box";
    var custom = _this2.props.styles[key2];
    return custom ? custom(base, props) : base;
  };
  this.getTrackProps = function(props) {
    return _extends2({}, defaultProps$1.trackProps, props.trackProps);
  };
  this.getFormatters = function() {
    return _extends2({}, defaultProps$1.formatters, _this2.props.formatters);
  };
  this.getViewData = function() {
    var views = _this2.props.views;
    var currentIndex = _this2.state.currentIndex;
    return views[currentIndex];
  };
  this.focusViewFrame = function() {
    if (_this2.frame && document.activeElement !== _this2.frame) {
      _this2.frame.focus();
    }
  };
  this.prev = function(event) {
    event.stopPropagation();
    _this2.track.prev();
    _this2.focusViewFrame();
  };
  this.next = function(event) {
    event.stopPropagation();
    _this2.track.next();
    _this2.focusViewFrame();
  };
  this.handleMouseActivity = raf_schd_esm_default(function() {
    clearTimeout(_this2.timer);
    if (_this2.state.interactionIsIdle) {
      _this2.setState({ interactionIsIdle: false });
    }
    _this2.timer = setTimeout(function() {
      if (_this2.mounted) {
        _this2.setState({ interactionIsIdle: true });
      }
    }, _this2.props.hideControlsWhenIdle);
  });
  this.handleViewChange = function(indicies) {
    var trackProps = _this2.props.trackProps;
    var currentIndex = indicies[0];
    _this2.setState({ currentIndex });
    if (trackProps && trackProps.onViewChange) {
      trackProps.onViewChange(currentIndex);
    }
  };
  this.renderNavigation = function() {
    var _getFormatters = _this2.getFormatters(), getNextLabel2 = _getFormatters.getNextLabel, getPrevLabel2 = _getFormatters.getPrevLabel, getNextTitle2 = _getFormatters.getNextTitle, getPrevTitle2 = _getFormatters.getPrevTitle;
    var _components2 = _this2.components, Navigation3 = _components2.Navigation, NavigationPrev3 = _components2.NavigationPrev, NavigationNext3 = _components2.NavigationNext;
    var commonProps = _this2.commonProps;
    var showPrev = _this2.hasPreviousView();
    var showNext = _this2.hasNextView();
    var showNav = (showPrev || showNext) && Navigation3;
    return showNav ? (0, import_glam.default)(
      Navigation3,
      commonProps,
      showPrev && (0, import_glam.default)(NavigationPrev3, _extends2({}, commonProps, {
        align: "left",
        innerProps: {
          "aria-label": getPrevLabel2(commonProps),
          onClick: _this2.prev,
          title: getPrevTitle2(commonProps)
        }
      })),
      showNext && (0, import_glam.default)(NavigationNext3, _extends2({}, commonProps, {
        align: "right",
        innerProps: {
          "aria-label": getNextLabel2(commonProps),
          onClick: _this2.next,
          title: getNextTitle2(commonProps)
        }
      }))
    ) : null;
  };
  this.renderFooter = function() {
    var _components3 = _this2.components, Footer3 = _components3.Footer, FooterCaption3 = _components3.FooterCaption, FooterCount3 = _components3.FooterCount;
    var commonProps = _this2.commonProps;
    return Footer3 ? (0, import_glam.default)(Footer3, _extends2({}, commonProps, {
      components: {
        Caption: FooterCaption3,
        Count: FooterCount3
      },
      innerProps: { innerRef: _this2.getFooter }
    })) : null;
  };
  this.renderHeader = function() {
    var _components4 = _this2.components, Header3 = _components4.Header, HeaderClose3 = _components4.HeaderClose, HeaderFullscreen3 = _components4.HeaderFullscreen;
    var _getFormatters2 = _this2.getFormatters(), getCloseLabel2 = _getFormatters2.getCloseLabel, getFullscreenLabel2 = _getFormatters2.getFullscreenLabel;
    var commonProps = _this2.commonProps;
    return Header3 ? (0, import_glam.default)(Header3, _extends2({}, commonProps, {
      getCloseLabel: getCloseLabel2,
      getFullscreenLabel: getFullscreenLabel2,
      components: {
        CloseButton: HeaderClose3,
        FullscreenButton: HeaderFullscreen3
      },
      data: _this2.getViewData(),
      innerProps: { innerRef: _this2.getHeader }
    })) : null;
  };
};
var FirstChild = function FirstChild2(_ref) {
  var children2 = _ref.children;
  return import_react17.Children.toArray(children2)[0] || null;
};
var ModalGateway = function(_Component) {
  inherits(ModalGateway2, _Component);
  function ModalGateway2() {
    classCallCheck(this, ModalGateway2);
    return possibleConstructorReturn(this, (ModalGateway2.__proto__ || Object.getPrototypeOf(ModalGateway2)).apply(this, arguments));
  }
  createClass(ModalGateway2, [{
    key: "render",
    value: function render() {
      if (typeof window === "undefined")
        return null;
      var _props = this.props, target = _props.target, children2 = _props.children;
      return (0, import_react_dom3.createPortal)(import_react17.default.createElement(TransitionGroup_default, { component: FirstChild, children: children2 }), target);
    }
  }]);
  return ModalGateway2;
}(import_react17.Component);
ModalGateway.defaultProps = {
  target: typeof window !== "undefined" ? document.body : null
};
var react_images_es_default = Carousel;
export {
  Modal,
  ModalGateway,
  carouselComponents,
  react_images_es_default as default,
  modalComponents
};
//# sourceMappingURL=react-images.js.map
